-- phpMyAdmin SQL Dump
-- version 5.2.1
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: Feb 25, 2025 at 03:27 PM
-- Server version: 10.4.32-MariaDB
-- PHP Version: 8.2.12

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `spcp`
--

-- --------------------------------------------------------

--
-- Table structure for table `generirani_zadaci`
--

CREATE TABLE `generirani_zadaci` (
  `id` int(11) NOT NULL,
  `user_id` varchar(255) DEFAULT NULL,
  `lesson_id` int(11) DEFAULT NULL,
  `skripta` int(11) DEFAULT NULL,
  `time` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `generirani_zadaci`
--

INSERT INTO `generirani_zadaci` (`id`, `user_id`, `lesson_id`, `skripta`, `time`) VALUES
(13, NULL, 1, NULL, '2025-01-23 19:14:48'),
(14, NULL, 13, NULL, '2025-01-23 19:19:11'),
(15, NULL, 13, NULL, '2025-01-23 19:19:27'),
(16, NULL, 13, NULL, '2025-01-23 19:19:30'),
(17, 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 13, NULL, '2025-01-23 19:27:06'),
(18, 'dbaacb627139225570940a8d88d4372a02e07a39505b39918101d170b1eb4ba7', 13, NULL, '2025-01-23 19:28:31'),
(19, 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 2, NULL, '2025-01-23 19:52:16'),
(20, 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 10, NULL, '2025-01-23 19:53:44'),
(21, NULL, 7, NULL, '2025-01-23 20:01:23'),
(22, NULL, 8, NULL, '2025-01-23 20:29:13'),
(23, NULL, 1, NULL, '2025-01-23 20:34:06'),
(24, '0d2f77799a07615fb0b451589276e1d3872b239cf16cdd4771e0f06bf15c7bbd', 13, NULL, '2025-01-23 21:32:31'),
(25, NULL, 2, NULL, '2025-01-23 21:38:37'),
(26, NULL, 2, NULL, '2025-01-23 21:38:40'),
(27, NULL, 2, NULL, '2025-01-23 21:38:41'),
(28, NULL, 2, NULL, '2025-01-23 21:38:43'),
(29, NULL, 3, NULL, '2025-01-23 21:39:05'),
(30, NULL, 13, NULL, '2025-01-23 22:05:10'),
(31, '8b0d76cb839fdcb0656cb1a1f30bc0925a76666f4087e6ac73bffd7e07904da3', 1, NULL, '2025-01-23 22:33:19'),
(32, '8b0d76cb839fdcb0656cb1a1f30bc0925a76666f4087e6ac73bffd7e07904da3', 1, NULL, '2025-01-23 22:33:25'),
(33, '8b0d76cb839fdcb0656cb1a1f30bc0925a76666f4087e6ac73bffd7e07904da3', 1, NULL, '2025-01-23 23:05:07'),
(34, '7d2cf0d9d0d9582e71aa4318171f3cb193c583886406f5b6da01fe61c0f86014', 2, NULL, '2025-01-23 23:37:21'),
(35, '8bba7cafd0b58d3a1fa352d915b3a7de09b6849d39f025bab4c7db8150e9eab0', 4, NULL, '2025-01-24 01:52:05'),
(36, '7d2cf0d9d0d9582e71aa4318171f3cb193c583886406f5b6da01fe61c0f86014', 1, NULL, '2025-01-24 02:04:57'),
(37, '7d2cf0d9d0d9582e71aa4318171f3cb193c583886406f5b6da01fe61c0f86014', 3, NULL, '2025-01-24 02:06:19'),
(38, NULL, 1, NULL, '2025-01-24 07:23:19'),
(39, '828f780d414e88dd1a6bedf766ca33afe922adb2751dd7ff80e3e6015e5dfc53', 8, NULL, '2025-01-24 07:43:17'),
(40, '828f780d414e88dd1a6bedf766ca33afe922adb2751dd7ff80e3e6015e5dfc53', 13, NULL, '2025-01-24 07:43:36'),
(41, '828f780d414e88dd1a6bedf766ca33afe922adb2751dd7ff80e3e6015e5dfc53', 13, NULL, '2025-01-24 07:43:41'),
(42, 'dbaacb627139225570940a8d88d4372a02e07a39505b39918101d170b1eb4ba7', 5, NULL, '2025-01-24 10:16:02'),
(43, 'dbaacb627139225570940a8d88d4372a02e07a39505b39918101d170b1eb4ba7', 6, NULL, '2025-01-24 13:12:01'),
(44, NULL, 13, NULL, '2025-01-24 13:46:47'),
(45, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 1, NULL, '2025-01-24 14:25:41'),
(46, '9bbf55d761cff5732e61b6f6261244c418fafa39810ebf06e33849347f9f78b6', 1, NULL, '2025-01-24 14:25:41'),
(47, '4d68b640e11c344aea40978be477ec059755c7726e8cb81ef53536b75900fa54', 5, NULL, '2025-01-24 14:31:35'),
(48, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 1, NULL, '2025-01-24 15:00:04'),
(49, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 1, NULL, '2025-01-24 15:00:09'),
(50, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 2, NULL, '2025-01-24 15:03:28'),
(51, '4d68b640e11c344aea40978be477ec059755c7726e8cb81ef53536b75900fa54', 13, NULL, '2025-01-24 15:26:48'),
(52, NULL, 13, NULL, '2025-01-24 16:10:43'),
(53, '16c2085c5a22bbfda66a99b47d16dea527e2cff14e28ea161d18e6222b88509d', 3, NULL, '2025-01-24 16:32:00'),
(54, '16c2085c5a22bbfda66a99b47d16dea527e2cff14e28ea161d18e6222b88509d', 3, NULL, '2025-01-24 16:32:22'),
(55, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 1, NULL, '2025-01-24 16:59:40'),
(56, 'fc2758e5b1a37664fc074de887110394b5d20769f1e8a847f57fca8f190ed8ef', 1, NULL, '2025-01-24 17:28:11'),
(57, NULL, 13, NULL, '2025-01-24 17:31:22'),
(58, NULL, 11, NULL, '2025-01-24 17:33:48'),
(59, NULL, 11, NULL, '2025-01-24 17:33:51'),
(60, NULL, 1, NULL, '2025-01-24 17:56:09'),
(61, '4eac9a034c1ac3083d299a58bf5d48451463e11516ae1c4d111c9c0ebe4c8db9', 4, NULL, '2025-01-24 18:06:40'),
(62, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 13, NULL, '2025-01-24 19:58:54'),
(63, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 13, NULL, '2025-01-24 19:59:24'),
(64, '879dac72fac1fd4ff551c3733bb101ce5c9902e8001cc0fb286c35700879e3dd', 3, NULL, '2025-01-24 20:15:19'),
(65, NULL, 13, NULL, '2025-01-24 21:35:26'),
(66, '579ee699d9c5290b59cbdce2bc0ae4cc0a8d28b10725bd9f88be3c44025157a7', 3, NULL, '2025-01-24 22:06:49'),
(67, NULL, 6, NULL, '2025-01-24 22:21:26'),
(68, NULL, 13, NULL, '2025-01-24 23:37:05'),
(69, 'e992d6ecb73144037efb858b15952c634b6492a61a52953555f3d66cbe5497f2', 1, NULL, '2025-01-24 23:47:38'),
(70, 'e992d6ecb73144037efb858b15952c634b6492a61a52953555f3d66cbe5497f2', 1, NULL, '2025-01-24 23:47:53'),
(71, 'e992d6ecb73144037efb858b15952c634b6492a61a52953555f3d66cbe5497f2', 1, NULL, '2025-01-24 23:48:00'),
(72, NULL, 13, NULL, '2025-01-25 10:50:03'),
(73, NULL, 4, NULL, '2025-01-25 11:11:11'),
(74, NULL, 3, NULL, '2025-01-25 11:36:17'),
(75, '879dac72fac1fd4ff551c3733bb101ce5c9902e8001cc0fb286c35700879e3dd', 13, NULL, '2025-01-25 12:07:56'),
(76, NULL, 3, NULL, '2025-01-25 12:18:59'),
(77, '7d2f67defe32a2e6d3ce4771e035892ecd547ca9ba728a658269815f1dcdc9c3', 1, NULL, '2025-01-25 13:06:22'),
(78, 'a28726fd19ffb8688139948bde919614ae59d176476908ee451e3bf028552c8e', 1, NULL, '2025-01-25 13:42:02'),
(79, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 1, NULL, '2025-01-25 14:04:40'),
(80, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 2, NULL, '2025-01-25 14:05:05'),
(81, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 4, NULL, '2025-01-25 14:06:14'),
(82, NULL, 13, NULL, '2025-01-25 14:06:30'),
(83, '44062a52289278d9a44b095e2b0a87ec5c07ae92e86b1f0fac1d897616883809', 1, NULL, '2025-01-25 15:23:11'),
(84, NULL, 14, NULL, '2025-01-25 15:31:23'),
(85, NULL, 14, NULL, '2025-01-25 15:31:30'),
(86, NULL, 14, NULL, '2025-01-25 15:31:38'),
(87, NULL, 13, NULL, '2025-01-25 15:37:52'),
(88, '5e78de61e49b998bf77e5df3c3da7dcd9779c22736c574ac5080b689fbca30c4', 3, NULL, '2025-01-25 15:45:25'),
(89, '5e78de61e49b998bf77e5df3c3da7dcd9779c22736c574ac5080b689fbca30c4', 4, NULL, '2025-01-25 15:49:53'),
(90, NULL, 13, NULL, '2025-01-25 15:51:05'),
(91, '792c22aa9f78873ddcce7bc91c320fb413c0a9778a30cea88920b2614b3e4b31', 3, NULL, '2025-01-25 16:09:07'),
(92, '579ee699d9c5290b59cbdce2bc0ae4cc0a8d28b10725bd9f88be3c44025157a7', 4, NULL, '2025-01-25 16:16:52'),
(93, NULL, 13, NULL, '2025-01-25 16:33:01'),
(94, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 2, NULL, '2025-01-25 16:33:31'),
(95, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 3, NULL, '2025-01-25 16:34:13'),
(96, '792c22aa9f78873ddcce7bc91c320fb413c0a9778a30cea88920b2614b3e4b31', 3, NULL, '2025-01-25 16:43:35'),
(97, 'dbaacb627139225570940a8d88d4372a02e07a39505b39918101d170b1eb4ba7', 7, NULL, '2025-01-25 16:58:03'),
(98, NULL, 13, NULL, '2025-01-25 17:34:12'),
(99, NULL, 5, NULL, '2025-01-25 17:47:52'),
(100, NULL, 5, NULL, '2025-01-25 17:48:40'),
(101, NULL, 5, NULL, '2025-01-25 17:48:52'),
(102, NULL, 5, NULL, '2025-01-25 17:48:58'),
(103, 'b8d862b54585e17a99f45ca2d1506fb985e71293f1aee0d0c915f132ccfcb913', 1, NULL, '2025-01-25 17:50:05'),
(104, NULL, 1, NULL, '2025-01-25 18:11:24'),
(105, NULL, 1, NULL, '2025-01-25 18:11:34'),
(106, NULL, 1, NULL, '2025-01-25 18:11:35'),
(107, NULL, 13, NULL, '2025-01-25 18:51:25'),
(108, NULL, 1, NULL, '2025-01-25 18:53:45'),
(109, NULL, 10, NULL, '2025-01-25 19:20:53'),
(110, NULL, 3, NULL, '2025-01-25 19:21:45'),
(111, NULL, 13, NULL, '2025-01-25 19:30:45'),
(112, '70ace0d2aeefb2c71519d6d6e190bb88b4b5c96bfb8ef7301eb0c3f7ddea8982', 1, NULL, '2025-01-25 19:31:07'),
(113, '70ace0d2aeefb2c71519d6d6e190bb88b4b5c96bfb8ef7301eb0c3f7ddea8982', 2, NULL, '2025-01-25 19:38:48'),
(114, NULL, 13, NULL, '2025-01-25 20:11:29'),
(115, NULL, 13, NULL, '2025-01-25 21:27:21'),
(116, '4be7b24385e6411a49200e9ccd2f82a31d78dd942f1f97f958627e6b64057e2b', 2, NULL, '2025-01-25 21:50:36'),
(117, '4be7b24385e6411a49200e9ccd2f82a31d78dd942f1f97f958627e6b64057e2b', 3, NULL, '2025-01-25 22:00:18'),
(118, NULL, 2, NULL, '2025-01-25 22:34:25'),
(119, '3bf0cc992832353925b63792d007f0c3ab41b603410559f1d675f506382345a5', 1, NULL, '2025-01-25 23:22:03'),
(120, NULL, 13, NULL, '2025-01-25 23:36:02'),
(121, NULL, 3, NULL, '2025-01-25 23:37:33'),
(122, '2dfbed779ee5ac47c58920e533b8ca3ed1e301ba5f984ed0f8e2bbb843bffaf3', 7, NULL, '2025-01-25 23:42:06'),
(123, '2dfbed779ee5ac47c58920e533b8ca3ed1e301ba5f984ed0f8e2bbb843bffaf3', 7, NULL, '2025-01-25 23:42:14'),
(124, '2dfbed779ee5ac47c58920e533b8ca3ed1e301ba5f984ed0f8e2bbb843bffaf3', 13, NULL, '2025-01-25 23:43:02'),
(125, 'b13961ac3bbb93acf454b9189aaf0b5f007e7e5db2ca61bf2efe203afeec45e5', 1, NULL, '2025-01-25 23:51:55'),
(126, '2dfbed779ee5ac47c58920e533b8ca3ed1e301ba5f984ed0f8e2bbb843bffaf3', 13, NULL, '2025-01-26 00:00:45'),
(127, '8bba7cafd0b58d3a1fa352d915b3a7de09b6849d39f025bab4c7db8150e9eab0', 6, NULL, '2025-01-26 00:21:03'),
(128, NULL, 4, NULL, '2025-01-26 00:31:10'),
(129, '2933b14dc502c74d2de621be08e33413f92280605235bcdbcd30dd55d06df1ee', 1, NULL, '2025-01-26 03:18:56'),
(130, NULL, 1, NULL, '2025-01-26 03:30:27'),
(131, NULL, 1, NULL, '2025-01-26 03:30:31'),
(132, NULL, 1, NULL, '2025-01-26 03:30:31'),
(133, NULL, 1, NULL, '2025-01-26 03:30:31'),
(134, NULL, 13, NULL, '2025-01-26 03:31:01'),
(135, NULL, 13, NULL, '2025-01-26 03:31:03'),
(136, NULL, 13, NULL, '2025-01-26 03:31:03'),
(137, NULL, 13, NULL, '2025-01-26 03:31:03'),
(138, NULL, 13, NULL, '2025-01-26 07:50:36'),
(139, NULL, 13, NULL, '2025-01-26 08:59:56'),
(140, NULL, 13, NULL, '2025-01-26 09:00:48'),
(141, NULL, 13, NULL, '2025-01-26 09:00:49'),
(142, NULL, 13, NULL, '2025-01-26 09:00:50'),
(143, NULL, 13, NULL, '2025-01-26 09:00:51'),
(144, NULL, 13, NULL, '2025-01-26 09:00:52'),
(145, NULL, 13, NULL, '2025-01-26 09:00:53'),
(146, NULL, 13, NULL, '2025-01-26 09:00:54'),
(147, NULL, 4, NULL, '2025-01-26 09:03:43'),
(148, NULL, 5, NULL, '2025-01-26 09:40:51'),
(149, NULL, 5, NULL, '2025-01-26 09:40:56'),
(150, 'dbaacb627139225570940a8d88d4372a02e07a39505b39918101d170b1eb4ba7', 14, NULL, '2025-01-26 10:05:43'),
(151, 'dbaacb627139225570940a8d88d4372a02e07a39505b39918101d170b1eb4ba7', 11, NULL, '2025-01-26 10:05:58'),
(152, 'dbaacb627139225570940a8d88d4372a02e07a39505b39918101d170b1eb4ba7', 10, NULL, '2025-01-26 10:06:14'),
(153, 'dbaacb627139225570940a8d88d4372a02e07a39505b39918101d170b1eb4ba7', 5, NULL, '2025-01-26 10:06:32'),
(154, NULL, 4, NULL, '2025-01-26 10:34:50'),
(155, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 4, NULL, '2025-01-26 10:36:26'),
(156, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 14, NULL, '2025-01-26 10:56:29'),
(157, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 4, NULL, '2025-01-26 11:27:02'),
(158, NULL, 3, NULL, '2025-01-26 11:27:41'),
(159, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 4, NULL, '2025-01-26 11:27:49'),
(160, '311cea470d658c6d0e9d491527c69e2140430f64442e7a6ff0de234f7a0c3f81', 2, NULL, '2025-01-26 12:03:44'),
(161, NULL, 13, NULL, '2025-01-26 12:05:00'),
(162, '311cea470d658c6d0e9d491527c69e2140430f64442e7a6ff0de234f7a0c3f81', 2, NULL, '2025-01-26 12:16:48'),
(163, '311cea470d658c6d0e9d491527c69e2140430f64442e7a6ff0de234f7a0c3f81', 3, NULL, '2025-01-26 12:17:03'),
(164, NULL, 8, NULL, '2025-01-26 12:54:46'),
(165, '311cea470d658c6d0e9d491527c69e2140430f64442e7a6ff0de234f7a0c3f81', 13, NULL, '2025-01-26 12:55:32'),
(166, NULL, 13, NULL, '2025-01-26 13:14:42'),
(167, NULL, 13, NULL, '2025-01-26 13:27:24'),
(168, NULL, 7, NULL, '2025-01-26 13:32:59'),
(169, NULL, 7, NULL, '2025-01-26 13:33:08'),
(170, NULL, 7, NULL, '2025-01-26 13:33:15'),
(171, '70ace0d2aeefb2c71519d6d6e190bb88b4b5c96bfb8ef7301eb0c3f7ddea8982', 3, NULL, '2025-01-26 13:47:09'),
(172, NULL, 4, NULL, '2025-01-26 14:08:16'),
(173, '5ab2efa659df7fe84b31f0e01e871f5e6c48849717ee515f267362d4cb756e4e', 13, NULL, '2025-01-26 14:21:59'),
(174, '389d4f9ddca4668158d7e58cb697fe327cc443b9209773dd1ed1c85b4c9ba96e', 13, NULL, '2025-01-26 14:40:00'),
(175, 'a6cb371fc331515a4faa19d8ac00add1222ffce9d91c96a4cab6a127ec1b3225', 1, NULL, '2025-01-26 15:13:52'),
(176, 'a6cb371fc331515a4faa19d8ac00add1222ffce9d91c96a4cab6a127ec1b3225', 1, NULL, '2025-01-26 15:14:06'),
(177, NULL, 5, NULL, '2025-01-26 15:21:27'),
(178, NULL, 5, NULL, '2025-01-26 15:22:00'),
(179, '0f6206977837da1a13ea24f4ae39fbece282ec56e119b8f5f0d2c6f72308faf3', 3, NULL, '2025-01-26 15:35:40'),
(180, '15b65b7b22280f6418d874d3cc6081be944f341b1ec9779c81e4139a9193eb1f', 1, NULL, '2025-01-26 15:50:39'),
(181, '15b65b7b22280f6418d874d3cc6081be944f341b1ec9779c81e4139a9193eb1f', 1, NULL, '2025-01-26 15:50:55'),
(182, '15b65b7b22280f6418d874d3cc6081be944f341b1ec9779c81e4139a9193eb1f', 1, NULL, '2025-01-26 15:50:58'),
(183, NULL, 2, NULL, '2025-01-26 15:53:54'),
(184, NULL, 2, NULL, '2025-01-26 15:55:07'),
(185, NULL, 2, NULL, '2025-01-26 15:55:10'),
(186, NULL, 2, NULL, '2025-01-26 15:55:11'),
(187, NULL, 5, NULL, '2025-01-26 15:55:22'),
(188, NULL, 5, NULL, '2025-01-26 15:57:33'),
(189, NULL, 5, NULL, '2025-01-26 15:58:26'),
(190, NULL, 5, NULL, '2025-01-26 15:58:34'),
(191, NULL, 5, NULL, '2025-01-26 15:58:39'),
(192, NULL, 6, NULL, '2025-01-26 15:59:04'),
(193, NULL, 7, NULL, '2025-01-26 16:02:16'),
(194, NULL, 8, NULL, '2025-01-26 16:05:28'),
(195, NULL, 8, NULL, '2025-01-26 16:11:00'),
(196, NULL, 8, NULL, '2025-01-26 16:11:04'),
(197, NULL, 8, NULL, '2025-01-26 16:11:50'),
(198, NULL, 8, NULL, '2025-01-26 16:11:53'),
(199, NULL, 8, NULL, '2025-01-26 16:12:29'),
(200, NULL, 8, NULL, '2025-01-26 16:12:40'),
(201, NULL, 13, NULL, '2025-01-26 16:12:57'),
(202, NULL, 13, NULL, '2025-01-26 16:13:57'),
(203, NULL, 13, NULL, '2025-01-26 16:14:37'),
(204, NULL, 13, NULL, '2025-01-26 16:15:17'),
(205, NULL, 13, NULL, '2025-01-26 16:15:44'),
(206, NULL, 13, NULL, '2025-01-26 16:15:49'),
(207, NULL, 13, NULL, '2025-01-26 16:15:52'),
(208, NULL, 13, NULL, '2025-01-26 16:16:06'),
(209, NULL, 13, NULL, '2025-01-26 16:17:41'),
(210, 'a6cb371fc331515a4faa19d8ac00add1222ffce9d91c96a4cab6a127ec1b3225', 2, NULL, '2025-01-26 16:18:16'),
(211, '8b0d76cb839fdcb0656cb1a1f30bc0925a76666f4087e6ac73bffd7e07904da3', 13, NULL, '2025-01-26 16:32:09'),
(212, 'a6cb371fc331515a4faa19d8ac00add1222ffce9d91c96a4cab6a127ec1b3225', 3, NULL, '2025-01-26 16:47:16'),
(213, NULL, 1, NULL, '2025-01-26 16:56:44'),
(214, NULL, 1, NULL, '2025-01-26 16:57:44'),
(215, NULL, 3, NULL, '2025-01-26 17:41:34'),
(216, NULL, 13, NULL, '2025-01-26 17:56:17'),
(217, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 10, NULL, '2025-01-26 18:28:15'),
(218, '7f5a9bbe7ced28113870c1c58588597b0ec1fd40794f49791b79bc527ed4b753', 13, NULL, '2025-01-26 18:29:27'),
(219, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 10, NULL, '2025-01-26 18:31:14'),
(220, NULL, 1, NULL, '2025-01-26 19:03:58'),
(221, NULL, 1, NULL, '2025-01-26 19:04:04'),
(222, NULL, 1, NULL, '2025-01-26 19:04:05'),
(223, NULL, 1, NULL, '2025-01-26 19:04:08'),
(224, NULL, 2, NULL, '2025-01-26 19:04:12'),
(225, NULL, 2, NULL, '2025-01-26 19:04:50'),
(226, NULL, 2, NULL, '2025-01-26 19:04:52'),
(227, NULL, 3, NULL, '2025-01-26 19:04:54'),
(228, NULL, 3, NULL, '2025-01-26 19:07:22'),
(229, NULL, 4, NULL, '2025-01-26 19:07:50'),
(230, NULL, 5, NULL, '2025-01-26 19:10:00'),
(231, NULL, 6, NULL, '2025-01-26 19:11:26'),
(232, NULL, 6, NULL, '2025-01-26 19:12:42'),
(233, NULL, 6, NULL, '2025-01-26 19:12:46'),
(234, NULL, 6, NULL, '2025-01-26 19:13:04'),
(235, NULL, 7, NULL, '2025-01-26 19:13:19'),
(236, NULL, 7, NULL, '2025-01-26 19:14:12'),
(237, NULL, 8, NULL, '2025-01-26 19:17:12'),
(238, '43c44c419969c5f367a8f10ff7286fce65472057222e8717656c2c6690248cd9', 2, NULL, '2025-01-26 19:18:33'),
(239, '43c44c419969c5f367a8f10ff7286fce65472057222e8717656c2c6690248cd9', 2, NULL, '2025-01-26 19:18:37'),
(240, '43c44c419969c5f367a8f10ff7286fce65472057222e8717656c2c6690248cd9', 2, NULL, '2025-01-26 19:18:38'),
(241, '43c44c419969c5f367a8f10ff7286fce65472057222e8717656c2c6690248cd9', 2, NULL, '2025-01-26 19:18:39'),
(242, '43c44c419969c5f367a8f10ff7286fce65472057222e8717656c2c6690248cd9', 2, NULL, '2025-01-26 19:18:39'),
(243, '43c44c419969c5f367a8f10ff7286fce65472057222e8717656c2c6690248cd9', 2, NULL, '2025-01-26 19:18:40'),
(244, '43c44c419969c5f367a8f10ff7286fce65472057222e8717656c2c6690248cd9', 2, NULL, '2025-01-26 19:18:40'),
(245, '43c44c419969c5f367a8f10ff7286fce65472057222e8717656c2c6690248cd9', 2, NULL, '2025-01-26 19:18:41'),
(246, NULL, 9, NULL, '2025-01-26 19:19:22'),
(247, NULL, 13, NULL, '2025-01-26 19:26:39'),
(248, '7d2cf0d9d0d9582e71aa4318171f3cb193c583886406f5b6da01fe61c0f86014', 14, NULL, '2025-01-26 21:43:57'),
(249, '7d2cf0d9d0d9582e71aa4318171f3cb193c583886406f5b6da01fe61c0f86014', 14, NULL, '2025-01-26 21:44:01'),
(250, NULL, 14, NULL, '2025-01-26 23:59:10'),
(251, 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 14, NULL, '2025-01-27 00:03:18'),
(252, NULL, 4, NULL, '2025-01-27 01:20:20'),
(253, NULL, 4, NULL, '2025-01-27 01:20:24'),
(254, NULL, 4, NULL, '2025-01-27 01:20:24'),
(255, NULL, 4, NULL, '2025-01-27 01:20:24'),
(256, NULL, 5, NULL, '2025-01-27 01:22:11'),
(257, NULL, 5, NULL, '2025-01-27 01:22:13'),
(258, NULL, 5, NULL, '2025-01-27 01:22:13'),
(259, NULL, 5, NULL, '2025-01-27 01:22:13'),
(260, NULL, 7, NULL, '2025-01-27 01:22:21'),
(261, NULL, 7, NULL, '2025-01-27 01:22:23'),
(262, NULL, 7, NULL, '2025-01-27 01:22:24'),
(263, NULL, 7, NULL, '2025-01-27 01:22:24'),
(264, NULL, 10, NULL, '2025-01-27 01:22:31'),
(265, NULL, 10, NULL, '2025-01-27 01:22:33'),
(266, NULL, 10, NULL, '2025-01-27 01:22:34'),
(267, NULL, 10, NULL, '2025-01-27 01:22:34'),
(268, NULL, 11, NULL, '2025-01-27 01:22:42'),
(269, NULL, 11, NULL, '2025-01-27 01:22:43'),
(270, NULL, 11, NULL, '2025-01-27 01:22:43'),
(271, NULL, 11, NULL, '2025-01-27 01:22:43'),
(272, NULL, 13, NULL, '2025-01-27 01:22:51'),
(273, NULL, 13, NULL, '2025-01-27 01:22:54'),
(274, NULL, 13, NULL, '2025-01-27 01:22:54'),
(275, NULL, 13, NULL, '2025-01-27 01:22:54'),
(276, NULL, 13, NULL, '2025-01-27 01:23:29'),
(277, NULL, 13, NULL, '2025-01-27 01:23:39'),
(278, NULL, 13, NULL, '2025-01-27 01:23:45'),
(279, NULL, 13, NULL, '2025-01-27 01:23:48'),
(280, NULL, 13, NULL, '2025-01-27 01:23:51'),
(281, NULL, 13, NULL, '2025-01-27 01:23:57'),
(282, NULL, 13, NULL, '2025-01-27 01:24:33'),
(283, NULL, 10, NULL, '2025-01-27 01:24:59'),
(284, NULL, 14, NULL, '2025-01-27 01:25:04'),
(285, NULL, 14, NULL, '2025-01-27 01:25:05'),
(286, NULL, 14, NULL, '2025-01-27 01:25:05'),
(287, NULL, 14, NULL, '2025-01-27 01:25:05'),
(288, NULL, 3, NULL, '2025-01-27 01:25:16'),
(289, NULL, 3, NULL, '2025-01-27 01:25:19'),
(290, NULL, 3, NULL, '2025-01-27 01:25:19'),
(291, NULL, 3, NULL, '2025-01-27 01:25:19'),
(292, 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 14, NULL, '2025-01-27 09:19:41'),
(293, NULL, 13, NULL, '2025-01-27 10:00:48'),
(294, '828f780d414e88dd1a6bedf766ca33afe922adb2751dd7ff80e3e6015e5dfc53', 14, NULL, '2025-01-27 10:21:14'),
(295, '828f780d414e88dd1a6bedf766ca33afe922adb2751dd7ff80e3e6015e5dfc53', 14, NULL, '2025-01-27 10:21:15'),
(296, '828f780d414e88dd1a6bedf766ca33afe922adb2751dd7ff80e3e6015e5dfc53', 14, NULL, '2025-01-27 10:21:15'),
(297, NULL, 14, NULL, '2025-01-27 10:28:05'),
(298, NULL, 14, NULL, '2025-01-27 10:28:07'),
(299, NULL, 14, NULL, '2025-01-27 10:28:07'),
(300, NULL, 14, NULL, '2025-01-27 10:47:33'),
(301, 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 14, NULL, '2025-01-27 10:51:10'),
(302, '32c13ae4a963b27933639bd984cb83c693d4ba91e37c24c480369487d3c399c0', 1, NULL, '2025-01-27 10:51:56'),
(303, '32c13ae4a963b27933639bd984cb83c693d4ba91e37c24c480369487d3c399c0', 2, NULL, '2025-01-27 10:53:38'),
(304, '32c13ae4a963b27933639bd984cb83c693d4ba91e37c24c480369487d3c399c0', 14, NULL, '2025-01-27 10:56:41'),
(305, 'a1acb4d23e5cc057c1c09212d374c77a8c0920929708bc423a9584ad606c21ba', 3, NULL, '2025-01-27 11:31:21'),
(306, '4be7b24385e6411a49200e9ccd2f82a31d78dd942f1f97f958627e6b64057e2b', 4, NULL, '2025-01-27 12:30:06'),
(307, '6bac57a07e5773be8879dbe1a3530520be9a6a604c48d69fcabae431441c3a6f', 1, NULL, '2025-01-27 13:10:09'),
(308, '4be7b24385e6411a49200e9ccd2f82a31d78dd942f1f97f958627e6b64057e2b', 6, NULL, '2025-01-27 14:05:14'),
(309, '9bbf55d761cff5732e61b6f6261244c418fafa39810ebf06e33849347f9f78b6', 3, NULL, '2025-01-27 14:05:32'),
(310, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 4, NULL, '2025-01-27 14:50:14'),
(311, '96f7dcc5d9549abcaaeed4850d1fe40d6b0d5776a557a74d631e2f3b85e7e068', 3, NULL, '2025-01-27 14:54:41'),
(312, '2933b14dc502c74d2de621be08e33413f92280605235bcdbcd30dd55d06df1ee', 2, NULL, '2025-01-27 15:25:16'),
(313, '8b16b46ba76bc4ad95ca97d447df70a6fa2317f400e3f021ba38c0427b7cbab2', 1, NULL, '2025-01-27 15:46:22'),
(314, '8b16b46ba76bc4ad95ca97d447df70a6fa2317f400e3f021ba38c0427b7cbab2', 4, NULL, '2025-01-27 15:46:57'),
(315, '2933b14dc502c74d2de621be08e33413f92280605235bcdbcd30dd55d06df1ee', 3, NULL, '2025-01-27 15:48:53'),
(316, '2933b14dc502c74d2de621be08e33413f92280605235bcdbcd30dd55d06df1ee', 14, NULL, '2025-01-27 15:49:32'),
(317, '2933b14dc502c74d2de621be08e33413f92280605235bcdbcd30dd55d06df1ee', 13, NULL, '2025-01-27 15:49:44'),
(318, NULL, 4, NULL, '2025-01-27 16:15:41'),
(319, 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 14, NULL, '2025-01-27 16:17:26'),
(320, '2933b14dc502c74d2de621be08e33413f92280605235bcdbcd30dd55d06df1ee', 4, NULL, '2025-01-27 16:47:03'),
(321, '2933b14dc502c74d2de621be08e33413f92280605235bcdbcd30dd55d06df1ee', 6, NULL, '2025-01-27 16:56:27'),
(322, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 5, NULL, '2025-01-27 17:48:36'),
(323, 'b44f0cbac520d02094fd07d0aced10f58aee8e23843767bc0fae9e1031772368', 14, NULL, '2025-01-27 18:50:38'),
(324, '8b16b46ba76bc4ad95ca97d447df70a6fa2317f400e3f021ba38c0427b7cbab2', 13, NULL, '2025-01-27 18:54:06'),
(325, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 14, NULL, '2025-01-27 19:25:25'),
(326, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 14, NULL, '2025-01-27 19:51:12'),
(327, 'b5333ce6e9d5782aa4ea90d8349860ea030721dc48fa14515fa9e66363a9d740', 1, NULL, '2025-01-27 20:52:55'),
(328, 'b5333ce6e9d5782aa4ea90d8349860ea030721dc48fa14515fa9e66363a9d740', 1, NULL, '2025-01-27 21:01:34'),
(329, 'b5333ce6e9d5782aa4ea90d8349860ea030721dc48fa14515fa9e66363a9d740', 2, NULL, '2025-01-27 21:02:02'),
(330, '261bf6c044241a5e43650ef4e00188619fd632d76985982b97e51932f1724963', 13, NULL, '2025-01-27 21:06:37'),
(331, 'b5333ce6e9d5782aa4ea90d8349860ea030721dc48fa14515fa9e66363a9d740', 3, NULL, '2025-01-27 21:35:26'),
(332, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 4, NULL, '2025-01-27 22:24:33'),
(333, '2933b14dc502c74d2de621be08e33413f92280605235bcdbcd30dd55d06df1ee', 6, NULL, '2025-01-27 22:27:35'),
(334, '2933b14dc502c74d2de621be08e33413f92280605235bcdbcd30dd55d06df1ee', 6, NULL, '2025-01-27 22:27:41'),
(335, '57c9a13b1a13424a5aa068668018724c88bf8df84d21b0c8619e8edc29de2204', 1, NULL, '2025-01-27 22:49:11'),
(336, '57c9a13b1a13424a5aa068668018724c88bf8df84d21b0c8619e8edc29de2204', 1, NULL, '2025-01-27 22:49:38'),
(337, '57c9a13b1a13424a5aa068668018724c88bf8df84d21b0c8619e8edc29de2204', 1, NULL, '2025-01-27 22:49:43'),
(338, '57c9a13b1a13424a5aa068668018724c88bf8df84d21b0c8619e8edc29de2204', 1, NULL, '2025-01-27 22:49:44'),
(339, '57c9a13b1a13424a5aa068668018724c88bf8df84d21b0c8619e8edc29de2204', 1, NULL, '2025-01-27 22:49:46'),
(340, '2933b14dc502c74d2de621be08e33413f92280605235bcdbcd30dd55d06df1ee', 5, NULL, '2025-01-27 23:08:30'),
(341, 'b5333ce6e9d5782aa4ea90d8349860ea030721dc48fa14515fa9e66363a9d740', 4, NULL, '2025-01-28 07:01:47'),
(342, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 4, NULL, '2025-01-28 08:20:45'),
(343, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 4, NULL, '2025-01-28 08:23:24'),
(344, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 5, NULL, '2025-01-28 08:38:04'),
(345, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 4, NULL, '2025-01-28 08:39:15'),
(346, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 4, NULL, '2025-01-28 08:39:25'),
(347, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 4, NULL, '2025-01-28 08:39:56'),
(348, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 4, NULL, '2025-01-28 08:40:12'),
(349, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 4, NULL, '2025-01-28 08:46:05'),
(350, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 4, NULL, '2025-01-28 08:46:22'),
(351, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 4, NULL, '2025-01-28 08:46:31'),
(352, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 4, NULL, '2025-01-28 08:46:38'),
(353, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 5, NULL, '2025-01-28 09:05:21'),
(354, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 5, NULL, '2025-01-28 09:05:30'),
(355, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 5, NULL, '2025-01-28 10:23:25'),
(356, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 5, NULL, '2025-01-28 10:23:37'),
(357, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 5, NULL, '2025-01-28 10:23:45'),
(358, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 5, NULL, '2025-01-28 10:23:52'),
(359, '1e6446e64c6e02ef5028de71eb79d965a8ec07a499f92dfd46d900f68894a42c', 4, NULL, '2025-01-28 11:42:55'),
(360, '15b65b7b22280f6418d874d3cc6081be944f341b1ec9779c81e4139a9193eb1f', 5, NULL, '2025-01-28 12:50:27'),
(361, '3c4b5d1b0cbf03c5e077b9f30f46b31e762f8a1545372908b2381fbcf1ee2d9c', 1, NULL, '2025-01-28 14:50:31'),
(362, '3c4b5d1b0cbf03c5e077b9f30f46b31e762f8a1545372908b2381fbcf1ee2d9c', 1, NULL, '2025-01-28 14:50:57'),
(363, '3c4b5d1b0cbf03c5e077b9f30f46b31e762f8a1545372908b2381fbcf1ee2d9c', 1, NULL, '2025-01-28 14:51:08'),
(364, '15b65b7b22280f6418d874d3cc6081be944f341b1ec9779c81e4139a9193eb1f', 5, NULL, '2025-01-28 15:08:48'),
(365, '57c9a13b1a13424a5aa068668018724c88bf8df84d21b0c8619e8edc29de2204', 1, NULL, '2025-01-28 15:11:46'),
(366, '57c9a13b1a13424a5aa068668018724c88bf8df84d21b0c8619e8edc29de2204', 1, NULL, '2025-01-28 15:12:00'),
(367, '57c9a13b1a13424a5aa068668018724c88bf8df84d21b0c8619e8edc29de2204', 1, NULL, '2025-01-28 15:12:29'),
(368, '3c4b5d1b0cbf03c5e077b9f30f46b31e762f8a1545372908b2381fbcf1ee2d9c', 3, NULL, '2025-01-28 15:30:11'),
(369, '3c4b5d1b0cbf03c5e077b9f30f46b31e762f8a1545372908b2381fbcf1ee2d9c', 3, NULL, '2025-01-28 15:30:16'),
(370, '3c4b5d1b0cbf03c5e077b9f30f46b31e762f8a1545372908b2381fbcf1ee2d9c', 3, NULL, '2025-01-28 15:30:18'),
(371, '3c4b5d1b0cbf03c5e077b9f30f46b31e762f8a1545372908b2381fbcf1ee2d9c', 3, NULL, '2025-01-28 15:30:21'),
(372, '3c4b5d1b0cbf03c5e077b9f30f46b31e762f8a1545372908b2381fbcf1ee2d9c', 3, NULL, '2025-01-28 15:30:23'),
(373, '3c4b5d1b0cbf03c5e077b9f30f46b31e762f8a1545372908b2381fbcf1ee2d9c', 3, NULL, '2025-01-28 15:30:25'),
(374, '3c4b5d1b0cbf03c5e077b9f30f46b31e762f8a1545372908b2381fbcf1ee2d9c', 3, NULL, '2025-01-28 15:30:26'),
(375, '3c4b5d1b0cbf03c5e077b9f30f46b31e762f8a1545372908b2381fbcf1ee2d9c', 3, NULL, '2025-01-28 15:30:28'),
(376, '3c4b5d1b0cbf03c5e077b9f30f46b31e762f8a1545372908b2381fbcf1ee2d9c', 3, NULL, '2025-01-28 15:30:30'),
(377, '3c4b5d1b0cbf03c5e077b9f30f46b31e762f8a1545372908b2381fbcf1ee2d9c', 3, NULL, '2025-01-28 15:30:31'),
(378, '3c4b5d1b0cbf03c5e077b9f30f46b31e762f8a1545372908b2381fbcf1ee2d9c', 3, NULL, '2025-01-28 15:30:33'),
(379, '9de8a79e20b405ddd21216364e8f91852a78f22dcf44eb3e05128486533d3844', 14, NULL, '2025-01-28 21:35:41'),
(380, '9de8a79e20b405ddd21216364e8f91852a78f22dcf44eb3e05128486533d3844', 14, NULL, '2025-01-28 21:55:39'),
(381, '9de8a79e20b405ddd21216364e8f91852a78f22dcf44eb3e05128486533d3844', 4, NULL, '2025-01-28 21:56:15'),
(382, '9de8a79e20b405ddd21216364e8f91852a78f22dcf44eb3e05128486533d3844', 4, NULL, '2025-01-28 21:57:29'),
(383, '9de8a79e20b405ddd21216364e8f91852a78f22dcf44eb3e05128486533d3844', 4, NULL, '2025-01-28 21:57:43'),
(384, '3010e2331f600f07d0431d1d7b553b5f8ba9e4778473af0ad89ab2afdce82d9a', 3, NULL, '2025-01-29 02:34:48'),
(385, '9de8a79e20b405ddd21216364e8f91852a78f22dcf44eb3e05128486533d3844', 14, NULL, '2025-01-29 14:04:01'),
(386, '9de8a79e20b405ddd21216364e8f91852a78f22dcf44eb3e05128486533d3844', 14, NULL, '2025-01-29 14:04:02'),
(387, '9de8a79e20b405ddd21216364e8f91852a78f22dcf44eb3e05128486533d3844', 14, NULL, '2025-01-29 14:04:03'),
(388, '9de8a79e20b405ddd21216364e8f91852a78f22dcf44eb3e05128486533d3844', 14, NULL, '2025-01-29 14:04:05'),
(389, '9de8a79e20b405ddd21216364e8f91852a78f22dcf44eb3e05128486533d3844', 14, NULL, '2025-01-29 14:04:06'),
(390, '9de8a79e20b405ddd21216364e8f91852a78f22dcf44eb3e05128486533d3844', 14, NULL, '2025-01-29 14:04:08'),
(391, '9de8a79e20b405ddd21216364e8f91852a78f22dcf44eb3e05128486533d3844', 14, NULL, '2025-01-29 14:04:09'),
(392, '9de8a79e20b405ddd21216364e8f91852a78f22dcf44eb3e05128486533d3844', 14, NULL, '2025-01-29 14:04:13'),
(393, '9de8a79e20b405ddd21216364e8f91852a78f22dcf44eb3e05128486533d3844', 14, NULL, '2025-01-29 14:04:14'),
(394, '9de8a79e20b405ddd21216364e8f91852a78f22dcf44eb3e05128486533d3844', 14, NULL, '2025-01-29 14:04:14'),
(395, '9de8a79e20b405ddd21216364e8f91852a78f22dcf44eb3e05128486533d3844', 14, NULL, '2025-01-29 14:04:15'),
(396, '9de8a79e20b405ddd21216364e8f91852a78f22dcf44eb3e05128486533d3844', 14, NULL, '2025-01-29 14:04:15'),
(397, '9de8a79e20b405ddd21216364e8f91852a78f22dcf44eb3e05128486533d3844', 14, NULL, '2025-01-29 14:04:16'),
(398, '9de8a79e20b405ddd21216364e8f91852a78f22dcf44eb3e05128486533d3844', 14, NULL, '2025-01-29 14:04:17'),
(399, '9de8a79e20b405ddd21216364e8f91852a78f22dcf44eb3e05128486533d3844', 14, NULL, '2025-01-29 14:04:17'),
(400, '9de8a79e20b405ddd21216364e8f91852a78f22dcf44eb3e05128486533d3844', 14, NULL, '2025-01-29 14:04:18'),
(401, 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 1, NULL, '2025-02-05 11:23:32'),
(402, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 2, NULL, '2025-02-05 11:28:49'),
(403, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 2, NULL, '2025-02-05 20:25:40'),
(404, 'f4935d14cd392eb4556b9258c77cebc1bf038bb6fc8fb3a5b2573871e836ea06', 5, NULL, '2025-02-08 17:18:21'),
(405, 'ce0ba750c77a0d076f8cd464d59020112c54353af5a6db653e90304aeb8c54c9', 2, NULL, '2025-02-09 20:42:25'),
(406, '8bba7cafd0b58d3a1fa352d915b3a7de09b6849d39f025bab4c7db8150e9eab0', 4, NULL, '2025-02-10 00:26:20'),
(407, '8bba7cafd0b58d3a1fa352d915b3a7de09b6849d39f025bab4c7db8150e9eab0', 6, NULL, '2025-02-10 00:41:05'),
(408, 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 8, NULL, '2025-02-10 22:15:45'),
(409, 'e7d2cfa2ae54d2e34cb3d5b8c9072350ae21542bf8d83bac85e655b499c2c7ff', 1, NULL, '2025-02-11 09:16:55'),
(410, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 1, NULL, '2025-02-11 10:16:19'),
(411, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 2, NULL, '2025-02-11 10:17:36'),
(412, 'e7d2cfa2ae54d2e34cb3d5b8c9072350ae21542bf8d83bac85e655b499c2c7ff', 2, NULL, '2025-02-11 10:23:52'),
(413, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 3, NULL, '2025-02-11 10:29:12'),
(414, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 4, NULL, '2025-02-11 10:38:20'),
(415, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 5, NULL, '2025-02-11 10:46:05'),
(416, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 6, NULL, '2025-02-11 10:52:06'),
(417, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 7, NULL, '2025-02-11 10:54:57'),
(418, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 8, NULL, '2025-02-11 10:56:43'),
(419, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 9, NULL, '2025-02-11 11:00:43'),
(420, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 10, NULL, '2025-02-11 11:02:15'),
(421, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 13, NULL, '2025-02-11 11:02:30'),
(422, 'e7d2cfa2ae54d2e34cb3d5b8c9072350ae21542bf8d83bac85e655b499c2c7ff', 3, NULL, '2025-02-11 11:03:36'),
(423, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 13, NULL, '2025-02-11 11:07:41'),
(424, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 13, NULL, '2025-02-11 11:08:09'),
(425, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 13, NULL, '2025-02-11 11:08:15'),
(426, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 13, NULL, '2025-02-11 11:08:21'),
(427, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 13, NULL, '2025-02-11 11:08:26'),
(428, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 13, NULL, '2025-02-11 11:08:29'),
(429, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 13, NULL, '2025-02-11 11:08:32'),
(430, 'e7d2cfa2ae54d2e34cb3d5b8c9072350ae21542bf8d83bac85e655b499c2c7ff', 3, NULL, '2025-02-11 12:17:59'),
(431, 'e7d2cfa2ae54d2e34cb3d5b8c9072350ae21542bf8d83bac85e655b499c2c7ff', 4, NULL, '2025-02-11 12:19:01'),
(432, 'e7d2cfa2ae54d2e34cb3d5b8c9072350ae21542bf8d83bac85e655b499c2c7ff', 5, NULL, '2025-02-11 13:05:03'),
(433, 'e7d2cfa2ae54d2e34cb3d5b8c9072350ae21542bf8d83bac85e655b499c2c7ff', 6, NULL, '2025-02-11 13:53:31'),
(434, 'e685eda25decf3357c53c966f7679f79444bbfcb06925e5cb83167951db53e9a', 14, NULL, '2025-02-11 16:23:23'),
(435, 'ce0ba750c77a0d076f8cd464d59020112c54353af5a6db653e90304aeb8c54c9', 14, NULL, '2025-02-11 20:31:52'),
(436, 'e417e513031cce08d9152074dc5f98fc08bd668849df38f5a13aea80215f9a5b', 13, NULL, '2025-02-12 10:20:10'),
(437, 'e417e513031cce08d9152074dc5f98fc08bd668849df38f5a13aea80215f9a5b', 13, NULL, '2025-02-12 11:23:47'),
(438, 'e7d2cfa2ae54d2e34cb3d5b8c9072350ae21542bf8d83bac85e655b499c2c7ff', 6, NULL, '2025-02-12 12:08:56'),
(439, 'e417e513031cce08d9152074dc5f98fc08bd668849df38f5a13aea80215f9a5b', 13, NULL, '2025-02-12 12:24:45'),
(440, 'e417e513031cce08d9152074dc5f98fc08bd668849df38f5a13aea80215f9a5b', 13, NULL, '2025-02-12 12:33:53'),
(441, 'e7d2cfa2ae54d2e34cb3d5b8c9072350ae21542bf8d83bac85e655b499c2c7ff', 7, NULL, '2025-02-12 13:13:45'),
(442, 'e7d2cfa2ae54d2e34cb3d5b8c9072350ae21542bf8d83bac85e655b499c2c7ff', 7, NULL, '2025-02-12 13:14:01'),
(443, 'e7d2cfa2ae54d2e34cb3d5b8c9072350ae21542bf8d83bac85e655b499c2c7ff', 7, NULL, '2025-02-12 13:14:09'),
(444, 'e7d2cfa2ae54d2e34cb3d5b8c9072350ae21542bf8d83bac85e655b499c2c7ff', 7, NULL, '2025-02-12 13:14:18'),
(445, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 1, NULL, '2025-02-12 14:04:17'),
(446, 'e417e513031cce08d9152074dc5f98fc08bd668849df38f5a13aea80215f9a5b', 10, NULL, '2025-02-12 14:20:23'),
(447, 'e417e513031cce08d9152074dc5f98fc08bd668849df38f5a13aea80215f9a5b', 11, NULL, '2025-02-12 14:20:48'),
(448, 'e417e513031cce08d9152074dc5f98fc08bd668849df38f5a13aea80215f9a5b', 7, NULL, '2025-02-12 14:21:14'),
(449, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 1, NULL, '2025-02-12 14:26:01'),
(450, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 2, NULL, '2025-02-12 14:26:10'),
(451, 'e7d2cfa2ae54d2e34cb3d5b8c9072350ae21542bf8d83bac85e655b499c2c7ff', 7, NULL, '2025-02-12 14:45:59'),
(452, 'e7d2cfa2ae54d2e34cb3d5b8c9072350ae21542bf8d83bac85e655b499c2c7ff', 7, NULL, '2025-02-12 14:46:04'),
(453, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 2, NULL, '2025-02-12 14:54:58'),
(454, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 3, NULL, '2025-02-12 14:55:22'),
(455, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 4, NULL, '2025-02-12 15:21:10'),
(456, 'e417e513031cce08d9152074dc5f98fc08bd668849df38f5a13aea80215f9a5b', 11, NULL, '2025-02-12 15:55:48'),
(457, 'e417e513031cce08d9152074dc5f98fc08bd668849df38f5a13aea80215f9a5b', 11, NULL, '2025-02-12 15:55:50'),
(458, 'e417e513031cce08d9152074dc5f98fc08bd668849df38f5a13aea80215f9a5b', 11, NULL, '2025-02-12 15:55:51'),
(459, 'e7d2cfa2ae54d2e34cb3d5b8c9072350ae21542bf8d83bac85e655b499c2c7ff', 8, NULL, '2025-02-12 16:27:23'),
(460, '1e6446e64c6e02ef5028de71eb79d965a8ec07a499f92dfd46d900f68894a42c', 13, NULL, '2025-02-12 16:36:01'),
(461, 'e7d2cfa2ae54d2e34cb3d5b8c9072350ae21542bf8d83bac85e655b499c2c7ff', 8, NULL, '2025-02-12 17:02:40'),
(462, 'e7d2cfa2ae54d2e34cb3d5b8c9072350ae21542bf8d83bac85e655b499c2c7ff', 8, NULL, '2025-02-12 17:19:17'),
(463, 'e7d2cfa2ae54d2e34cb3d5b8c9072350ae21542bf8d83bac85e655b499c2c7ff', 9, NULL, '2025-02-12 17:32:25'),
(464, '1e6446e64c6e02ef5028de71eb79d965a8ec07a499f92dfd46d900f68894a42c', 5, NULL, '2025-02-12 17:37:47'),
(465, 'e7d2cfa2ae54d2e34cb3d5b8c9072350ae21542bf8d83bac85e655b499c2c7ff', 13, NULL, '2025-02-12 17:57:10'),
(466, '15b65b7b22280f6418d874d3cc6081be944f341b1ec9779c81e4139a9193eb1f', 6, NULL, '2025-02-12 18:22:04'),
(467, '15b65b7b22280f6418d874d3cc6081be944f341b1ec9779c81e4139a9193eb1f', 7, NULL, '2025-02-12 18:23:39'),
(468, '15b65b7b22280f6418d874d3cc6081be944f341b1ec9779c81e4139a9193eb1f', 8, NULL, '2025-02-12 18:24:27'),
(469, 'e7d2cfa2ae54d2e34cb3d5b8c9072350ae21542bf8d83bac85e655b499c2c7ff', 13, NULL, '2025-02-13 10:00:46'),
(470, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 6, NULL, '2025-02-13 13:01:07'),
(471, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 14, NULL, '2025-02-13 13:01:22'),
(472, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 14, NULL, '2025-02-13 13:25:47'),
(473, 'b23702a871baa92ddbd7c6f5d8295168c18d6c983795739c04c5894f80fb6a34', 6, NULL, '2025-02-13 14:49:46'),
(474, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 5, NULL, '2025-02-13 15:13:49'),
(475, '144c0f724cc02cd3d9ad75185a6f4b2f0e12fa60ac8f514a7874a0d40158cac5', 13, NULL, '2025-02-13 15:27:54'),
(476, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 5, NULL, '2025-02-13 16:52:18'),
(477, '1e6446e64c6e02ef5028de71eb79d965a8ec07a499f92dfd46d900f68894a42c', 13, NULL, '2025-02-13 20:03:04'),
(478, '1e6446e64c6e02ef5028de71eb79d965a8ec07a499f92dfd46d900f68894a42c', 13, NULL, '2025-02-13 20:03:10'),
(479, '1e6446e64c6e02ef5028de71eb79d965a8ec07a499f92dfd46d900f68894a42c', 13, NULL, '2025-02-13 20:04:03'),
(480, '1e6446e64c6e02ef5028de71eb79d965a8ec07a499f92dfd46d900f68894a42c', 13, NULL, '2025-02-13 20:04:07'),
(481, '1e6446e64c6e02ef5028de71eb79d965a8ec07a499f92dfd46d900f68894a42c', 13, NULL, '2025-02-13 20:04:17'),
(482, '1e6446e64c6e02ef5028de71eb79d965a8ec07a499f92dfd46d900f68894a42c', 13, NULL, '2025-02-13 20:04:19'),
(483, 'b23702a871baa92ddbd7c6f5d8295168c18d6c983795739c04c5894f80fb6a34', 14, NULL, '2025-02-14 04:28:20'),
(484, 'b23702a871baa92ddbd7c6f5d8295168c18d6c983795739c04c5894f80fb6a34', 14, NULL, '2025-02-14 04:28:24'),
(485, 'b23702a871baa92ddbd7c6f5d8295168c18d6c983795739c04c5894f80fb6a34', 13, NULL, '2025-02-14 04:28:38'),
(486, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 14, NULL, '2025-02-14 06:04:24'),
(487, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 14, NULL, '2025-02-14 06:09:26'),
(488, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 14, NULL, '2025-02-14 06:09:30'),
(489, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 14, NULL, '2025-02-14 06:09:31'),
(490, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 13, NULL, '2025-02-14 06:09:45'),
(491, '15b65b7b22280f6418d874d3cc6081be944f341b1ec9779c81e4139a9193eb1f', 7, NULL, '2025-02-14 06:11:04'),
(492, '15b65b7b22280f6418d874d3cc6081be944f341b1ec9779c81e4139a9193eb1f', 4, NULL, '2025-02-14 06:11:32'),
(493, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 7, NULL, '2025-02-14 07:20:03'),
(494, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 4, NULL, '2025-02-14 07:23:20'),
(495, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 1, NULL, '2025-02-24 22:15:04'),
(496, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 3, NULL, '2025-02-24 22:15:15'),
(497, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 5, NULL, '2025-02-24 22:29:26'),
(498, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 2, NULL, '2025-02-25 14:59:48'),
(499, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 1, NULL, '2025-02-25 15:13:16'),
(500, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 3, NULL, '2025-02-25 15:16:28');

-- --------------------------------------------------------

--
-- Table structure for table `login`
--

CREATE TABLE `login` (
  `user_id` varchar(255) NOT NULL,
  `id` int(11) NOT NULL,
  `time` datetime NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `login`
--

INSERT INTO `login` (`user_id`, `id`, `time`) VALUES
('9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 1, '0000-00-00 00:00:00'),
('9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 2, '2025-01-23 13:56:45'),
('96f7dcc5d9549abcaaeed4850d1fe40d6b0d5776a557a74d631e2f3b85e7e068', 3, '2025-01-23 14:08:45'),
('828f780d414e88dd1a6bedf766ca33afe922adb2751dd7ff80e3e6015e5dfc53', 4, '2025-01-23 14:16:37'),
('1e6446e64c6e02ef5028de71eb79d965a8ec07a499f92dfd46d900f68894a42c', 5, '2025-01-23 14:16:53'),
('1d0586ee37e1bcd2ecada05ff695b0a5a83fecb204077c417fd8820ab0c78a69', 6, '2025-01-23 14:28:25'),
('16c2085c5a22bbfda66a99b47d16dea527e2cff14e28ea161d18e6222b88509d', 7, '2025-01-23 14:39:41'),
('01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 8, '2025-01-23 14:40:37'),
('7f5a9bbe7ced28113870c1c58588597b0ec1fd40794f49791b79bc527ed4b753', 9, '2025-01-23 15:11:05'),
('f4935d14cd392eb4556b9258c77cebc1bf038bb6fc8fb3a5b2573871e836ea06', 10, '2025-01-23 15:11:23'),
('c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 11, '2025-01-23 15:20:28'),
('7c7bf32bc77fa1f28df22d3841ed1ab5365924198cc0c244a321b4f8e293889d', 12, '2025-01-23 16:01:12'),
('16c2085c5a22bbfda66a99b47d16dea527e2cff14e28ea161d18e6222b88509d', 13, '2025-01-23 16:28:19'),
('5ab2efa659df7fe84b31f0e01e871f5e6c48849717ee515f267362d4cb756e4e', 14, '2025-01-23 16:59:11'),
('0507efb1c3bdf9effc1b5c92df0b53fbd752856c2e7abb2193e87da551cdb191', 15, '2025-01-23 17:03:34'),
('792c22aa9f78873ddcce7bc91c320fb413c0a9778a30cea88920b2614b3e4b31', 16, '2025-01-23 17:11:35'),
('fc2758e5b1a37664fc074de887110394b5d20769f1e8a847f57fca8f190ed8ef', 17, '2025-01-23 17:12:54'),
('e504b5a0db1cf8a5733c55f325867b190bd82a491173de3483bef022dab233a6', 18, '2025-01-23 17:20:42'),
('c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 19, '2025-01-23 17:40:58'),
('d2d468ff74d900dbcb55dfcc618c54418573c5a85306d8ae5a555ac62c0ff6cb', 20, '2025-01-23 18:31:50'),
('828f780d414e88dd1a6bedf766ca33afe922adb2751dd7ff80e3e6015e5dfc53', 21, '2025-01-23 18:37:27'),
('dbaacb627139225570940a8d88d4372a02e07a39505b39918101d170b1eb4ba7', 22, '2025-01-23 19:28:15'),
('16c2085c5a22bbfda66a99b47d16dea527e2cff14e28ea161d18e6222b88509d', 23, '2025-01-23 19:34:01'),
('1d0586ee37e1bcd2ecada05ff695b0a5a83fecb204077c417fd8820ab0c78a69', 24, '2025-01-23 19:49:53'),
('e29603b349847c21a3db3625e781c737ea1514581d4efed629cb69040e4f029a', 25, '2025-01-23 20:05:57'),
('7d2cf0d9d0d9582e71aa4318171f3cb193c583886406f5b6da01fe61c0f86014', 26, '2025-01-23 21:08:08'),
('16c2085c5a22bbfda66a99b47d16dea527e2cff14e28ea161d18e6222b88509d', 27, '2025-01-23 21:23:29'),
('0d2f77799a07615fb0b451589276e1d3872b239cf16cdd4771e0f06bf15c7bbd', 28, '2025-01-23 21:31:59'),
('792c22aa9f78873ddcce7bc91c320fb413c0a9778a30cea88920b2614b3e4b31', 29, '2025-01-23 21:39:33'),
('8b0d76cb839fdcb0656cb1a1f30bc0925a76666f4087e6ac73bffd7e07904da3', 30, '2025-01-23 22:29:06'),
('879dac72fac1fd4ff551c3733bb101ce5c9902e8001cc0fb286c35700879e3dd', 31, '2025-01-23 23:06:01'),
('8bba7cafd0b58d3a1fa352d915b3a7de09b6849d39f025bab4c7db8150e9eab0', 32, '2025-01-24 00:00:13'),
('828f780d414e88dd1a6bedf766ca33afe922adb2751dd7ff80e3e6015e5dfc53', 33, '2025-01-24 07:27:32'),
('dbaacb627139225570940a8d88d4372a02e07a39505b39918101d170b1eb4ba7', 34, '2025-01-24 10:12:52'),
('7d2f67defe32a2e6d3ce4771e035892ecd547ca9ba728a658269815f1dcdc9c3', 35, '2025-01-24 11:29:53'),
('9bbf55d761cff5732e61b6f6261244c418fafa39810ebf06e33849347f9f78b6', 36, '2025-01-24 12:14:35'),
('4d68b640e11c344aea40978be477ec059755c7726e8cb81ef53536b75900fa54', 37, '2025-01-24 13:17:13'),
('ae0d918c1eab5a1b53fa184bc99d199efab2faf507514fd04592683eeaf66987', 38, '2025-01-24 13:58:57'),
('f0ed9f66e43e0462cb5ca6cf237f89f090f6dd6d28a759aef6a523b047317cd7', 39, '2025-01-24 14:03:37'),
('01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 40, '2025-01-24 14:25:27'),
('fc2758e5b1a37664fc074de887110394b5d20769f1e8a847f57fca8f190ed8ef', 41, '2025-01-24 16:18:01'),
('8bba7cafd0b58d3a1fa352d915b3a7de09b6849d39f025bab4c7db8150e9eab0', 42, '2025-01-24 16:30:04'),
('23e5a6aa291431d59cfc0f89e2b9dfcb82bcbb370aadce3ddad50dcc53109d65', 43, '2025-01-24 16:31:46'),
('f4935d14cd392eb4556b9258c77cebc1bf038bb6fc8fb3a5b2573871e836ea06', 44, '2025-01-24 16:41:31'),
('9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 45, '2025-01-24 16:53:37'),
('1d0586ee37e1bcd2ecada05ff695b0a5a83fecb204077c417fd8820ab0c78a69', 46, '2025-01-24 16:56:09'),
('879dac72fac1fd4ff551c3733bb101ce5c9902e8001cc0fb286c35700879e3dd', 47, '2025-01-24 17:05:12'),
('fc2758e5b1a37664fc074de887110394b5d20769f1e8a847f57fca8f190ed8ef', 48, '2025-01-24 17:10:25'),
('792c22aa9f78873ddcce7bc91c320fb413c0a9778a30cea88920b2614b3e4b31', 49, '2025-01-24 17:13:44'),
('579ee699d9c5290b59cbdce2bc0ae4cc0a8d28b10725bd9f88be3c44025157a7', 50, '2025-01-24 17:36:17'),
('9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 51, '2025-01-24 17:51:10'),
('4eac9a034c1ac3083d299a58bf5d48451463e11516ae1c4d111c9c0ebe4c8db9', 52, '2025-01-24 17:57:58'),
('d24897649bbdd21432322383d094466adadba74282b78a84bd474efb68980d13', 53, '2025-01-24 18:09:49'),
('e992d6ecb73144037efb858b15952c634b6492a61a52953555f3d66cbe5497f2', 54, '2025-01-24 21:14:10'),
('4d68b640e11c344aea40978be477ec059755c7726e8cb81ef53536b75900fa54', 55, '2025-01-24 21:35:40'),
('8bba7cafd0b58d3a1fa352d915b3a7de09b6849d39f025bab4c7db8150e9eab0', 56, '2025-01-24 22:12:41'),
('5ab2efa659df7fe84b31f0e01e871f5e6c48849717ee515f267362d4cb756e4e', 57, '2025-01-25 08:29:10'),
('6724526905b215ea8da2643797c737d0ade88b5d1c81a91e978dc07816044b2e', 58, '2025-01-25 10:49:43'),
('7a04f848947f0e9929b4a19e8ae0d4fa76da6b86d60094527d68395a6f7334d2', 59, '2025-01-25 10:49:51'),
('879dac72fac1fd4ff551c3733bb101ce5c9902e8001cc0fb286c35700879e3dd', 60, '2025-01-25 12:07:47'),
('96f7dcc5d9549abcaaeed4850d1fe40d6b0d5776a557a74d631e2f3b85e7e068', 61, '2025-01-25 12:11:05'),
('f4935d14cd392eb4556b9258c77cebc1bf038bb6fc8fb3a5b2573871e836ea06', 62, '2025-01-25 12:33:25'),
('7d2f67defe32a2e6d3ce4771e035892ecd547ca9ba728a658269815f1dcdc9c3', 63, '2025-01-25 13:05:33'),
('a28726fd19ffb8688139948bde919614ae59d176476908ee451e3bf028552c8e', 64, '2025-01-25 13:35:46'),
('44062a52289278d9a44b095e2b0a87ec5c07ae92e86b1f0fac1d897616883809', 65, '2025-01-25 13:49:23'),
('9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 66, '2025-01-25 14:04:36'),
('828f780d414e88dd1a6bedf766ca33afe922adb2751dd7ff80e3e6015e5dfc53', 67, '2025-01-25 14:15:20'),
('5e78de61e49b998bf77e5df3c3da7dcd9779c22736c574ac5080b689fbca30c4', 68, '2025-01-25 15:13:16'),
('792c22aa9f78873ddcce7bc91c320fb413c0a9778a30cea88920b2614b3e4b31', 69, '2025-01-25 16:08:55'),
('250d2d47fa90881224826e0b248ede0df932d54e0e3307d649e7db772a074145', 70, '2025-01-25 16:14:01'),
('4eac9a034c1ac3083d299a58bf5d48451463e11516ae1c4d111c9c0ebe4c8db9', 71, '2025-01-25 16:43:04'),
('b8d862b54585e17a99f45ca2d1506fb985e71293f1aee0d0c915f132ccfcb913', 72, '2025-01-25 17:15:47'),
('220cee9e8580d7e73d67de7f2ef2b62803af7526eebfc4183a95f4e2ee9ee258', 73, '2025-01-25 17:47:58'),
('1e6446e64c6e02ef5028de71eb79d965a8ec07a499f92dfd46d900f68894a42c', 74, '2025-01-25 18:17:45'),
('2dfbed779ee5ac47c58920e533b8ca3ed1e301ba5f984ed0f8e2bbb843bffaf3', 75, '2025-01-25 19:08:42'),
('70ace0d2aeefb2c71519d6d6e190bb88b4b5c96bfb8ef7301eb0c3f7ddea8982', 76, '2025-01-25 19:30:25'),
('43b81c33c1ba0af0e35edcb185e501af50aadc2ecf1183cc01766c4c20e71cde', 77, '2025-01-25 19:35:55'),
('b8d862b54585e17a99f45ca2d1506fb985e71293f1aee0d0c915f132ccfcb913', 78, '2025-01-25 19:38:11'),
('220cee9e8580d7e73d67de7f2ef2b62803af7526eebfc4183a95f4e2ee9ee258', 79, '2025-01-25 20:21:44'),
('311cea470d658c6d0e9d491527c69e2140430f64442e7a6ff0de234f7a0c3f81', 80, '2025-01-25 20:54:59'),
('4be7b24385e6411a49200e9ccd2f82a31d78dd942f1f97f958627e6b64057e2b', 81, '2025-01-25 21:30:04'),
('bf80520a7d74d78bb76618760033c98242db15b36312d2fd797c58fb252a5925', 82, '2025-01-25 21:41:54'),
('bf80520a7d74d78bb76618760033c98242db15b36312d2fd797c58fb252a5925', 83, '2025-01-25 21:41:57'),
('4eac9a034c1ac3083d299a58bf5d48451463e11516ae1c4d111c9c0ebe4c8db9', 84, '2025-01-25 22:12:30'),
('8bba7cafd0b58d3a1fa352d915b3a7de09b6849d39f025bab4c7db8150e9eab0', 85, '2025-01-25 22:47:24'),
('3bf0cc992832353925b63792d007f0c3ab41b603410559f1d675f506382345a5', 86, '2025-01-25 23:20:00'),
('2dfbed779ee5ac47c58920e533b8ca3ed1e301ba5f984ed0f8e2bbb843bffaf3', 87, '2025-01-25 23:40:58'),
('b13961ac3bbb93acf454b9189aaf0b5f007e7e5db2ca61bf2efe203afeec45e5', 88, '2025-01-25 23:50:35'),
('579ee699d9c5290b59cbdce2bc0ae4cc0a8d28b10725bd9f88be3c44025157a7', 89, '2025-01-26 00:32:25'),
('2933b14dc502c74d2de621be08e33413f92280605235bcdbcd30dd55d06df1ee', 90, '2025-01-26 03:16:59'),
('16c2085c5a22bbfda66a99b47d16dea527e2cff14e28ea161d18e6222b88509d', 91, '2025-01-26 06:15:22'),
('3dbae0168b735afded71afa093968099deb54efada156c76e6b6cd3106a8a399', 92, '2025-01-26 09:42:01'),
('dbaacb627139225570940a8d88d4372a02e07a39505b39918101d170b1eb4ba7', 93, '2025-01-26 10:05:15'),
('fbb7e302a69a9ccaa8cd0e1f5beae3c9ef9642043af4febaa770ff84d37e51c5', 94, '2025-01-26 10:23:28'),
('9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 95, '2025-01-26 10:35:22'),
('828f780d414e88dd1a6bedf766ca33afe922adb2751dd7ff80e3e6015e5dfc53', 96, '2025-01-26 11:06:32'),
('250d2d47fa90881224826e0b248ede0df932d54e0e3307d649e7db772a074145', 97, '2025-01-26 11:28:11'),
('879dac72fac1fd4ff551c3733bb101ce5c9902e8001cc0fb286c35700879e3dd', 98, '2025-01-26 11:34:01'),
('47ec228357128c593cbfc256bfe2ef7d0788cb51e3354511120d846bc19f0247', 99, '2025-01-26 11:40:32'),
('311cea470d658c6d0e9d491527c69e2140430f64442e7a6ff0de234f7a0c3f81', 100, '2025-01-26 11:44:11'),
('96f7dcc5d9549abcaaeed4850d1fe40d6b0d5776a557a74d631e2f3b85e7e068', 101, '2025-01-26 11:51:38'),
('0d2f77799a07615fb0b451589276e1d3872b239cf16cdd4771e0f06bf15c7bbd', 102, '2025-01-26 12:22:09'),
('7d2f67defe32a2e6d3ce4771e035892ecd547ca9ba728a658269815f1dcdc9c3', 103, '2025-01-26 12:31:09'),
('a28726fd19ffb8688139948bde919614ae59d176476908ee451e3bf028552c8e', 104, '2025-01-26 13:17:10'),
('a1acb4d23e5cc057c1c09212d374c77a8c0920929708bc423a9584ad606c21ba', 105, '2025-01-26 13:23:34'),
('70ace0d2aeefb2c71519d6d6e190bb88b4b5c96bfb8ef7301eb0c3f7ddea8982', 106, '2025-01-26 13:28:31'),
('f4935d14cd392eb4556b9258c77cebc1bf038bb6fc8fb3a5b2573871e836ea06', 107, '2025-01-26 13:45:54'),
('5ab2efa659df7fe84b31f0e01e871f5e6c48849717ee515f267362d4cb756e4e', 108, '2025-01-26 14:21:44'),
('0f6206977837da1a13ea24f4ae39fbece282ec56e119b8f5f0d2c6f72308faf3', 109, '2025-01-26 14:30:42'),
('a6cb371fc331515a4faa19d8ac00add1222ffce9d91c96a4cab6a127ec1b3225', 110, '2025-01-26 14:31:47'),
('96f7dcc5d9549abcaaeed4850d1fe40d6b0d5776a557a74d631e2f3b85e7e068', 111, '2025-01-26 14:34:52'),
('389d4f9ddca4668158d7e58cb697fe327cc443b9209773dd1ed1c85b4c9ba96e', 112, '2025-01-26 14:38:33'),
('579ee699d9c5290b59cbdce2bc0ae4cc0a8d28b10725bd9f88be3c44025157a7', 113, '2025-01-26 14:47:22'),
('15b65b7b22280f6418d874d3cc6081be944f341b1ec9779c81e4139a9193eb1f', 114, '2025-01-26 14:52:14'),
('7f5a9bbe7ced28113870c1c58588597b0ec1fd40794f49791b79bc527ed4b753', 115, '2025-01-26 14:56:58'),
('7a04f848947f0e9929b4a19e8ae0d4fa76da6b86d60094527d68395a6f7334d2', 116, '2025-01-26 15:00:13'),
('a6cb371fc331515a4faa19d8ac00add1222ffce9d91c96a4cab6a127ec1b3225', 117, '2025-01-26 15:03:22'),
('7f5a9bbe7ced28113870c1c58588597b0ec1fd40794f49791b79bc527ed4b753', 118, '2025-01-26 15:23:35'),
('96f7dcc5d9549abcaaeed4850d1fe40d6b0d5776a557a74d631e2f3b85e7e068', 119, '2025-01-26 15:25:59'),
('8b0d76cb839fdcb0656cb1a1f30bc0925a76666f4087e6ac73bffd7e07904da3', 120, '2025-01-26 15:43:34'),
('4eac9a034c1ac3083d299a58bf5d48451463e11516ae1c4d111c9c0ebe4c8db9', 121, '2025-01-26 16:04:18'),
('1e6446e64c6e02ef5028de71eb79d965a8ec07a499f92dfd46d900f68894a42c', 122, '2025-01-26 16:14:36'),
('9bbdacc76f47bfe47d9fd00182b6f802deaa7f2bccaa92e90f99e1db74da36f8', 123, '2025-01-26 17:12:13'),
('792c22aa9f78873ddcce7bc91c320fb413c0a9778a30cea88920b2614b3e4b31', 124, '2025-01-26 17:19:14'),
('2933b14dc502c74d2de621be08e33413f92280605235bcdbcd30dd55d06df1ee', 125, '2025-01-26 17:39:06'),
('01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 126, '2025-01-26 17:42:02'),
('1d0586ee37e1bcd2ecada05ff695b0a5a83fecb204077c417fd8820ab0c78a69', 127, '2025-01-26 17:42:41'),
('43b81c33c1ba0af0e35edcb185e501af50aadc2ecf1183cc01766c4c20e71cde', 128, '2025-01-26 17:47:32'),
('96f7dcc5d9549abcaaeed4850d1fe40d6b0d5776a557a74d631e2f3b85e7e068', 129, '2025-01-26 18:08:46'),
('7f5a9bbe7ced28113870c1c58588597b0ec1fd40794f49791b79bc527ed4b753', 130, '2025-01-26 18:28:36'),
('b8d862b54585e17a99f45ca2d1506fb985e71293f1aee0d0c915f132ccfcb913', 131, '2025-01-26 18:43:25'),
('23e5a6aa291431d59cfc0f89e2b9dfcb82bcbb370aadce3ddad50dcc53109d65', 132, '2025-01-26 18:51:29'),
('a28726fd19ffb8688139948bde919614ae59d176476908ee451e3bf028552c8e', 133, '2025-01-26 18:55:43'),
('89885d22ab6fd2d0d1b90a1e064cdefe9cd8af2890d70dba0774cc1d305df873', 134, '2025-01-26 19:16:49'),
('43c44c419969c5f367a8f10ff7286fce65472057222e8717656c2c6690248cd9', 135, '2025-01-26 19:18:17'),
('ce0ba750c77a0d076f8cd464d59020112c54353af5a6db653e90304aeb8c54c9', 136, '2025-01-26 19:32:12'),
('fe689620c02c5bae528cfd5deca26079535addb88f83100fa50defc1850b81f6', 137, '2025-01-26 19:54:25'),
('b13961ac3bbb93acf454b9189aaf0b5f007e7e5db2ca61bf2efe203afeec45e5', 138, '2025-01-26 20:36:52'),
('96f7dcc5d9549abcaaeed4850d1fe40d6b0d5776a557a74d631e2f3b85e7e068', 139, '2025-01-26 21:12:34'),
('7d2cf0d9d0d9582e71aa4318171f3cb193c583886406f5b6da01fe61c0f86014', 140, '2025-01-26 21:43:41'),
('70ace0d2aeefb2c71519d6d6e190bb88b4b5c96bfb8ef7301eb0c3f7ddea8982', 141, '2025-01-26 22:18:00'),
('fc2758e5b1a37664fc074de887110394b5d20769f1e8a847f57fca8f190ed8ef', 142, '2025-01-26 22:23:05'),
('0f6206977837da1a13ea24f4ae39fbece282ec56e119b8f5f0d2c6f72308faf3', 143, '2025-01-26 23:16:33'),
('4eac9a034c1ac3083d299a58bf5d48451463e11516ae1c4d111c9c0ebe4c8db9', 144, '2025-01-26 23:52:36'),
('c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 145, '2025-01-27 00:02:56'),
('4eac9a034c1ac3083d299a58bf5d48451463e11516ae1c4d111c9c0ebe4c8db9', 146, '2025-01-27 00:15:41'),
('8bba7cafd0b58d3a1fa352d915b3a7de09b6849d39f025bab4c7db8150e9eab0', 147, '2025-01-27 01:45:58'),
('b13961ac3bbb93acf454b9189aaf0b5f007e7e5db2ca61bf2efe203afeec45e5', 148, '2025-01-27 02:17:01'),
('828f780d414e88dd1a6bedf766ca33afe922adb2751dd7ff80e3e6015e5dfc53', 149, '2025-01-27 09:04:37'),
('96f7dcc5d9549abcaaeed4850d1fe40d6b0d5776a557a74d631e2f3b85e7e068', 150, '2025-01-27 09:04:39'),
('c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 151, '2025-01-27 09:17:23'),
('a1acb4d23e5cc057c1c09212d374c77a8c0920929708bc423a9584ad606c21ba', 152, '2025-01-27 09:41:33'),
('c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 153, '2025-01-27 10:08:13'),
('b4feee1a107734154da02532a8d81dbd0a92322c796f03fdf41735b6a7ad8b8b', 154, '2025-01-27 10:30:26'),
('7a04f848947f0e9929b4a19e8ae0d4fa76da6b86d60094527d68395a6f7334d2', 155, '2025-01-27 10:35:44'),
('32c13ae4a963b27933639bd984cb83c693d4ba91e37c24c480369487d3c399c0', 156, '2025-01-27 10:51:13'),
('4be7b24385e6411a49200e9ccd2f82a31d78dd942f1f97f958627e6b64057e2b', 157, '2025-01-27 10:58:00'),
('15b65b7b22280f6418d874d3cc6081be944f341b1ec9779c81e4139a9193eb1f', 158, '2025-01-27 11:41:07'),
('3c4b5d1b0cbf03c5e077b9f30f46b31e762f8a1545372908b2381fbcf1ee2d9c', 159, '2025-01-27 11:45:44'),
('ae0d918c1eab5a1b53fa184bc99d199efab2faf507514fd04592683eeaf66987', 160, '2025-01-27 12:23:33'),
('6bac57a07e5773be8879dbe1a3530520be9a6a604c48d69fcabae431441c3a6f', 161, '2025-01-27 13:09:58'),
('9bbf55d761cff5732e61b6f6261244c418fafa39810ebf06e33849347f9f78b6', 162, '2025-01-27 13:36:04'),
('a6cb371fc331515a4faa19d8ac00add1222ffce9d91c96a4cab6a127ec1b3225', 163, '2025-01-27 13:41:43'),
('a28726fd19ffb8688139948bde919614ae59d176476908ee451e3bf028552c8e', 164, '2025-01-27 14:13:01'),
('01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 165, '2025-01-27 14:47:14'),
('2933b14dc502c74d2de621be08e33413f92280605235bcdbcd30dd55d06df1ee', 166, '2025-01-27 15:23:53'),
('8b16b46ba76bc4ad95ca97d447df70a6fa2317f400e3f021ba38c0427b7cbab2', 167, '2025-01-27 15:45:59'),
('c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 168, '2025-01-27 16:17:18'),
('4eac9a034c1ac3083d299a58bf5d48451463e11516ae1c4d111c9c0ebe4c8db9', 169, '2025-01-27 16:52:50'),
('9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 170, '2025-01-27 18:05:56'),
('4f1c9c6fe43a585467eda5d3b39471ac0d4ca6c7614e343578173b6594787bc4', 171, '2025-01-27 18:06:17'),
('b44f0cbac520d02094fd07d0aced10f58aee8e23843767bc0fae9e1031772368', 172, '2025-01-27 18:50:23'),
('4f1c9c6fe43a585467eda5d3b39471ac0d4ca6c7614e343578173b6594787bc4', 173, '2025-01-27 19:22:14'),
('8b0d76cb839fdcb0656cb1a1f30bc0925a76666f4087e6ac73bffd7e07904da3', 174, '2025-01-27 19:25:53'),
('4f1c9c6fe43a585467eda5d3b39471ac0d4ca6c7614e343578173b6594787bc4', 175, '2025-01-27 20:00:44'),
('7a04f848947f0e9929b4a19e8ae0d4fa76da6b86d60094527d68395a6f7334d2', 176, '2025-01-27 20:35:50'),
('23e5a6aa291431d59cfc0f89e2b9dfcb82bcbb370aadce3ddad50dcc53109d65', 177, '2025-01-27 20:45:07'),
('b5333ce6e9d5782aa4ea90d8349860ea030721dc48fa14515fa9e66363a9d740', 178, '2025-01-27 20:45:37'),
('261bf6c044241a5e43650ef4e00188619fd632d76985982b97e51932f1724963', 179, '2025-01-27 21:06:02'),
('ce0ba750c77a0d076f8cd464d59020112c54353af5a6db653e90304aeb8c54c9', 180, '2025-01-27 21:43:12'),
('2933b14dc502c74d2de621be08e33413f92280605235bcdbcd30dd55d06df1ee', 181, '2025-01-27 22:25:48'),
('57c9a13b1a13424a5aa068668018724c88bf8df84d21b0c8619e8edc29de2204', 182, '2025-01-27 22:40:06'),
('16c2085c5a22bbfda66a99b47d16dea527e2cff14e28ea161d18e6222b88509d', 183, '2025-01-28 04:06:36'),
('b5333ce6e9d5782aa4ea90d8349860ea030721dc48fa14515fa9e66363a9d740', 184, '2025-01-28 06:54:07'),
('96f7dcc5d9549abcaaeed4850d1fe40d6b0d5776a557a74d631e2f3b85e7e068', 185, '2025-01-28 08:45:34'),
('c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 186, '2025-01-28 09:20:54'),
('15b65b7b22280f6418d874d3cc6081be944f341b1ec9779c81e4139a9193eb1f', 187, '2025-01-28 10:22:23'),
('e992d6ecb73144037efb858b15952c634b6492a61a52953555f3d66cbe5497f2', 188, '2025-01-28 10:32:46'),
('23e5a6aa291431d59cfc0f89e2b9dfcb82bcbb370aadce3ddad50dcc53109d65', 189, '2025-01-28 10:48:48'),
('1e6446e64c6e02ef5028de71eb79d965a8ec07a499f92dfd46d900f68894a42c', 190, '2025-01-28 11:32:28'),
('b4feee1a107734154da02532a8d81dbd0a92322c796f03fdf41735b6a7ad8b8b', 191, '2025-01-28 12:17:16'),
('a28726fd19ffb8688139948bde919614ae59d176476908ee451e3bf028552c8e', 192, '2025-01-28 13:37:41'),
('3c4b5d1b0cbf03c5e077b9f30f46b31e762f8a1545372908b2381fbcf1ee2d9c', 193, '2025-01-28 14:00:24'),
('f0ed9f66e43e0462cb5ca6cf237f89f090f6dd6d28a759aef6a523b047317cd7', 194, '2025-01-28 14:17:31'),
('ce0ba750c77a0d076f8cd464d59020112c54353af5a6db653e90304aeb8c54c9', 195, '2025-01-28 14:54:05'),
('9de8a79e20b405ddd21216364e8f91852a78f22dcf44eb3e05128486533d3844', 196, '2025-01-28 21:35:24'),
('a28726fd19ffb8688139948bde919614ae59d176476908ee451e3bf028552c8e', 197, '2025-01-29 00:27:57'),
('3010e2331f600f07d0431d1d7b553b5f8ba9e4778473af0ad89ab2afdce82d9a', 198, '2025-01-29 02:34:36'),
('6a999a25e09385e357c05c098bc27aa47cbd270348a3f0d1d470833fecd7fa7b', 199, '2025-01-29 10:13:15'),
('68ba7a929d93a2c4c0494dd6af4bfe6916c12de59c9525b50c609ed39c50315a', 200, '2025-01-29 14:33:35'),
('68ba7a929d93a2c4c0494dd6af4bfe6916c12de59c9525b50c609ed39c50315a', 201, '2025-01-29 15:37:16'),
('c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 202, '2025-02-04 11:29:24'),
('c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 203, '2025-02-05 11:23:12'),
('9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 204, '2025-02-05 11:28:12'),
('9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 205, '2025-02-05 20:20:51'),
('7b50b79b95e58664121cf686bb535cceaadba797e0671cec97848aae5c6c01fa', 206, '2025-02-05 20:22:04'),
('9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 207, '2025-02-05 20:22:23'),
('b13961ac3bbb93acf454b9189aaf0b5f007e7e5db2ca61bf2efe203afeec45e5', 208, '2025-02-07 14:12:19'),
('b13961ac3bbb93acf454b9189aaf0b5f007e7e5db2ca61bf2efe203afeec45e5', 209, '2025-02-07 21:31:37'),
('b13961ac3bbb93acf454b9189aaf0b5f007e7e5db2ca61bf2efe203afeec45e5', 210, '2025-02-08 14:06:46'),
('1e6446e64c6e02ef5028de71eb79d965a8ec07a499f92dfd46d900f68894a42c', 211, '2025-02-08 16:03:13'),
('f4935d14cd392eb4556b9258c77cebc1bf038bb6fc8fb3a5b2573871e836ea06', 212, '2025-02-08 17:10:30'),
('f4935d14cd392eb4556b9258c77cebc1bf038bb6fc8fb3a5b2573871e836ea06', 213, '2025-02-08 17:17:49'),
('ce0ba750c77a0d076f8cd464d59020112c54353af5a6db653e90304aeb8c54c9', 214, '2025-02-09 20:36:23'),
('8bba7cafd0b58d3a1fa352d915b3a7de09b6849d39f025bab4c7db8150e9eab0', 215, '2025-02-09 22:58:48'),
('f4935d14cd392eb4556b9258c77cebc1bf038bb6fc8fb3a5b2573871e836ea06', 216, '2025-02-10 12:14:04'),
('c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 217, '2025-02-10 16:15:08'),
('1e6446e64c6e02ef5028de71eb79d965a8ec07a499f92dfd46d900f68894a42c', 218, '2025-02-10 17:36:04'),
('ce0ba750c77a0d076f8cd464d59020112c54353af5a6db653e90304aeb8c54c9', 219, '2025-02-10 19:17:37'),
('1e6446e64c6e02ef5028de71eb79d965a8ec07a499f92dfd46d900f68894a42c', 220, '2025-02-10 19:29:13'),
('5e78de61e49b998bf77e5df3c3da7dcd9779c22736c574ac5080b689fbca30c4', 221, '2025-02-10 19:32:56'),
('8bba7cafd0b58d3a1fa352d915b3a7de09b6849d39f025bab4c7db8150e9eab0', 222, '2025-02-10 20:45:24'),
('c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 223, '2025-02-10 22:15:36'),
('e7d2cfa2ae54d2e34cb3d5b8c9072350ae21542bf8d83bac85e655b499c2c7ff', 224, '2025-02-11 09:16:41'),
('33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 225, '2025-02-11 10:15:58'),
('5e78de61e49b998bf77e5df3c3da7dcd9779c22736c574ac5080b689fbca30c4', 226, '2025-02-11 12:48:10'),
('4056682e4fb37066b68f737bade51c10e367269d3c4200606cac4fedb5623101', 227, '2025-02-11 12:49:38'),
('e685eda25decf3357c53c966f7679f79444bbfcb06925e5cb83167951db53e9a', 228, '2025-02-11 16:22:35'),
('9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 229, '2025-02-11 16:26:48'),
('44062a52289278d9a44b095e2b0a87ec5c07ae92e86b1f0fac1d897616883809', 230, '2025-02-11 17:56:26'),
('8bba7cafd0b58d3a1fa352d915b3a7de09b6849d39f025bab4c7db8150e9eab0', 231, '2025-02-12 00:33:32'),
('e417e513031cce08d9152074dc5f98fc08bd668849df38f5a13aea80215f9a5b', 232, '2025-02-12 10:19:40'),
('44062a52289278d9a44b095e2b0a87ec5c07ae92e86b1f0fac1d897616883809', 233, '2025-02-12 11:38:42'),
('e7d2cfa2ae54d2e34cb3d5b8c9072350ae21542bf8d83bac85e655b499c2c7ff', 234, '2025-02-12 12:06:19'),
('d24897649bbdd21432322383d094466adadba74282b78a84bd474efb68980d13', 235, '2025-02-12 13:15:36'),
('b23702a871baa92ddbd7c6f5d8295168c18d6c983795739c04c5894f80fb6a34', 236, '2025-02-12 13:21:25'),
('01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 237, '2025-02-12 13:27:08'),
('f4935d14cd392eb4556b9258c77cebc1bf038bb6fc8fb3a5b2573871e836ea06', 238, '2025-02-12 14:29:14'),
('5e78de61e49b998bf77e5df3c3da7dcd9779c22736c574ac5080b689fbca30c4', 239, '2025-02-12 14:48:46'),
('b13961ac3bbb93acf454b9189aaf0b5f007e7e5db2ca61bf2efe203afeec45e5', 240, '2025-02-12 16:00:31'),
('1e6446e64c6e02ef5028de71eb79d965a8ec07a499f92dfd46d900f68894a42c', 241, '2025-02-12 16:33:45'),
('f4935d14cd392eb4556b9258c77cebc1bf038bb6fc8fb3a5b2573871e836ea06', 242, '2025-02-12 17:32:20'),
('15b65b7b22280f6418d874d3cc6081be944f341b1ec9779c81e4139a9193eb1f', 243, '2025-02-12 18:21:23'),
('e7d2cfa2ae54d2e34cb3d5b8c9072350ae21542bf8d83bac85e655b499c2c7ff', 244, '2025-02-13 10:00:34'),
('1e6446e64c6e02ef5028de71eb79d965a8ec07a499f92dfd46d900f68894a42c', 245, '2025-02-13 10:23:52'),
('bc368e50d17ad6991d94fcb8eb785e8a0bf1b0f6a3807e4692d6bbb4044a6f56', 246, '2025-02-13 11:49:52'),
('33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 247, '2025-02-13 13:25:38'),
('f4935d14cd392eb4556b9258c77cebc1bf038bb6fc8fb3a5b2573871e836ea06', 248, '2025-02-13 13:35:00'),
('a6cb371fc331515a4faa19d8ac00add1222ffce9d91c96a4cab6a127ec1b3225', 249, '2025-02-13 13:44:01'),
('bc368e50d17ad6991d94fcb8eb785e8a0bf1b0f6a3807e4692d6bbb4044a6f56', 250, '2025-02-13 13:44:18'),
('15b65b7b22280f6418d874d3cc6081be944f341b1ec9779c81e4139a9193eb1f', 251, '2025-02-13 13:57:03'),
('1e6446e64c6e02ef5028de71eb79d965a8ec07a499f92dfd46d900f68894a42c', 252, '2025-02-13 14:06:03'),
('b23702a871baa92ddbd7c6f5d8295168c18d6c983795739c04c5894f80fb6a34', 253, '2025-02-13 14:26:11'),
('01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 254, '2025-02-13 15:13:43'),
('144c0f724cc02cd3d9ad75185a6f4b2f0e12fa60ac8f514a7874a0d40158cac5', 255, '2025-02-13 15:27:30'),
('e992d6ecb73144037efb858b15952c634b6492a61a52953555f3d66cbe5497f2', 256, '2025-02-13 15:38:13'),
('b13961ac3bbb93acf454b9189aaf0b5f007e7e5db2ca61bf2efe203afeec45e5', 257, '2025-02-13 16:57:12'),
('f4935d14cd392eb4556b9258c77cebc1bf038bb6fc8fb3a5b2573871e836ea06', 258, '2025-02-13 19:20:36'),
('7b50b79b95e58664121cf686bb535cceaadba797e0671cec97848aae5c6c01fa', 259, '2025-02-13 21:15:33'),
('b23702a871baa92ddbd7c6f5d8295168c18d6c983795739c04c5894f80fb6a34', 260, '2025-02-14 04:28:04'),
('33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 261, '2025-02-14 06:04:06'),
('15b65b7b22280f6418d874d3cc6081be944f341b1ec9779c81e4139a9193eb1f', 262, '2025-02-14 06:10:48'),
('f4935d14cd392eb4556b9258c77cebc1bf038bb6fc8fb3a5b2573871e836ea06', 263, '2025-02-14 06:56:52'),
('33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 264, '2025-02-14 07:19:39'),
('5e78de61e49b998bf77e5df3c3da7dcd9779c22736c574ac5080b689fbca30c4', 265, '2025-02-14 07:30:17'),
('15b65b7b22280f6418d874d3cc6081be944f341b1ec9779c81e4139a9193eb1f', 266, '2025-02-14 08:24:26'),
('ce0ba750c77a0d076f8cd464d59020112c54353af5a6db653e90304aeb8c54c9', 267, '2025-02-14 10:16:24'),
('9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 268, '2025-02-24 22:14:51'),
('9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 269, '2025-02-25 14:58:35'),
('9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 270, '2025-02-25 14:58:39'),
('9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 271, '2025-02-25 14:58:43'),
('9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 272, '2025-02-25 14:59:13');

-- --------------------------------------------------------

--
-- Table structure for table `mysql_errors`
--

CREATE TABLE `mysql_errors` (
  `ID` int(11) NOT NULL,
  `query` varchar(255) NOT NULL,
  `location` varchar(255) NOT NULL,
  `msg` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `mysql_errors`
--

INSERT INTO `mysql_errors` (`ID`, `query`, `location`, `msg`) VALUES
(15, 'INSERT INTO users (first_name, last_name, email, password, active) VALUES (?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1048 Column \'first_name\' cannot be null'),
(16, 'INSERT INTO users (first_name, last_name, email, password, active) VALUES (?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1048 Column \'first_name\' cannot be null'),
(17, 'INSERT INTO verification (verification_code, expiry_time, user_id) VALUES (?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1048 Column \'expiry_time\' cannot be null'),
(18, 'INSERT INTO text (text) VALUES ?', 'register/verifyUser', 'SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \'?\' at line 1'),
(19, 'INSERT INTO text (text) VALUES (?)', 'register/verifyUser', 'SQLSTATE[23000]: Integrity constraint violation: 1048 Column \'text\' cannot be nulla'),
(20, 'INSERT INTO users (first_name, last_name, email, password, active) VALUES (?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1048 Column \'first_name\' cannot be null'),
(21, 'INSERT INTO users (first_name, last_name, email, password, active) VALUES (?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1048 Column \'first_name\' cannot be null'),
(22, 'SELECT * description FROM spcp_lessons WHERE id = :id', 'spcp/lekcija/1', 'SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \'description FROM spcp_lessons WHERE id = ?\' at line 1'),
(23, 'SELECT * description FROM spcp_lessons WHERE id = :id', 'spcp/lekcija/1', 'SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \'description FROM spcp_lessons WHERE id = ?\' at line 1'),
(24, 'SELECT * description FROM spcp_lessons WHERE id = :id', 'spcp/lekcija/1', 'SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \'description FROM spcp_lessons WHERE id = ?\' at line 1'),
(25, 'SELECT * description FROM spcp_lessons WHERE id = :id', 'spcp/lekcija/1', 'SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \'description FROM spcp_lessons WHERE id = ?\' at line 1'),
(26, 'INSERT INTO spcp_tasks (lesson_id, title, description, input, output, solution, explanation, visibility, active, creator_public_id, solution_status, has_input, difficulty, created_at) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,NOW())', 'tutor/createTask', 'SQLSTATE[21S01]: Insert value list does not match column list: 1136 Column count doesn\'t match value count at row 1'),
(27, 'INSERT INTO spcp_tasks (lesson_id, title, description, input, output, solution, explanation, visibility, difficulty, creator_public_id) VALUES (?,?,?,?,?,?,?,?,?,?)', 'tutor/createTask', 'SQLSTATE[23000]: Integrity constraint violation: 1048 Column \'creator_public_id\' cannot be null'),
(28, 'INSERT INTO spcp_tasks (lesson_id, title, description, input, output, solution, explanation, visibility, difficulty, creator_public_id) VALUES (?,?,?,?,?,?,?,?,?,?)', 'tutor/createTask', 'SQLSTATE[23000]: Integrity constraint violation: 1048 Column \'creator_public_id\' cannot be null'),
(29, 'INSERT INTO spcp_tasks (lesson_id, title, description, input, output, solution, explanation, visibility, difficulty, creator_public_id) VALUES (?,?,?,?,?,?,?,?,?,?)', 'tutor/createTask', 'SQLSTATE[23000]: Integrity constraint violation: 1048 Column \'creator_public_id\' cannot be null'),
(30, 'INSERT INTO spcp_tasks (lesson_id, title, description, input, output, solution, explanation, visibility, difficulty, creator_public_id) VALUES (?,?,?,?,?,?,?,?,?,?)', 'tutor/createTask', 'SQLSTATE[23000]: Integrity constraint violation: 1048 Column \'creator_public_id\' cannot be null'),
(31, 'INSERT INTO spcp_tasks (lesson_id, title, description, input, output, solution, explanation, visibility, difficulty, creator_public_id) VALUES (?,?,?,?,?,?,?,?,?,?)', 'tutor/createTask', 'SQLSTATE[23000]: Integrity constraint violation: 1048 Column \'creator_public_id\' cannot be null'),
(32, 'INSERT INTO spcp_tasks (lesson_id, title, description, input, output, solution, explanation, visibility, difficulty, creator_public_id) VALUES (?,?,?,?,?,?,?,?,?,?)', 'tutor/createTask', 'SQLSTATE[23000]: Integrity constraint violation: 1048 Column \'creator_public_id\' cannot be null'),
(33, 'INSERT INTO spcp_tasks (lesson_id, title, description, input, output, solution, explanation, visibility, difficulty, creator_public_id) VALUES (?,?,?,?,?,?,?,?,?,?)', 'tutor/createTask', 'SQLSTATE[23000]: Integrity constraint violation: 1048 Column \'creator_public_id\' cannot be null'),
(34, 'INSERT INTO spcp_tasks (lesson_id, title, description, input, output, solution, explanation, visibility, difficulty, creator_public_id) VALUES (?,?,?,?,?,?,?,?,?,?)', 'tutor/createTask', 'SQLSTATE[23000]: Integrity constraint violation: 1048 Column \'creator_public_id\' cannot be null'),
(35, 'INSERT INTO spcp_tasks (lesson_id, title, description, input, output, solution, explanation, visibility, difficulty, creator_public_id) VALUES (?,?,?,?,?,?,?,?,?,?)', 'tutor/createTask', 'SQLSTATE[23000]: Integrity constraint violation: 1048 Column \'creator_public_id\' cannot be null'),
(36, 'INSERT INTO spcp_tasks (lesson_id, title, description, input, output, solution, explanation, visibility, difficulty, creator_public_id) VALUES (?,?,?,?,?,?,?,?,?,?)', 'tutor/createTask', 'SQLSTATE[23000]: Integrity constraint violation: 1048 Column \'creator_public_id\' cannot be null'),
(37, 'INSERT INTO spcp_tasks (lesson_id, title, description, input, output, solution, explanation, visibility, difficulty, creator_public_id) VALUES (?,?,?,?,?,?,?,?,?,?)', 'tutor/createTask', 'SQLSTATE[23000]: Integrity constraint violation: 1048 Column \'creator_public_id\' cannot be null'),
(38, 'INSERT INTO spcp_tasks (lesson_id, title, description, input, output, solution, explanation, visibility, difficulty, creator_public_id) VALUES (?,?,?,?,?,?,?,?,?,?)', 'tutor/createTask', 'SQLSTATE[23000]: Integrity constraint violation: 1048 Column \'creator_public_id\' cannot be null'),
(39, 'INSERT INTO tasks (title, description, lesson_id, difficulty, visibility, solution) VALUES (?, ?, ?, ?, ?, ?)', 'admin/addTask', 'SQLSTATE[42S02]: Base table or view not found: 1146 Table \'spcp.tasks\' doesn\'t exist'),
(40, 'spcp_tasks', 'admin/addTask', 'SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near \'spcp_tasks\' at line 1'),
(41, 'INSERT INTO spcp_tasks_backup (task_id, user_id, solution) VALUES (?, ?, ?)', 'spcp/addSolution', 'SQLSTATE[42S02]: Base table or view not found: 1146 Table \'spcp.spcp_tasks_backup\' doesn\'t exist'),
(42, 'INSERT INTO spcp_tasks_backup (task_id, user_id, solution) VALUES (?, ?, ?)', 'spcp/addSolution', 'SQLSTATE[42S02]: Base table or view not found: 1146 Table \'spcp.spcp_tasks_backup\' doesn\'t exist'),
(43, 'INSERT INTO users (first_name, last_name, email, password, active) VALUES (?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'gptjezakon@gmail.com\' for key \'email\''),
(44, 'INSERT INTO users (first_name, last_name, email, password, active) VALUES (?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'gptjezakon@gmail.com\' for key \'email\''),
(45, 'INSERT INTO users (first_name, last_name, email, password, active) VALUES (?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'gptjezakon@gmail.com\' for key \'email\''),
(46, 'INSERT INTO users (first_name, last_name, email, password, active) VALUES (?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'gptjezakon@gmail.com\' for key \'email\''),
(47, 'INSERT INTO users (first_name, last_name, email, password, active) VALUES (?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'gptjezakon@gmail.com\' for key \'email\''),
(48, 'INSERT INTO users (first_name, last_name, email, password, active) VALUES (?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'a@gmail.com\' for key \'email\''),
(49, 'INSERT INTO users (first_name, last_name, email, password, active) VALUES (?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'a@gmail.com\' for key \'email\''),
(50, 'INSERT INTO users (first_name, last_name, email, password, active) VALUES (?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'a@gmail.com\' for key \'email\''),
(51, 'INSERT INTO users (first_name, last_name, email, password, active) VALUES (?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'a@gmail.com\' for key \'email\''),
(52, 'INSERT INTO users (first_name, last_name, email, password, active) VALUES (?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'a@gmail.com\' for key \'email\''),
(53, 'INSERT INTO users (first_name, last_name, email, password, active) VALUES (?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'a@gmail.com\' for key \'email\''),
(54, 'INSERT INTO users (first_name, last_name, email, password, active) VALUES (?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'a@gmail.com\' for key \'email\''),
(55, 'INSERT INTO users (first_name, last_name, email, password, active) VALUES (?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'a@gmail.com\' for key \'email\''),
(56, 'SELECT id, title, description, solution,explanation, difficulty\r\n            FROM spcp_tasks\r\n            WHERE lesson_id = :lesson_id AND visibilty = 1 \r\n            ORDER BY difficulty ASC', 'spcp/vjezba/3', 'SQLSTATE[42S22]: Column not found: 1054 Unknown column \'visibilty\' in \'where clause\''),
(57, 'SELECT id, title, description, solution,explanation, difficulty\r\n            FROM spcp_tasks\r\n            WHERE lesson_id = :lesson_id AND visibilty = 1 \r\n            ORDER BY difficulty ASC', 'spcp/vjezba/3', 'SQLSTATE[42S22]: Column not found: 1054 Unknown column \'visibilty\' in \'where clause\''),
(58, 'SELECT id, title, description, solution,explanation, difficulty\r\n            FROM spcp_tasks\r\n            WHERE lesson_id = :lesson_id AND visibilty = 1 \r\n            ORDER BY difficulty ASC', 'spcp/vjezba/3', 'SQLSTATE[42S22]: Column not found: 1054 Unknown column \'visibilty\' in \'where clause\''),
(59, 'SELECT id, title, description, solution,explanation, difficulty\r\n            FROM spcp_tasks\r\n            WHERE lesson_id = :lesson_id AND visibilty = 1 \r\n            ORDER BY difficulty ASC', 'spcp/lekcija/3', 'SQLSTATE[42S22]: Column not found: 1054 Unknown column \'visibilty\' in \'where clause\''),
(60, 'SELECT id, title, description, solution,explanation, difficulty\r\n            FROM spcp_tasks\r\n            WHERE lesson_id = :lesson_id AND visibilty = 1 \r\n            ORDER BY difficulty ASC', 'spcp/vjezba/3', 'SQLSTATE[42S22]: Column not found: 1054 Unknown column \'visibilty\' in \'where clause\''),
(61, 'SELECT id, title, description, solution,explanation, difficulty\r\n            FROM spcp_tasks\r\n            WHERE lesson_id = :lesson_id AND visibilty = 1 \r\n            ORDER BY difficulty ASC', 'spcp/vjezba/3', 'SQLSTATE[42S22]: Column not found: 1054 Unknown column \'visibilty\' in \'where clause\''),
(62, 'SELECT id, title, description, solution,explanation, difficulty\r\n            FROM spcp_tasks\r\n            WHERE lesson_id = :lesson_id AND visibilty = 1 \r\n            ORDER BY difficulty ASC', 'spcp/vjezba/3', 'SQLSTATE[42S22]: Column not found: 1054 Unknown column \'visibilty\' in \'where clause\''),
(63, 'SELECT id, title, description, solution,explanation, difficulty\r\n            FROM spcp_tasks\r\n            WHERE lesson_id = :lesson_id AND visibilty = 1 \r\n            ORDER BY difficulty ASC', 'spcp/lekcija/3', 'SQLSTATE[42S22]: Column not found: 1054 Unknown column \'visibilty\' in \'where clause\''),
(64, 'SELECT id, title, description, solution,explanation, difficulty\r\n            FROM spcp_tasks\r\n            WHERE lesson_id = :lesson_id AND visibilty = 1 \r\n            ORDER BY difficulty ASC', 'spcp/lekcija/3', 'SQLSTATE[42S22]: Column not found: 1054 Unknown column \'visibilty\' in \'where clause\''),
(65, 'SELECT id, title, description, solution,explanation, difficulty\r\n            FROM spcp_tasks\r\n            WHERE lesson_id = :lesson_id AND visibilty = 1 \r\n            ORDER BY difficulty ASC', 'spcp/lekcija/3', 'SQLSTATE[42S22]: Column not found: 1054 Unknown column \'visibilty\' in \'where clause\''),
(66, 'SELECT \r\n    id, \r\n    title, \r\n    description, \r\n    solution, \r\n    explanation, \r\n    difficulty\r\nFROM \r\n    spcp_tasks\r\nWHERE \r\n    lesson_id = 2\r\n    AND visibility = 1 OR visibility = 3\r\nORDER BY \r\n    difficulty DESC;\r\n;', 'spcp/lekcija/2', 'SQLSTATE[HY093]: Invalid parameter number'),
(67, 'SELECT \r\n    id, \r\n    title, \r\n    description, \r\n    solution, \r\n    explanation, \r\n    difficulty\r\nFROM \r\n    spcp_tasks\r\nWHERE \r\n    lesson_id = 1\r\n    AND visibility = 1 OR visibility = 3\r\nORDER BY \r\n    difficulty DESC;\r\n;', 'spcp/lekcija/1', 'SQLSTATE[HY093]: Invalid parameter number'),
(68, 'SELECT \r\n    id, \r\n    title, \r\n    description, \r\n    solution, \r\n    explanation, \r\n    difficulty\r\nFROM \r\n    spcp_tasks\r\nWHERE \r\n    lesson_id = 3\r\n    AND visibility = 1 OR visibility = 3\r\nORDER BY \r\n    difficulty DESC;\r\n;', 'spcp/lekcija/3', 'SQLSTATE[HY093]: Invalid parameter number'),
(69, 'INSERT INTO users (first_name, last_name, email, password, active, foi) VALUES (?,?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'gptjezakon@gmail.com\' for key \'email\''),
(70, 'INSERT INTO users (first_name, last_name, email, password, active, foi) VALUES (?,?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'ivivek24@skole.foi.hr\' for key \'email\''),
(71, 'INSERT INTO users (first_name, last_name, email, password, active, foi) VALUES (?,?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'ivivek24@skole.foi.hr\' for key \'email\''),
(72, 'INSERT INTO users (first_name, last_name, email, password, active, foi) VALUES (?,?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'ivivek24@skole.foi.hr\' for key \'email\''),
(73, 'INSERT INTO users (first_name, last_name, email, password, active, foi) VALUES (?,?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'psocev24@student.foi.hr\' for key \'email\''),
(74, 'INSERT INTO users (first_name, last_name, email, password, active, foi) VALUES (?,?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'psocev24@student.foi.hr\' for key \'email\''),
(75, 'INSERT INTO users (first_name, last_name, email, password, active, foi) VALUES (?,?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'sklir24@student.foi.hr\' for key \'email\''),
(76, 'INSERT INTO users (first_name, last_name, email, password, active, foi) VALUES (?,?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'sklir24@student.foi.hr\' for key \'email\''),
(77, 'INSERT INTO spcp_sol_tasks (task_id, user_id, solution) VALUES (?, ?, ?)', 'spcp/addSolution', 'SQLSTATE[23000]: Integrity constraint violation: 1048 Column \'user_id\' cannot be null'),
(78, 'INSERT INTO users (first_name, last_name, email, password, active, foi) VALUES (?,?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'jguljelmo24@student.foi.hr\' for key \'email\''),
(79, 'INSERT INTO users (first_name, last_name, email, password, active, foi) VALUES (?,?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'jguljelmo24@student.foi.hr\' for key \'email\''),
(80, 'INSERT INTO users (first_name, last_name, email, password, active, foi) VALUES (?,?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'jguljelmo24@student.foi.hr\' for key \'email\''),
(81, 'INSERT INTO users (first_name, last_name, email, password, active, foi) VALUES (?,?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'mkarlovic24@foi.hr\' for key \'email\''),
(82, 'INSERT INTO users (first_name, last_name, email, password, active, foi) VALUES (?,?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'mkarlovic24@foi.hr\' for key \'email\''),
(83, 'INSERT INTO users (first_name, last_name, email, password, active, foi) VALUES (?,?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'mhadelan24@student.foi.hr\' for key \'email\''),
(84, 'INSERT INTO users (first_name, last_name, email, password, active, foi) VALUES (?,?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'mhadelan24@student.foi.hr\' for key \'email\''),
(85, 'INSERT INTO users (first_name, last_name, email, password, active, foi) VALUES (?,?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'mhadelan24@student.foi.hr\' for key \'email\''),
(86, 'INSERT INTO users (first_name, last_name, email, password, active, foi) VALUES (?,?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'mhadelan24@student.foi.hr\' for key \'email\''),
(87, 'INSERT INTO users (first_name, last_name, email, password, active, foi) VALUES (?,?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'mhadelan24@student.foi.hr\' for key \'email\''),
(88, 'INSERT INTO users (first_name, last_name, email, password, active, foi) VALUES (?,?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'mhadelan24@student.foi.hr\' for key \'email\''),
(89, 'INSERT INTO users (first_name, last_name, email, password, active, foi) VALUES (?,?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry \'mhadelan24@student.foi.hr\' for key \'email\''),
(90, 'INSERT INTO users (first_name, last_name, email, password, active, foi) VALUES (?,?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1048 Column \'first_name\' cannot be null'),
(91, 'INSERT INTO users (first_name, last_name, email, password, active, foi) VALUES (?,?,?,?,?,?)', 'register/registerUser', 'SQLSTATE[23000]: Integrity constraint violation: 1048 Column \'first_name\' cannot be null'),
(92, 'INSERT INTO verification (verification_code, expiry_time, user_id) VALUES (?,?,?)', 'register/registerUser', 'SQLSTATE[42S02]: Base table or view not found: 1146 Table \'spcp.verification\' doesn\'t exist');

-- --------------------------------------------------------

--
-- Table structure for table `spcp_lessons`
--

CREATE TABLE `spcp_lessons` (
  `id` int(11) NOT NULL,
  `title` varchar(255) NOT NULL,
  `description` text NOT NULL,
  `link` text DEFAULT NULL,
  `created_at` datetime DEFAULT current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `spcp_lessons`
--

INSERT INTO `spcp_lessons` (`id`, `title`, `description`, `link`, `created_at`) VALUES
(1, 'Uvod', 'Varijable i tipovi podataka. Aritmetički operatori.', NULL, '2025-01-15 00:48:30'),
(2, 'Selekcije', 'Operatori uspoređivanja i jednostavni logički izrazi.', NULL, '2025-01-15 00:48:30'),
(3, 'Iteracije i skokovi', 'Iteracije s logičkim uvjetom. Složeni logički izrazi.', NULL, '2025-01-15 00:48:30'),
(4, 'Polja i nizovi znakova', 'Jednostavno korištenje polja i nizova znakova', 'https://youtu.be/BSvFewITLv4?si=TSxdsze0judRvlDQ', '2025-01-15 00:48:30'),
(5, 'Jednostavno pretraživanje i sortiranje polja', 'Jednostavno pretraživanje i sortiranje polja i nizova. ', 'https://youtu.be/NYbzVk5vncM?si=krUasSW_zf5ibRRQ', '2025-01-18 20:23:44'),
(6, 'Slogovi i unije', 'Rad sa strukturama i unijama.', 'https://youtu.be/fTXnvSbAbWE?si=UVt1ZIRvxnVnS6Dh', '2025-01-15 00:48:30'),
(7, 'Pokazivači', 'Rad s pokazivačima i manipulacija memorijom.', 'https://youtu.be/oN-RparzioU?si=HTA3eOt5Fo0wD2YX&t=23', '2025-01-15 00:48:30'),
(8, 'Funkcije', 'Funkcije. Varijabilni parametri. Polja kao parametri.', 'https://youtu.be/KDI61ExnKZs?si=LrvtNeRcGVmj0OuS', '2025-01-15 00:48:30'),
(9, 'Funkcije (2. dio)', 'Rekurzivne funkcije, argumenti i polja', 'https://youtu.be/8TI-NIByHR0?si=e6yD23RYS1dsYCFt', '2025-01-18 20:25:49'),
(10, 'Metoda podijeli pa vladaj', 'Algoritmi podijeli pa vladaj.', NULL, '2025-01-15 00:48:30'),
(11, 'Datoteke', 'Rad s tekstualnim datotekama.', 'https://youtu.be/4k_sr8_v75s?si=6FPk8RHNGV4a5358', '2025-01-15 00:48:30'),
(13, '(skoro) sve zavrsna', 'Sadrži zadatke koji obuhvaćaju gradivo svih prethodnih lekcija -> ZA PRIREMU ZA ZAVRŠNU VJEŽBU PREPORUKA JE IZ SVAKE CIJELINE RIJEŠITI ZaDTAKE iz kategorije teško, vrlo teško i napredno. \r\n\r\nZadaci sa papira ogledne završne vježbe. Za pripremu za zadatke od profKud preporučam pogledati progdemos na youtubu.', NULL, '2025-01-20 14:59:18'),
(14, ' Ogledna završna vježba', 'Zadaci sa papira ogledne završne vježbe. Za pripremu za zadatke od profKud preporučam pogledati progdemos na youtubu.', NULL, '2025-01-24 16:59:11');

-- --------------------------------------------------------

--
-- Table structure for table `spcp_sol_tasks`
--

CREATE TABLE `spcp_sol_tasks` (
  `id` int(11) NOT NULL,
  `task_id` int(11) NOT NULL,
  `solution` longtext NOT NULL,
  `user_id` varchar(255) NOT NULL,
  `created_at` timestamp NULL DEFAULT current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `spcp_sol_tasks`
--

INSERT INTO `spcp_sol_tasks` (`id`, `task_id`, `solution`, `user_id`, `created_at`) VALUES
(1, 37, 'ada', '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', '2025-01-18 14:25:47'),
(2, 37, '#include <iostream>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n    int N;\r\n    double broj, najmanji, drugi_najmanji;\r\n\r\n    // Ulaz za broj N\r\n    do {\r\n        cout << \"Unesite pozitivan cijeli broj N: \";\r\n        cin >> N;\r\n    } while (N < 2); // Potrebno je najmanje 2 broja za rješenje\r\n\r\n    cout << \"Unesite \" << N << \" decimalnih brojeva:\" << endl;\r\n\r\n    // Unos prvog broja za početne vrijednosti\r\n    cin >> broj;\r\n    najmanji = broj;\r\n    drugi_najmanji = INFINITY;\r\n\r\n    // Obrada ostalih brojeva\r\n    for (int i = 1; i < N; i++) {\r\n        cin >> broj;\r\n\r\n        if (broj < najmanji) {\r\n            // Postojeći najmanji postaje drugi najmanji\r\n            drugi_najmanji = najmanji;\r\n            najmanji = broj;\r\n        } else if (broj < drugi_najmanji && broj != najmanji) {\r\n            // Broj je veći od najmanjeg, ali manji od trenutnog drugog najmanjeg\r\n            drugi_najmanji = broj;\r\n        }\r\n    }\r\n\r\n    if (drugi_najmanji == INFINITY) {\r\n        cout << \"Nije moguće odrediti drugi najmanji broj.\" << endl;\r\n    } else {\r\n        cout << \"Drugi najmanji broj je: \" << drugi_najmanji << endl;\r\n    }\r\n\r\n    return 0;\r\n}\r\n', '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', '2025-01-18 14:25:47'),
(3, 61, 'proba', '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', '2025-01-22 21:23:56'),
(4, 150, '#include <iostream>\r\n#include <cstdlib>\r\n#include <ctime>\r\nusing namespace std;\r\n\r\n\r\nint main()\r\n{\r\n	srand(time(0));\r\n	bool p[20];\r\n	\r\n	for (int i = 0; i<20; i++)\r\n	{\r\n		p[i] = rand()%2;\r\n	}\r\n	\r\n	for (int i = 0; i<20; i++)\r\n	{\r\n		cout<<p[i]<<\" \";\r\n	}\r\n	\r\n	//sortiranje izborom\r\n	for (int i = 20; i>0; i--)\r\n	{\r\n		int max = 0;\r\n		for (int j = 0; j<i; j++)\r\n		{\r\n			if (p[j] < p[max])\r\n			{\r\n				max = j;\r\n			}\r\n		}\r\n		\r\n		bool pom = p[i-1];\r\n		p[i-1] = p[max];\r\n		p[max] = pom;\r\n	}\r\n	\r\n	cout<<endl<<\"Ispis nakon sortiranja izborom: \"<<endl;\r\n	for (int i = 0; i<20; i++)\r\n	{\r\n		cout<<p[i]<<\" \";\r\n	}\r\n	\r\n	cout<<endl;\r\n	system(\"pause\");\r\n	return 0;\r\n}\r\n', '5ab2efa659df7fe84b31f0e01e871f5e6c48849717ee515f267362d4cb756e4e', '2025-01-23 17:16:07'),
(5, 277, '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    /* S obzirom na to da se unose prirodni brojevi (pozitivni cijeli brojevi),\r\n    koristimo `unsigned int` jer ono ne podržava negativne vrijednosti.*/\r\n    unsigned int x;\r\n    /* Varijabla `suma_parnih` započinje s vrijednošću 0 kao neutralan element \r\n    Varijabla `umnozak_neparnih` postavljena je s 1 zbog pravila u množenju */\r\n    unsigned int suma_parnih = 0, umnozak_neparnih = 1;\r\n\r\n    /*Logička varijabla `y` koristi se kako bismo pratili je li korisnik unio\r\n    barem jedan pozitivan broj. Ako nije, na kraju programa nema ispisa rezultata.*/\r\n    bool y = false;\r\n\r\n    /*Varijabla `pom` koristi se kao pomoćna za provjeru unosa negativnih brojeva.\r\n    Iako je `x` tipa `unsigned int`, negativni brojevi unose se kao `int` \r\n    i kasnije se provjeravaju kroz ovu varijablu.*/\r\n    int pom;\r\n\r\n    // Petlja za unos prirodnih brojeva (pozitivnih cijelih brojeva).\r\n    do {\r\n    	//unos prirodnog broja\r\n        cin >> x;\r\n\r\n        /* Da bismo provjerili je li unesen broj negativan (što `unsigned int` ne podržava),\r\n        unos kopiramo u pomoćnu varijablu `pom` tipa `int`. Ova varijabla omogućuje\r\n        pravilnu provjeru negativnih vrijednosti jer `unsigned int` pretvara negativne brojeve\r\n        u velike pozitivne vrijednosti.*/\r\n        pom = x;\r\n\r\n        // Ako je unesen broj veći od 0, obrađujemo ga.\r\n        if (pom > 0) {\r\n            y = true; // Postavljamo `y` na `true`, jer je unesen barem jedan pozitivan broj.\r\n\r\n            // Provjeravamo je li broj paran.\r\n            if (pom % 2 == 0) {\r\n                suma_parnih += pom; // Ako je broj paran, dodajemo ga u zbroj.\r\n            } else {\r\n                umnozak_neparnih *= pom; // Ako je broj neparan, množimo ga u umnožak.\r\n            }\r\n        }\r\n\r\n    } while (pom > 0); // Petlja se ponavlja dok se ne unese negativan broj.\r\n\r\n    // Ako je unesen barem jedan pozitivan broj (`y == true`), ispisujemo rezultate.\r\n    if (y) {\r\n        cout << endl << suma_parnih;       // Ispisuje se zbroj parnih brojeva.\r\n        cout << endl << umnozak_neparnih; // Ispisuje se umnožak neparnih brojeva.\r\n        cout << endl;\r\n    }\r\n\r\n    system(\"pause\");\r\n    return 0;\r\n}', 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', '2025-01-23 18:40:16'),
(6, 153, '#include<iostream>\r\n#include<cstdlib>\r\n#include<ctime>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\nsrand(time(0));\r\nchar polje[20];\r\nfor(int i=0; i<20; i++){\r\n	polje[i]=\'a\'+rand()%26;\r\n	cout << polje[i] << \" \";\r\n}\r\nbool zamjena = true;\r\nfor(int i=19; i>0; i--){\r\n	zamjena=false;\r\n	for(int j=0; j<i; j++){\r\n		if(polje[j]>polje[i]){\r\n			char pom=polje[j];\r\n			polje[j]=polje[j+1];\r\n			polje[j+1]=pom;\r\n			zamjena=true;\r\n		}\r\n	}\r\n}\r\n\r\ncout << \"\\n-----------------------------------------------------------------------\\n\";\r\nfor(int i=0; i<20; i++){\r\n	cout << polje[i] << \" \"; \r\n}\r\nreturn 0;\r\n}\r\n', 'dbaacb627139225570940a8d88d4372a02e07a39505b39918101d170b1eb4ba7', '2025-01-24 10:34:01'),
(7, 104, '#include <iostream>\r\n#include <ctime>\r\n#include <cstdlib>\r\nusing namespace std;\r\nint main(){\r\n	srand(time(0));\r\n	int x[15];\r\n	\r\n	for (int i=0; i<15; i++){\r\n		x[i]=rand()%41-20; // Generira broj u rasponu [-20, 20]\r\n		cout<<x[i]; \r\n		if (i!=14) cout<<\", \"; //zarez nakon broja, (osim zadnjeg)\r\n	}\r\n	\r\n	cout<<endl; \r\n	\r\n	for (int i=0; i<15; i++){\r\n		if(x[i]%2) cout<<x[i]<<\" \"; //za ispis neparnih brojeva, nije definirano da trebaju biti odvojeni zarezom pa su odvojeni razmakom\r\n	}\r\n	cout<<endl;\r\n	system(\"pause\");\r\n	return 0;\r\n}\r\n', '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', '2025-01-25 19:02:56'),
(8, 106, '#include <iostream>\r\n#include <ctime>\r\n#include <cstdlib>\r\nusing namespace std;\r\nint main(){\r\n	srand(time(0));\r\n	int x[20];\r\n	\r\n	for (int i=0; i<20; i++){ \r\n		if (i<10){\r\n			x[i]=rand()%21-30; // Generira broj u rasponu [-30, -10] zašto  rand()%21 a ne radn()%20 za generiranje 20 brojeva, zato jer počinje od 0 pa treba 1 više \r\n		}\r\n		else{\r\n			x[i]=rand()%21+10; // Generira broj u rasponu [10, 30] \r\n		}\r\n		\r\n		cout<<x[i];\r\n		if(i<20) cout<<\", \";\r\n	}\r\n	\r\n	cout<<endl; \r\n	\r\n	system(\"pause\");\r\n	return 0;\r\n}', '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', '2025-01-25 19:11:13'),
(9, 116, '#include <iostream>\r\n#include <cstdlib>\r\n#include <ctime>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n \r\n\r\n    int a[10]; // Originalni niz\r\n    int b[10]; // Drugi niz za izračune\r\n\r\n    // Generiranje nasumičnih brojeva za niz \'a\' i ispis\r\n    cout << \"Originalni niz: \";\r\n    for (int i = 0; i < 10; i++) {\r\n        a[i] = rand() % 9 + 1; // Generira broj u rasponu [1, 9]\r\n        cout << a[i];\r\n        if (i < 9) cout << \", \"; // Dodaje zarez osim za zadnji broj\r\n    }\r\n    cout << endl;\r\n	cout<<\" Drugi niz\";\r\n    // Izračun drugog niza \'b\'\r\n    for (int i = 0; i < 10; i++) {\r\n        // Ako smo na posljednjem elementu, uzmi prvi element kao \"sljedeći\"\r\n        int next = (i == 9) ? a[0] : a[i + 1];\r\n\r\n        // Ako je trenutni broj neparan, dodaj dvostruku vrijednost sljedećeg\r\n        if (a[i] % 2 != 0) {\r\n            b[i] = a[i] + 2 * next;\r\n        } \r\n        // Ako je trenutni broj paran, dodaj samo sljedeći broj\r\n        else {\r\n            b[i] = a[i] + next;\r\n        }\r\n        \r\n        cout<<b[i]<<\" \";\r\n    }\r\n    cout<<endl;\r\n\r\n    // Pronalazak minimalne vrijednosti u nizu \'b\' i maksimalne vrijednosti u nizu \'a\'\r\n    int min = b[0];\r\n    int max = a[0];\r\n    for (int i = 0; i < 10; i++) {\r\n        if (b[i] < min) min = b[i];\r\n        if (a[i] > max) max = a[i];\r\n    }\r\n\r\n    // Ispis rezultata\r\n    cout << \"Minimalna vrijednost u drugom nizu: \" << min << endl;\r\n    cout << \"Maksimalna vrijednost u originalnom nizu: \" << max << endl;\r\n\r\n    return 0;\r\n}\r\n', '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', '2025-01-26 11:24:31'),
(10, 297, '/*\r\nKreirajte cjelobrojno polje od 5 elemenata te u njega generirajte nasumične brojeve u rasponu od 2 do 8. \r\nNakon toga kreirajte znakovno polje iste veličine te u njega generirajte nasumične simbole + i -. \r\nProđite kroz polje sa znakovima i na pozicijama na kojima se nalazi +, na tim pozicijama u polju s brojevima vrijednost povećajte za 1\r\n, a na pozicijama na kojima se nalazi simbol -, na tim pozicijama u polju s brojevima brojeve umanjite za 1.\r\n*/\r\n\r\n#include <iostream>\r\n#include <cstdlib>\r\n#include <ctime>\r\nusing namespace std;\r\nint main(){\r\n	srand(time(0));\r\n	int a[5];\r\n	for (int i=0; i<5; i++){\r\n		a[i]=rand()%7+2;\r\n		cout<<a[i];\r\n	}\r\n	cout<<endl;\r\n	char b[5];\r\n	for(int i=0; i<5; i++){\r\n		if(rand()%2){\r\n			b[i]=\'+\';\r\n		}else{\r\n			b[i]=\'-\';\r\n		}\r\n		cout<<b[i];\r\n	}\r\n	cout<<endl;\r\n	for (int i=0; i<5; i++){\r\n		if(b[i]==\'+\'){\r\n			a[i]+=1;\r\n		}else if(b[i]==\'-\'){\r\n			a[i]-=1;\r\n		}\r\n		cout<<a[i];\r\n	}\r\n	cout<<endl;\r\n	\r\n}', 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', '2025-01-27 09:25:53'),
(11, 298, '#include <iostream>\r\n#include <cstdlib>\r\n#include <ctime>\r\n#include <cstring>\r\nusing namespace std;\r\nint main(){\r\n	srand(time(0));\r\n	char a[100];\r\n	cout<<\"Unesite rečenicu: \";\r\n	cin.getline(a,100);\r\n	for (int i=0; i<100; i++){\r\n		if(!(a[i]<\'a\'||a[i]>\'z\')){\r\n			if(a[i]!=\' \'){ \r\n			cout<<a[i];				\r\n			}\r\n		}\r\n	}\r\n}', 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', '2025-01-27 09:44:08'),
(12, 299, '#include <iostream>\r\n#include <cstdlib>\r\n#include <ctime>\r\n#include <cstring>\r\nusing namespace std;\r\nint main(){\r\n	srand(time(0));\r\n	int a[30];\r\n	for (int i=0; i<30; i++){\r\n		a[i]=rand()%90+10;\r\n		cout<<a[i]<<\" \";\r\n	}\r\n	cout<<endl;\r\n	for (int i=0; i<30; i++){\r\n		if(a[i]<29){\r\n			cout<<a[i]+a[i+1]<<\" \";\r\n		}else{\r\n			cout<<a[i]+a[0]<<\" \";//za zbroj zadnjeg i prvog\r\n		}\r\n	}\r\n	cout<<endl;\r\n}', 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', '2025-01-27 10:07:21'),
(13, 282, '#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n	int N;\r\n	int zbrojp = 0;\r\n	int zbrojnp = 0;\r\n	do{\r\n		cin >> N;\r\n		if (N % 2 == 0){\r\n			zbrojp += N;\r\n		}\r\n		else if (N%2 != 0){\r\n			zbrojnp += N;\r\n		}\r\n	}while(N!=0);\r\n	cout << \"Zbroj parnih brojeva = \" << zbrojp << endl;\r\n	cout << \"Zbroj neparnih brojeva = \" << zbrojnp << endl;\r\n	cout << endl;\r\n	system(\"pause\");\r\n	return 0;\r\n}\r\n\r\n', '8b16b46ba76bc4ad95ca97d447df70a6fa2317f400e3f021ba38c0427b7cbab2', '2025-01-27 19:05:31'),
(14, 300, '#include<iostream>\r\n#include<ctime>\r\n#include<cstdlib>\r\nusing namespace std;\r\nint main(){\r\n	srand(time(0));\r\n	double a[20];\r\n	for(int i=0; i<20; i++){\r\n		double pom=rand()%900+100;\r\n		a[i]=pom/100;\r\n		cout<<a[i]<<\" \";\r\n	}\r\n	cout<<endl;\r\n	for(int i=1; i<20; i++){\r\n		int j =i-1;\r\n		double pom=a[i];\r\n		while (j>=0 && a[j]>pom){\r\n			a[j+1]=a[j--];\r\n		}\r\n		a[j+1]=pom;\r\n	}\r\n	\r\n	for(int i=0; i<20; i++){\r\n		\r\n		cout<<a[i]<<\" \";\r\n	}\r\n	\r\nsystem(\"pause\");\r\nreturn 0;\r\n}\r\n', '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', '2025-01-27 19:37:32'),
(15, 100, '#include <iostream>\r\n#include <cstdlib>\r\n#include <ctime>\r\nusing namespace std;\r\n\r\nint main() {\r\n    srand(time(0));\r\n    \r\n    char polje[20];\r\n    int samoglasnici = 0;\r\n    int suglasnici = 0;\r\n\r\n    for (int i = 0; i < 20; i++) {\r\n        polje[i] = \'a\' + rand() % 26;\r\n        \r\n        if (polje[i] == \'a\' || polje[i] == \'e\' || polje[i] == \'i\' || polje[i] == \'o\' || polje[i] == \'u\') {\r\n            samoglasnici++;\r\n        } else {\r\n            suglasnici++;\r\n        }\r\n        cout << polje[i] << \" \";\r\n    }\r\n    \r\n    cout << endl << \"Broj samoglasnika: \" << samoglasnici;\r\n    cout << endl << \"Broj suglasnika: \" << suglasnici;\r\n    \r\n    return 0;        \r\n}\r\n', '9de8a79e20b405ddd21216364e8f91852a78f22dcf44eb3e05128486533d3844', '2025-01-28 22:07:11'),
(16, 53, '#include<iostream>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n	int broj, brojac = 0;\r\n	\r\n	do{\r\n		cout << \"Unos broja: \" << brojac + 1 << \": \";\r\n		cin >> broj;\r\n		brojac++;\r\n	} while (broj !=0);\r\n	\r\n	cout << \"Unos zavrsen. Ukupno unesenih brojeva (ukljucujuci 0): \" << brojac << endl;\r\n	\r\n	return 0; \r\n}', '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', '2025-02-12 15:02:01'),
(17, 149, '#include<iostream>\r\n#include<cstdlib>\r\n#include<ctime>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n	unsigned int brojevi;\r\n	int polje [20];\r\n	srand(time(0));\r\n	int pozitivni = 0, negativni = 0;\r\n	\r\n	\r\n	for( int i = 0; i < 20; i++){\r\n		polje[i] = rand()%21 -10;\r\n		cout << polje[i] << \" \";\r\n		if(polje[i] >= 0){\r\n			pozitivni++;\r\n		}else{\r\n			negativni++;\r\n			}\r\n	}\r\n	\r\n	cout << endl;\r\n	cout << \"Potivnih vrijednosti ukljucujuci nule ima: \" << pozitivni << endl;\r\n	cout << \"Neagtivnih vrijednosti ima: \" << negativni << endl;\r\n	\r\n	system(\"pause\");\r\n	return 0;\r\n}', '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', '2025-02-13 16:43:53');

-- --------------------------------------------------------

--
-- Table structure for table `spcp_tasks`
--

CREATE TABLE `spcp_tasks` (
  `id` int(11) NOT NULL,
  `lesson_id` int(11) NOT NULL,
  `title` varchar(255) NOT NULL,
  `description` text NOT NULL,
  `input` text DEFAULT NULL,
  `output` text DEFAULT NULL,
  `solution` text NOT NULL,
  `explanation` text DEFAULT NULL,
  `visibility` tinyint(1) NOT NULL DEFAULT 1,
  `public_id` text NOT NULL,
  `solution_status` tinyint(1) NOT NULL DEFAULT 0,
  `has_input` tinyint(1) NOT NULL DEFAULT 0,
  `created_at` datetime DEFAULT current_timestamp(),
  `difficulty` int(11) NOT NULL DEFAULT 1
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `spcp_tasks`
--

INSERT INTO `spcp_tasks` (`id`, `lesson_id`, `title`, `description`, `input`, `output`, `solution`, `explanation`, `visibility`, `public_id`, `solution_status`, `has_input`, `created_at`, `difficulty`) VALUES
(27, 3, 'Iteracije, skokovi – zadatak 1', 'Ulaz: Pozitivni cijeli broj N.\n\nIzlaz: N-ti član harmonijskog niza a_N = 1 + 1/2 + 1/3 + ... + 1/N.\n\nIzgled konzole:\nUnesite pozitivan cijeli broj N: 7\nN-ti clan harmonijskog niza a_N = 1+1/2...+1/N iznosi: 2.59286', 'Pozitivan cijeli broj N', 'N-ti clan harmonijskog niza a_N = 1+1/2...+1/N iznosi: [rezultat]', '#include<iostream>\n\nusing namespace std;\n\nint main(){\n	unsigned int N;\n	double a_N = 1;\n	cout<<\"Unesite pozitivan cijeli broj N: \";\n	cin>>N;\n	cout<<endl;\n	for (int i = 1; i < N; i++){\n		a_N = a_N+(1/double(i+1));\n	}\n	cout<<\"N-ti clan harmonijskog niza a_N = 1+1/2...+1/N iznosi: \"<<a_N<<endl;\n	system(\"pause\");\n	return 0;\n}', 'Ovaj zadatak koristi petlju kako bi izračunao n-ti član harmonijskog niza zbrajanjem recipročnih vrijednosti od 1 do N.', 0, '0', 0, 1, '2025-01-17 13:18:23', 2),
(28, 3, 'Iteracije, skokovi – zadatak 2', 'Ulaz: Pozitivni cijeli broj N i N cijelih brojeva.\r\n\r\nIzlaz: Najveći parni i neparni broj od svih unesenih.\r\n\r\nIzgled konzole:\r\nKoliko cete brojeva upisivati? 3\r\nUnesite 1. broj: 7\r\nUnesite 2. broj: -4\r\nUnesite 3. broj: 3\r\n------------------------\r\nNajveci parni upisani broj: 2\r\nNajveci neparni upisani broj: 7', 'Pozitivan cijeli broj N i N cijelih brojeva', 'Najveci parni i neparni broj od svih unesenih', '#include<iostream>\n\nusing namespace std;\n\nint main(){\n	unsigned int N; // broj brojeva\n	int broj; // unos broja u petlji\n	int max_p; // najveci parni\n	int max_np; // najveci neparni\n\n	bool prvi_put_parni = true;\n	bool prvi_put_neparni = true;\n\n	cout << \"Koliko cete brojeva upisivati? \";\n	cin >> N;\n\n	for (unsigned int i = 1; i <= N; i++) {\n		cout << \"Unesite \" << i << \". broj: \";\n		cin >> broj;\n		if ((broj % 2) == 0) {\n			if (prvi_put_parni) {\n				max_p = broj;\n				prvi_put_parni = false;\n			} else if ((broj > max_p)) max_p = broj;\n		} else {\n			if (prvi_put_neparni) {\n				max_np = broj;\n				prvi_put_neparni = false;\n			} else if ((broj > max_np)) max_np = broj;\n		}\n	}\n\n	cout<< \"------------------------\" << endl\n		<< \"Najveci parni upisani broj: \" << max_p << endl\n		<< \"------------------------\" << endl\n		<< \"Najveci neparni upisani broj: \" << max_np << endl\n		<< \"------------------------\" << endl;\n	system(\"pause\");\n	return 0;\n}', 'Ovaj zadatak koristi petlju za unos brojeva i traženje najvećeg parnog i neparnog broja. Koriste se varijable za praćenje prvog unosa kako bi se postavili početni maksimumi.', 1, '0', 0, 1, '2025-01-17 13:21:23', 2),
(29, 3, 'Iteracije, skokovi – zadatak 3', 'Ulaz: Broj N u rasponu [1, 26].\n\nIzlaz: Posljednjih toliko malih slova od slova „z“.\n\nIzgled konzole:\nUnesite broj izmedju 1 i 26: 17\nzyxwvutsrqponmlkj', 'Broj N u rasponu [1, 26]', 'Posljednjih toliko malih slova od slova „z“', '#include<iostream>\n\nusing namespace std;\n\nint main(){	\n	short N;\n	do{\n		cout << \"Unesite broj izmedju 1 i 26: \";\n		cin >> N;\n	}while(N < 1 || N > 26);\n	\n	for (int i = 0; i < N; i++){\n		cout << char(\'z\'-i);\n	}\n	cout << endl;\n	\n	system(\"pause\");\n	return 0;\n}', 'Ovaj zadatak koristi unos s ograničenjem da broj bude unutar [1, 26] te petlju za ispis slova unazad od „z“ ovisno o broju unesenih znakova.', 1, '0', 0, 1, '2025-01-17 13:22:35', 2),
(30, 3, 'Iteracije, skokovi – zadatak 4', 'Ulaz: Pozitivan cijeli broj N.\n\nIzlaz: Nacrtati trokut s N razina kao na slici ispod (svaka razina ima dvije zvjezdice više).\n\nIzgled konzole:\nUnesite pozitivan cijeli broj N: 4\n*\n***\n*****\n*******', 'Pozitivan cijeli broj N', 'Nacrtani trokut s N razina, svaka razina ima dvije zvjezdice više', '#include<iostream>\n\nusing namespace std;\n\nint main(){\n	unsigned int N;\n	do{\n		cout << \"Unesite pozitivan cijeli broj N: \";\n		cin >> N;\n	} while (N < 1);\n	\n	for (int i = 1; i <= (2*N-1); i++){\n		if (i%2 == 0) continue;\n		for (int c = 1; c <= i; c++){\n			cout << \"*\";\n		}\n		cout << endl;\n	}\n	\n	cout << endl;\n	system(\"pause\");\n	return 0;\n}', 'Ovaj zadatak koristi petlje za crtanje trokuta s N razina. Vanjska petlja kontrolira broj redaka, dok unutarnja petlja ispisuje zvjezdice u svakom retku. Preskaču se redci s parnim brojem zvjezdica.', 1, '0', 0, 1, '2025-01-17 13:23:23', 2),
(31, 3, 'Iteracije, skokovi – zadatak 5', 'Ulaz: Pozitivan cijeli broj N i N cijelih brojeva.\n\nIzlaz: Umnožak onih unesenih brojeva djeljivih s brojem 7.\n\nIzgled konzole:\nPozitivan broj: 5\nUnosi cijele brojeve:\n3\n5\n-28\n30\n49\nUmnozak svih djeljivih sa brojem 7: -1372', 'Pozitivan cijeli broj N i N cijelih brojeva', 'Umnožak unesenih brojeva djeljivih s brojem 7', '#include<iostream>\n\nusing namespace std;\n\nint main(){\n	int N;\n	do{\n		cout << \"Pozitivan broj: \";\n		cin >> N;\n	}while (N < 0);\n\n	int umnozak_djeljivih = 1; \n\n	cout << \"Unosi cijele brojeve:\\n\";\n	for (int i = 0; i < N; i++)\n	{\n		int unos;\n		cin >> unos;\n		if (unos != 0)\n		{\n			if (!(unos%7)) umnozak_djeljivih *= unos;\n		}\n	}\n\n	cout << \"Umnozak svih djeljivih sa brojem 7: \" << umnozak_djeljivih << endl;\n\n	cout << endl;\n	system(\"pause\");\n	return 0;\n}', 'Ovaj zadatak koristi petlju za unos N brojeva i izračunava umnožak svih unesenih brojeva koji su djeljivi s 7. Varijable unutar petlji se deklariraju lokalno radi sigurnosti i čistoće koda.', 1, '0', 0, 1, '2025-01-17 13:24:18', 3),
(32, 3, 'Iteracije, skokovi – zadatak 6', 'Ulaz: Broj N u rasponu [1, 26].\n\nIzlaz: U prvom retku N slova A, u drugom N-1 slova B, u trećem N-2 slova C itd.\n\nIzgled konzole:\nUnesite broj izmedju 1 i 26: 5\nAAAAA\nBBBB\nCCC\nDD\nE', 'Broj N u rasponu [1, 26]', 'U prvom retku N slova A, u drugom N-1 slova B, itd.', '#include<iostream>\n\nusing namespace std;\n\nint main()\n{	unsigned short N;\n	do {\n		cout << \"Unesite broj izmedju 1 i 26: \";\n		cin >> N;\n	} while (N < 1 || N > 26);\n	\n	for (int i = 0; i < N; i++) {\n		for (int c = N; c > i; c--) {\n			cout << char(\'A\'+i);\n		}\n		cout << endl;\n	}\n	\n	cout<<endl;\n	system(\"pause\");\n	return 0;\n}', 'Zadatak koristi petlje za ispis slova u uzlaznom redoslijedu prema ASCII vrijednostima. Vanjska petlja kontrolira broj redaka, dok unutarnja određuje broj slova u svakom retku, smanjujući broj slova za svaku iteraciju.', 1, '0', 0, 1, '2025-01-17 13:25:48', 2),
(34, 3, 'Iteracije, skokovi – zadatak 1', 'Napravite program za sljedeći problem: Ulaz: Pozitivni cijeli broj N. Izlaz: A_n gdje je A_0=1 A_n=2*A_(N-1).', 'Pozitivan cijeli broj N', 'A_n gdje je A_0=1 A_n=2*A_(N-1)', '', '', 3, '0', 0, 1, '2025-01-17 13:31:25', 1),
(35, 3, 'Iteracije, skokovi – zadatak 2', 'Napravite program za sljedeći problem: Ulaz: Broj N između 1 i 26. Izlaz: Ispisati posljednjih N malih slova engleske abecede počevši od Z u istom retku.', 'Broj N između 1 i 26', 'Ispis posljednjih N slova engleske abecede počevši od Z', '', NULL, 3, '0', 0, 1, '2025-01-17 13:32:05', 2),
(36, 3, 'Iteracije, skokovi – zadatak 3', 'Napravite program za sljedeći problem: Ulaz: Broj N. Izlaz: pomoću znaka * ispisati jednakokračan trokut s bazom na vrhu koji u prvom retku ima 2*N-1 zvjezdicu, u drugom 2*N-3, u trećem 2*N-5 itd., do N-tog retka u kojem ima 1 zvjezdica.', 'Pozitivan cijeli broj N', 'Jednakokračan trokut s bazom na vrhu', '', NULL, 3, '0', 0, 1, '2025-01-17 13:32:05', 3),
(37, 3, 'Iteracije, skokovi – zadatak 4', 'Napravite program za sljedeći problem: Ulaz: Pozitivan cijeli broj N i N decimalnih brojeva. Izlaz: Ispisati drugi po redu najmanji uneseni broj.', 'Pozitivan cijeli broj N i N decimalnih brojeva', 'Drugi po redu najmanji uneseni broj', '#include <iostream>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n    int N;\r\n    double broj, najmanji, drugi_najmanji;\r\n\r\n    // Ulaz za broj N\r\n    do {\r\n        cout << \"Unesite pozitivan cijeli broj N: \";\r\n        cin >> N;\r\n    } while (N < 2); // Potrebno je najmanje 2 broja za rješenje\r\n\r\n    cout << \"Unesite \" << N << \" decimalnih brojeva:\" << endl;\r\n\r\n    // Unos prvog broja za početne vrijednosti\r\n    cin >> broj;\r\n    najmanji = broj;\r\n    drugi_najmanji = INFINITY;\r\n\r\n    // Obrada ostalih brojeva\r\n    for (int i = 1; i < N; i++) {\r\n        cin >> broj;\r\n\r\n        if (broj < najmanji) {\r\n            // Postojeći najmanji postaje drugi najmanji\r\n            drugi_najmanji = najmanji;\r\n            najmanji = broj;\r\n        } else if (broj < drugi_najmanji && broj != najmanji) {\r\n            // Broj je veći od najmanjeg, ali manji od trenutnog drugog najmanjeg\r\n            drugi_najmanji = broj;\r\n        }\r\n    }\r\n\r\n    if (drugi_najmanji == INFINITY) {\r\n        cout << \"Nije moguće odrediti drugi najmanji broj.\" << endl;\r\n    } else {\r\n        cout << \"Drugi najmanji broj je: \" << drugi_najmanji << endl;\r\n    }\r\n\r\n    return 0;\r\n}\r\n', NULL, 3, '0', 0, 1, '2025-01-17 13:32:05', 3),
(38, 3, 'Iteracije, skokovi – zadatak 5', 'Napravite program za sljedeći problem: Ulaz: Pozitivan cijeli broj N između 0 i 31. Izlaz: 2^N-1. Zabranjeno je koristiti funkciju pow.', 'Pozitivan cijeli broj N između 0 i 31', '2^N-1', '', NULL, 3, '0', 0, 1, '2025-01-17 13:32:05', 3),
(39, 3, 'Iteracije, skokovi – zadatak 1', 'Napravite program za sljedeći problem: Ulaz: Pozitivni cijeli broj N i N pozitivnih cijelih brojeva. Izlaz: Svaki broj zamijeniti najmanjim cijelim brojem većim ili jednakim upisanom koji je djeljiv s 3 te tako dobijene brojeve zbrojiti i ispisati sumu.', 'Pozitivan cijeli broj N i N pozitivnih cijelih brojeva', 'Suma brojeva dobivenih zamjenom i zbrajanjem', '', NULL, 3, '0', 0, 1, '2025-01-17 13:34:34', 3),
(40, 3, 'Iteracije, skokovi – zadatak 3', 'Napravite program za sljedeći problem: Ulaz: Pozitivni cijeli broj N i N cijelih brojeva. Izlaz: Suma svih unesenih brojeva djeljivih sa 7.', 'Pozitivan cijeli broj N i N cijelih brojeva', 'Suma brojeva djeljivih s 7', '', NULL, 3, '0', 0, 1, '2025-01-17 13:34:34', 3),
(41, 3, 'Iteracije, skokovi – zadatak 4', 'Napravite program za sljedeći problem: Ulaz: Pozitivni cijeli broj N. Izlaz: Aritmetička sredina od N pseudoslučajnih brojeva između -100 i 100.', 'Pozitivan cijeli broj N', 'Aritmetička sredina od N pseudoslučajnih brojeva', '', NULL, 3, '0', 0, 1, '2025-01-17 13:34:34', 2),
(42, 3, 'Iteracije, skokovi – zadatak 2', 'Napravite program za sljedeći problem: Ulaz: Niz cijelih brojeva koji moraju biti između 0 i 31. Unos se završava kada se unese -1 i on ne ulazi u obradu. Izlaz: Uneseni brojevi predstavljaju pozicije u binarnom zapisu broja koji su 1. Nakon unosa ispisati o kojem se broju radi. Ako broj koji je unesen nije između 0 i 31 ili pak -1 vratiti poruku pogreške. Zabranjeno je koristiti funkciju pow.', 'Niz cijelih brojeva u rasponu od 0 do 31', 'Dekadski prikaz binarnog broja formiranog prema unesenim pozicijama', '#include <iostream>\n\nusing namespace std;\n\nint main() {\n    int broj;\n    unsigned int rezultat = 0;\n\n    cout << \"Unosite brojeve u rasponu od 0 do 31. Za kraj unesite -1.\" << endl;\n\n    while (true) {\n        cin >> broj;\n\n        if (broj == -1) {\n            break;\n        }\n\n        if (broj < 0 || broj > 31) {\n            cout << \"Pogreška: Broj mora biti u rasponu od 0 do 31.\" << endl;\n            continue;\n        }\n\n        rezultat |= (1 << broj);\n    }\n\n    cout << \"Rezultat u dekadskom obliku: \" << rezultat << endl;\n\n    return 0;\n}', 'Program koristi binarne operacije za formiranje broja temeljenog na unesenim pozicijama. Operacija pomaka `(1 << broj)` omogućuje postavljanje odgovarajućeg bita na 1, dok operacija OR (`|=`) kombinira bitove u konačni rezultat.', 3, '0', 0, 1, '2025-01-17 16:33:35', 4),
(46, 3, 'Iteracije, skokovi – zadatak 10', 'Ulaz: Pozitivan cijeli broj N.\nIzlaz: Izračun aritmetičke sredine N random brojeva.', 'Pozitivan cijeli broj N', 'Aritmetička sredina N random brojeva', '#include<iostream>\n#include<cstdlib>\n#include<ctime>\nusing namespace std;\n\nint main(){\n	srand(time(0));\n	rand();\n	unsigned int N;\n	int suma = 0;\n	do {\n		cout << \"Unesite pozitivan cijeli broj N: \";\n		cin >> N;\n	} while (N < 1);\n	for (int i = 1; i <= N; i++)\n		suma += rand();\n	cout << suma / N << endl;\n	return 0;\n}', 'Koristi random brojeve pomoću funkcija `rand()` i izračunava aritmetičku sredinu zadanog broja slučajnih brojeva.', 1, '', 0, 1, '2025-01-18 19:00:32', 5),
(47, 3, 'Iteracije, skokovi – zadatak 11', 'Ulaz: Pozitivan cijeli broj N i N decimalnih brojeva.\nIzlaz: Drugi po redu najveći broj.', 'Pozitivan cijeli broj N i N decimalnih brojeva', 'Drugi najveći broj', '#include<iostream>\n#include<cmath>\nusing namespace std;\nint main(){\n	int N;\n	float unos;\n	float max_1 = 0;\n	float max_2 = 0;\n	cout << \"Unesite broj brojeva: \";\n	cin >> N;\n	for (int i = 1; i <= N; i++){\n		cin >> unos;\n		if (i==1) (max_1 = unos) && (max_2 = unos);\n		else if (unos>max_2)\n		{\n			if (unos>max_1){\n				max_2 = max_1;\n				max_1 = unos;\n			}\n			else max_2 = unos;\n		}\n	}\n	cout << \"Drugi najveci: \" << max_2 << endl;\n	return 0;\n}', 'Izračunava drugi najveći broj kroz iteraciju, prateći dva najveća broja u svakoj iteraciji.', 1, '', 0, 1, '2025-01-18 19:00:58', 3),
(48, 3, 'Iteracije, skokovi – zadatak 12', 'Ulaz: Pozitivan cijeli broj N.\nIzlaz: Svaka znamenka broja N u novom retku.', 'Pozitivan cijeli broj N', 'Svaka znamenka u novom retku', '#include<iostream>\nusing namespace std;\nint main(){\n	unsigned long N;\n	unsigned int brojac_znamenki = 1;\n	cout << \"Unesite cijeli pozitivni broj: \";\n	cin >> N;\n	for (int i = N; i>10; i/=10){\n		brojac_znamenki *= 10;\n	}\n	for (int N_2;brojac_znamenki>0;brojac_znamenki/=10){\n		N_2 = N;\n		N_2 /= brojac_znamenki;\n		cout << N_2 << endl;\n		N-=N_2*brojac_znamenki;\n	}\n	return 0;\n}', 'Prikazuje svaku znamenku pozitivnog cijelog broja iteracijom preko broja.', 1, '', 0, 1, '2025-01-18 19:01:32', 4),
(49, 3, 'Iteracije, skokovi – zadatak 13', 'Ulaz: Pozitivan cijeli broj N.\nIzlaz: Pozicije bitova broja N koji iznose 1.', 'Pozitivan cijeli broj N', 'Pozicije bitova sa 1', '#include<iostream>\nusing namespace std;\nint main(){\n	unsigned int N;\n	cout << \"Unesite pozitivan cijeli broj: \";\n	cin >> N;\n	for (int i = 31; i>=0; i--){\n		if ((N&1<<i)>>i==1) cout << i << endl;\n	}\n	return 0;\n}', 'Prikazuje pozicije bitova koji imaju vrijednost 1 koristeći bitwise operacije.', 1, '', 0, 1, '2025-01-18 19:01:57', 6),
(50, 3, 'Iteracije, skokovi – zadatak 14', 'Ulaz: Pozitivan cijeli broj N i N decimalnih brojeva.\nIzlaz: Najmanja razlika između neposredno unesenih brojeva.', 'Pozitivan cijeli broj N i N decimalnih brojeva', 'Najmanja razlika između neposrednih brojeva', '#include<iostream>\n#include<cmath>\nusing namespace std;\nint main(){\n	unsigned int N;\n	int razlika_min = 0;\n	cout << \"Unesite broj brojeva: \";\n	cin >> N;\n	for (int i = 1; i<=N; i++){\n		int unos;\n		int unos_stari;\n		int razlika = 0;\n		cin >> unos;\n		if (i==1) unos_stari = unos;\n		else razlika = abs(abs(unos) - abs(unos_stari));\n		if (razlika<razlika_min) razlika_min = razlika;\n		if (i==2) razlika_min = razlika;\n		unos_stari = unos;\n	}\n	cout << \"Najmanja apsolutna razlika dvaju susjednih clanova iznosi: \" << razlika_min << endl;\n	return 0;\n}', 'Pronalazi najmanju razliku između susjednih unesenih brojeva iteracijom i usporedbom.', 1, '', 0, 1, '2025-01-18 19:02:38', 5),
(51, 3, 'Iteracije, složeni logički izrazi – zadatak 1', 'Dopustite korisniku unos cijelih brojeva. Nastavite unos sve dok korisnik unosi negativne brojeve. Kada korisnik unese nulu ili pozitivan broj, ispišite zbroj svih unesenih negativnih brojeva.', 'Niz cijelih brojeva, prekid unosa nulom ili pozitivnim brojem', 'Zbroj negativnih brojeva', '', 'Program koristi petlju koja iterativno zbraja negativne brojeve sve do trenutka prekida.', 3, '', 0, 1, '2025-01-18 19:07:36', 2),
(52, 3, 'Iteracije, složeni logički izrazi – zadatak 2', 'Omogućite unos jednog slova iz engleske abecede. Ako uneseno slovo nije malo slovo, zatražite ispravan unos. Kada korisnik unese malo slovo, ispišite \"Unijeli ste slovo x\" gdje je x uneseno slovo.', 'Jedno slovo engleske abecede', 'Ispis unešenog malog slova', '', 'Program provjerava da li je uneseno slovo malo te ponavlja unos dok ne postane ispravno.', 3, '', 0, 1, '2025-01-18 19:08:40', 2),
(53, 3, 'Iteracije, složeni logički izrazi – zadatak 3', 'Kreirajte program za unos cijelih brojeva. Nastavite unos dok korisnik ne unese broj nula. Prije svakog unosa ispišite broj koliko je unosa već napravljeno.', 'Niz cijelih brojeva, prekid nulom', 'Ispis broja unosa', '#include<iostream>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n	int broj, brojac = 0;\r\n	\r\n	do{\r\n		cout << \"Unos broja: \" << brojac + 1 << \": \";\r\n		cin >> broj;\r\n		brojac++;\r\n	} while (broj !=0);\r\n	\r\n	cout << \"Unos zavrsen. Ukupno unesenih brojeva (ukljucujuci 0): \" << brojac << endl;\r\n	\r\n	return 0; \r\n}', 'Program koristi brojač za evidentiranje broja iteracija prije unosa svakog broja.', 3, '', 0, 1, '2025-01-18 19:09:01', 2),
(54, 3, 'Iteracije, složeni logički izrazi – zadatak 4', 'Napravite program koji omogućuje unos cijelih brojeva. Unos se ponavlja dok korisnik ne unese nulu. Nakon toga, ispišite ukupni zbroj svih unesenih brojeva.', 'Niz cijelih brojeva, prekid nulom', 'Ukupan zbroj svih brojeva', '', 'Program koristi petlju koja se zaustavlja unosom broja nula, zbrajajući sve prethodne brojeve.', 3, '', 0, 1, '2025-01-18 19:09:01', 1),
(55, 3, 'Iteracije, složeni logički izrazi – zadatak 5', 'Omogućite unos pozitivnog cijelog broja. Ispišite sve brojeve od 1 do unesenog broja koristeći petlju.', 'Pozitivan cijeli broj', 'Ispis brojeva od 1 do unesenog broja', '', 'Petlja iterativno ispisuje sve brojeve od 1 do unesenog broja.', 3, '', 0, 1, '2025-01-18 19:09:01', 1),
(56, 3, 'Osnovni zadatak – površina pravokutnika', 'Kreirajte program koji traži od korisnika da unese duljinu i širinu pravokutnika. Program zatim ispisuje površinu pravokutnika.', 'Dva pozitivna decimalna broja (duljina i širina)', 'Površina pravokutnika', '', 'Program traži unos dvaju brojeva, računa njihov produkt i ispisuje rezultat kao površinu pravokutnika.', 1, '', 0, 1, '2025-01-18 19:11:07', 1),
(57, 3, 'Osnovni zadatak – provjera parnosti', 'Kreirajte program koji traži od korisnika da unese cijeli broj. Program ispisuje je li broj paran ili neparan.', 'Jedan cijeli broj', 'Poruka je li broj paran ili neparan', '', 'Program provjerava ostaje li ostatak dijeljenja broja s 2 jednak 0 te na temelju toga ispisuje odgovarajuću poruku.', 1, '', 0, 1, '2025-01-18 19:11:07', 1),
(58, 3, 'Osnovni zadatak – pretvaranje temperature', 'Kreirajte program koji traži od korisnika da unese temperaturu u Celzijusima. Program zatim izračunava i ispisuje temperaturu u Fahrenheitima koristeći formulu F = C * 1.8 + 32.', 'Jedan decimalni broj (temperatura u Celzijusima)', 'Temperatura u Fahrenheitima', '', 'Program koristi formulu za pretvorbu temperature iz Celzijusa u Fahrenheit i ispisuje rezultat.', 1, '', 0, 1, '2025-01-18 19:11:07', 2),
(59, 3, 'Iteracije i skokovi – zbroj brojeva u rasponu', 'Kreirajte program koji traži od korisnika unos dvaju cijelih brojeva, a i b, gdje je a < b. Program zatim zbraja sve cijele brojeve između a i b (uključujući a i b) te ispisuje rezultat.', 'Dva cijela broja, gdje je prvi manji od drugog', 'Zbroj svih brojeva u zadanom rasponu', '', 'Program koristi petlju za iteraciju kroz zadani raspon te zbraja brojeve u varijablu koja sadrži rezultat.', 3, '', 0, 1, '2025-01-18 19:13:51', 4),
(60, 3, 'Iteracije i skokovi – broj znamenki u broju', 'Kreirajte program koji traži od korisnika unos cijelog broja. Program zatim računa i ispisuje koliko znamenki ima uneseni broj.', 'Cijeli broj', 'Broj znamenki unesenog broja', '', 'Program koristi petlju za iterativno dijeljenje broja s 10 dok broj ne postane 0 kako bi prebrojio znamenke.', 3, '', 0, 1, '2025-01-18 19:13:51', 5),
(61, 3, 'Iteracije, skokovi – zadatak 15', 'Napišite program koji pretvara 16-bitni binarni broj u dekadski broj. Unos se vrši znamenku po znamenku.', '16 binarnih znamenki', 'Dekadski zapis unesenog binarnog broja', '', 'Program koristi petlju za obradu svake znamenke binarnog broja i konverziju u dekadski format pomoću matematičkih operacija.', 1, '', 0, 1, '2025-01-18 19:18:28', 3),
(62, 3, 'Iteracije, skokovi – zadatak 16', 'Unesite pozicije bitova (0-31) koji trebaju biti postavljeni na 1 u binarnom zapisu. Program zatim ispisuje dekadski broj.', 'Pozicije bitova (0-31), unos završava -1', 'Dekadski zapis broja sa zadanim bitovima', '', 'Program koristi bitovne operatore za postavljanje određenih bitova na 1 i izračun rezultirajućeg dekadskog broja.', 1, '', 0, 1, '2025-01-18 19:18:28', 5),
(63, 3, 'Iteracije, skokovi – zadatak 17', 'Napišite program koji izračunava aproksimaciju Eulerovog broja pomoću zadane formule i broja iteracija N.', 'Pozitivan cijeli broj N', 'Vrijednost Eulerovog broja s 12 decimalnih mjesta', '', 'Program koristi dvije ugniježđene petlje za izračunavanje razlomaka u nizu i njihovo dodavanje u ukupni rezultat.', 1, '', 0, 1, '2025-01-18 19:18:28', 6),
(64, 3, 'Iteracije, skokovi – zadatak 18', 'Napišite program koji prima malo slovo engleske abecede i ispisuje tri slova nakon njega. Nakon slova \"z\" ispisuje se \"a\".', 'Jedno malo slovo engleske abecede', 'Tri slova nakon zadanog slova u abecedi', '', 'Program koristi petlju za izračunavanje idućih slova u abecedi, vodeći računa o prelasku sa slova \"z\" na \"a\".', 1, '', 0, 1, '2025-01-18 19:18:28', 3),
(65, 3, 'Iteracije, skokovi – zadatak 19', 'Unesite tri cijela broja. Program ispisuje dva broja s najmanjom razlikom među njima.', 'Tri cijela broja', 'Dva broja s najmanjom razlikom', '', 'Program izračunava apsolutne razlike između svih parova brojeva i ispisuje par s najmanjom razlikom.', 1, '', 0, 1, '2025-01-18 19:18:28', 5),
(66, 3, 'Iteracije, skokovi – zadatak 20', 'Ulaz: Pozitivan cijeli broj za dan i mjesec. Izlaz: Horoskopski znak kojem datum pripada.', 'Pozitivan cijeli broj za dan i mjesec', 'Horoskopski znak', '#include<iostream>\n\nusing namespace std;\n\nint main(){\n	// Rješenje je ovdje prikazano u obliku koda, vidi [109].\n	return 0;\n}', 'Program koristi \"switch\" naredbu za određivanje horoskopskog znaka na temelju dana i mjeseca.', 1, '', 0, 1, '2025-01-18 19:34:42', 4),
(67, 3, 'Iteracije, skokovi – zadatak 21', 'Ulaz: Dva decimalna broja za stranice pravokutnika. Izlaz: Dijagonala pravokutnika izračunata Pitagorinim poučkom.', 'Dva decimalna broja', 'Dijagonala pravokutnika', '#include<iostream>\n#include<cmath>\n\nusing namespace std;\n\nint main(){\n	// Rješenje je ovdje prikazano u obliku koda, vidi [110].\n	return 0;\n}', 'Program koristi Pitagorin poučak za izračun dijagonale pravokutnika i ispisuje rezultat.', 1, '', 0, 1, '2025-01-18 19:34:42', 4),
(68, 3, 'Iteracije, skokovi – zadatak 22', 'Ulaz: Broj N iz intervala [1, 80]. Izlaz: Oblik obrnutog trokuta ispunjenog ASCII znakovima 176, 177 i 178.', 'Pozitivan cijeli broj iz intervala [1, 80]', 'Invertirani trokut ispunjen ASCII znakovima', '#include<iostream>\n\nusing namespace std;\n\nint main(){\n	// Rješenje je ovdje prikazano u obliku koda, vidi [111].\n	return 0;\n}', 'Program iscrtava obrnut trokut pomoću ASCII znakova i mijenja simbole prema redovima.', 1, '', 0, 1, '2025-01-18 19:34:42', 6),
(69, 3, 'Iteracije, skokovi – zadatak', 'Ulaz: Pozitivan cijeli broj N i N cijelih brojeva. Izlaz: Ispisati najmanji parni i najmanji neparni uneseni broj.', '', '', '', 'Program koristi petlju za iteraciju brojeva i provjerava uvjete za parnost i najmanju vrijednost.', 3, '', 0, 1, '2025-01-18 19:38:51', 1),
(70, 3, 'Iteracije, skokovi – zadatak 2', 'Ulaz: Brojevi M i N. M treba biti manje od N. Izlaz: Ispisati sve brojeve između M i N koji su djeljivi sa 7. Ako je M >= N, ispisati poruku \"pogresno uneseni brojevi\".', '', '', '', 'Program provjerava uvjet ( M < N ) i koristi petlju za ispis brojeva djeljivih sa 7.', 3, '', 0, 1, '2025-01-18 19:39:11', 2),
(71, 3, 'Iteracije, skokovi – zadatak 3', 'Ulaz: Pozitivan cijeli broj N i N cijelih brojeva. Izlaz: Ispisati najveći parni i najveći neparni uneseni broj.', '', '', '', 'Program koristi petlju za iteraciju brojeva i provjerava uvjete za parnost i najveću vrijednost.', 3, '', 0, 1, '2025-01-18 19:39:23', 3),
(72, 3, 'Iteracije, skokovi – zadatak 4', 'Ulaz: Broj N iz intervala [1, 26]. Izlaz: Ispisati prvih N malih slova engleske abecede u istom retku.', '', '', '', 'Program koristi petlju za iteraciju kroz ASCII vrijednosti malih slova od \'a\' do \'a\' + N.', 3, '', 0, 1, '2025-01-18 19:41:50', 4),
(73, 3, 'Iteracije, skokovi – zadatak 5', 'Ulaz: Pozitivan cijeli broj N iz intervala [0, 31]. Izlaz: 2^N - 1. Zabranjeno je koristiti funkciju pow.', '', '', '', 'Program koristi petlju za ručno množenje 2 i računa vrijednost 2^N bez korištenja funkcije pow.', 3, '', 0, 1, '2025-01-18 19:42:04', 5),
(74, 2, 'Osnovne operacije – zadatak 2a', 'Deklarirajte varijablu tipa int pod imenom x i dodijelite joj vrijednost 10. Zatim ispišite tu vrijednost na ekran.', 'Nema ulaznih podataka', 'Vrijednost broja: 10', '#include <iostream>\nusing namespace std;\n\nint main() {\n    int x = 10; \n    cout << \"Vrijednost broja: \" << x << endl; \n    return 0;\n}', 'Program koristi deklaraciju i inicijalizaciju varijable tipa int te ispisuje njezinu vrijednost koristeći cout.', 1, '', 0, 0, '2025-01-18 19:45:04', 1),
(75, 2, 'Osnovne operacije – zadatak 2b', 'Deklarirajte varijablu tipa float pod imenom decimalniBroj. Korisnik unosi vrijednost, a program je ispisuje na ekran.', 'Decimalni broj (npr. 5.5)', 'Unesena vrijednost (npr. 5.5)', '#include <iostream>\nusing namespace std;\n\nint main() {\n    float decimalniBroj;\n    cout << \"Unesite decimalni broj: \";\n    cin >> decimalniBroj;\n    cout << decimalniBroj << endl;\n    return 0;\n}', 'Program koristi cin za unos decimalnog broja i cout za ispis unesene vrijednosti.', 1, '', 0, 1, '2025-01-18 19:45:04', 2),
(76, 2, 'Osnovne operacije – zadatak 2c', 'Deklarirajte pozitivna cijelobrojna broja a i b. Unesite njihove vrijednosti i ispišite zbroj, razliku, umnožak i kvocijent.', 'Dva pozitivna cijela broja (npr. 5 i 10)', 'Rezultati: zbroj, razlika, umnožak i kvocijent (npr. 15, -5, 50, 0)', '#include <iostream>\nusing namespace std;\n\nint main() {\n    unsigned int a, b; \n    cin >> a >> b;\n    cout << a + b << endl; \n    cout << a - b << endl; \n    cout << a * b << endl; \n    cout << a / b << endl; \n    return 0;\n}', 'Program koristi unsigned int za pozitivne brojeve i cout za ispis svih rezultata aritmetičkih operacija.', 1, '', 0, 1, '2025-01-18 19:45:50', 2),
(77, 2, 'Osnovne operacije – zadatak 2d', 'Unesite cijeli broj x. Ispišite vrijednost x+1, x-1 i x*2, svaki u novi red.', 'Cijeli broj x (npr. 10)', 'Vrijednosti: 11, 9, 20', '#include <iostream>\nusing namespace std;\n\nint main() {\n    int x; \n    cin >> x;\n    cout << x + 1 << endl << x - 1 << endl << x * 2;\n    return 0;\n}', 'Program koristi osnovne aritmetičke operacije i cout za ispis rezultata u tri reda.', 1, '', 0, 1, '2025-01-18 19:48:20', 3),
(78, 2, 'Osnovne operacije – zadatak 2e', 'Napišite program u kojem korisnik unosi decimalni broj x. Program prvo treba ispisati cjelobrojni dio varijable. U novom retku treba ispisati decimalni dio varijable.', 'Decimalni broj x (npr. 56.57)', 'Cjelobrojni dio: 56, decimalni dio: 0.57', '#include <iostream>\nusing namespace std;\n\nint main() {\n    double x; \n    cin >> x;\n    cout << (int)x << endl << x - (int)x;\n    return 0;\n}', 'Koristi se zagrada ispred naziva varijable za pretvorbu u drugi tip podataka (int) kako bi se izdvojio cjelobrojni dio.', 1, '', 0, 1, '2025-01-18 19:48:35', 4),
(79, 2, 'Osnovne operacije – zadatak 2f', 'Napišite program u kojem korisnik unosi 3 cijelobrojna pozitivna broja i jedan decimalni broj. Program ispisuje sve brojeve u istom redu, obrnutim redoslijedom. Nakon toga u novom retku ispisuje sumu svih unesenih brojeva. (riješiti bez korištenja petlji)', 'Tri cijela broja i jedan decimalni broj (npr. 5, 10, 15, 3.5)', 'Brojevi obrnutim redoslijedom: 3.5, 15, 10, 5. Suma: 33.5', '#include <iostream>\nusing namespace std;\n\nint main() {\n    unsigned int a, b, c; \n    float d; \n    cin >> a >> b >> c >> d; \n    cout << d << \" \" << c << \" \" << b << \" \" << a;\n    float suma = a + b + c + d; \n    cout << endl << suma;\n    return 0;\n}', 'Varijabla suma je tipa float jer se zbrajaju cijeli brojevi s decimalnim brojem, što osigurava očuvanje decimalne točnosti.', 1, '', 0, 1, '2025-01-18 19:49:02', 4),
(80, 2, 'Selekcije – zadatak 2g', 'Unesite cijeli broj x. Ako je broj paran, ispišite \"Broj je paran\". Ako je neparan, ispišite \"Broj je neparan\".', 'Cijeli broj x (npr. 7)', 'Broj je neparan', '#include <iostream>\nusing namespace std;\n\nint main() {\n    int x;\n    cin >> x;\n    if (x % 2 == 0) {\n        cout << \"Broj je paran\" << endl;\n    } else {\n        cout << \"Broj je neparan\" << endl;\n    }\n    return 0;\n}', 'Program koristi operator % za provjeru ostatka pri dijeljenju s 2 kako bi odredio je li broj paran ili neparan.', 1, '', 0, 1, '2025-01-18 19:52:17', 1),
(81, 2, 'Selekcije – zadatak 2h', 'Unesite tri cijela broja a, b i c. Ispišite najveći od unesenih brojeva.', 'Tri cijela broja (npr. 5, 12, 7)', 'Najveći broj: 12', '#include <iostream>\nusing namespace std;\n\nint main() {\n    int a, b, c;\n    cin >> a >> b >> c;\n    if (a >= b && a >= c) {\n        cout << a << endl;\n    } else if (b >= a && b >= c) {\n        cout << b << endl;\n    } else {\n        cout << c << endl;\n    }\n    return 0;\n}', 'Program koristi uvjetne naredbe if-else kako bi pronašao i ispisao najveći od tri broja.', 1, '', 0, 1, '2025-01-18 19:52:17', 2),
(82, 2, 'Selekcije – zadatak 2i', 'Unesite dva decimalna broja x i y. Ako su brojevi jednaki, ispišite \"Jednaki su\". Ako nisu jednaki, ispišite koji je broj veći.', 'Dva decimalna broja (npr. 7.8, 5.3)', 'Veći je broj 7.8', '#include <iostream>\nusing namespace std;\n\nint main() {\n    double x, y;\n    cin >> x >> y;\n    if (x == y) {\n        cout << \"Jednaki su\" << endl;\n    } else if (x > y) {\n        cout << \"Veći je broj \" << x << endl;\n    } else {\n        cout << \"Veći je broj \" << y << endl;\n    }\n    return 0;\n}', 'Program koristi uvjetne naredbe za usporedbu dva decimalna broja i ispis odgovarajuće poruke.', 1, '', 0, 1, '2025-01-18 19:52:17', 3),
(83, 2, 'Selekcije – zadatak 2j', 'Unesite četiri cijela broja a, b, c, d. Provjerite mogu li se od njih odabrati tri broja koja mogu tvoriti stranice trokuta (zbroj bilo koje dvije stranice mora biti veći od treće).', 'Četiri cijela broja (npr. 3, 4, 5, 2)', 'Moguće je formirati trokut', '#include <iostream>\nusing namespace std;\n\nint main() {\n    int a, b, c, d;\n    cin >> a >> b >> c >> d;\n    if ((a + b > c && a + c > b && b + c > a) || \n        (a + b > d && a + d > b && b + d > a) || \n        (a + c > d && a + d > c && c + d > a) || \n        (b + c > d && b + d > c && c + d > b)) {\n        cout << \"Moguće je formirati trokut\" << endl;\n    } else {\n        cout << \"Nije moguće formirati trokut\" << endl;\n    }\n    return 0;\n}', 'Program koristi uvjetne naredbe za provjeru trokuta od svih mogućih kombinacija tri broja od četiri unesena broja.', 1, '', 0, 1, '2025-01-18 19:53:50', 6),
(84, 2, 'Selekcije – zadatak 2k', 'Unesite cijeli broj N i decimalni broj x. Ako je x > 0, pomnožite N i x. Ako je x < 0, podijelite N s apsolutnom vrijednošću x. Ispišite rezultat s dvije decimale.', 'Cijeli broj N i decimalni broj x (npr. 5, -2.5)', 'Rezultat: -2.00', '#include <iostream>\n#include <iomanip>\n#include <cmath>\nusing namespace std;\n\nint main() {\n    int N;\n    double x;\n    cin >> N >> x;\n    if (x > 0) {\n        cout << fixed << setprecision(2) << N * x << endl;\n    } else if (x < 0) {\n        cout << fixed << setprecision(2) << N / abs(x) << endl;\n    } else {\n        cout << \"Broj x ne smije biti 0\" << endl;\n    }\n    return 0;\n}', 'Program koristi uvjetne naredbe i funkciju abs za rad s apsolutnim vrijednostima. Rezultat se formatira na dvije decimale pomoću iomanip biblioteke.', 1, '', 0, 1, '2025-01-18 19:53:50', 5),
(85, 2, 'Selekcije – zadatak 2l', 'Korisnik unosi tri decimalna broja a, b i c. Provjerite jesu li svi brojevi međusobno različiti. Ako jesu, ispišite njihov zbroj. Ako nisu, ispišite \"Brojevi nisu različiti\".', 'Tri decimalna broja (npr. 3.5, 2.1, 1.7)', 'Rezultat: 7.3', '#include <iostream>\nusing namespace std;\n\nint main() {\n    double a, b, c;\n    cin >> a >> b >> c;\n    if (a != b && b != c && a != c) {\n        cout << a + b + c << endl;\n    } else {\n        cout << \"Brojevi nisu različiti\" << endl;\n    }\n    return 0;\n}', 'Program koristi operator != kako bi provjerio međusobnu različitost tri decimalna broja.', 1, '', 0, 1, '2025-01-18 19:53:50', 4),
(86, 2, 'Selekcije – zadatak 2m', 'Korisnik unosi cijeli broj N i tri decimalna broja a, b, c. Provjerite je li N djeljiv sa zbrojem a + b + c (ignorirajući decimalne dijelove brojeva). Ako je djeljiv, ispišite \"Broj je djeljiv\". Ako nije, ispišite \"Broj nije djeljiv\".', 'Cijeli broj N i tri decimalna broja (npr. 18, 5.5, 2.1, 1.3)', 'Broj je djeljiv', '#include <iostream>\nusing namespace std;\n\nint main() {\n    int N;\n    double a, b, c;\n    cin >> N >> a >> b >> c;\n    int sum = (int)a + (int)b + (int)c;\n    if (sum == 0) {\n        cout << \"Djeljenje s nulom nije moguće\" << endl;\n    } else if (N % sum == 0) {\n        cout << \"Broj je djeljiv\" << endl;\n    } else {\n        cout << \"Broj nije djeljiv\" << endl;\n    }\n    return 0;\n}', 'Program koristi cijeli dio decimalnih brojeva za računanje zbroja i provjerava djeljivost unesenog broja N s tim zbrojem.', 1, '', 0, 1, '2025-01-18 19:55:51', 5),
(87, 2, 'Selekcije – zadatak 2n', 'Korisnik unosi dva cijela broja a i b te odabire operaciju (+, -, *, /). Na temelju odabrane operacije, izračunajte rezultat i ispišite ga. Ako je odabran operator djeljenja (/) i b = 0, ispišite poruku \"Djeljenje s nulom nije moguće\".', 'Dva cijela broja i operator (npr. 10, 5, +)', 'Rezultat: 15', '#include <iostream>\nusing namespace std;\n\nint main() {\n    int a, b;\n    char op;\n    cin >> a >> b >> op;\n    switch (op) {\n        case \'+\':\n            cout << a + b << endl;\n            break;\n        case \'-\':\n            cout << a - b << endl;\n            break;\n        case \'*\':\n            cout << a * b << endl;\n            break;\n        case \'/\':\n            if (b == 0) {\n                cout << \"Djeljenje s nulom nije moguće\" << endl;\n            } else {\n                cout << a / b << endl;\n            }\n            break;\n        default:\n            cout << \"Nepoznata operacija\" << endl;\n    }\n    return 0;\n}', 'Program koristi naredbu switch za odabir operacije i provjerava uvjet kada je dijelitelj jednak nuli.', 1, '', 0, 1, '2025-01-18 19:55:51', 6),
(88, 1, 'Uvod – zadatak 1a', 'Napišite program koji ispisuje vaše ime i prezime na ekran.', '', 'Ime: Ivan\nPrezime: Horvat', '#include <iostream>\nusing namespace std;\n\nint main() {\n    cout << \"Ime: Ivan\" << endl;\n    cout << \"Prezime: Horvat\" << endl;\n    return 0;\n}', 'Program jednostavno koristi cout za ispisivanje unaprijed definiranih tekstova na ekran.', 1, '', 0, 0, '2025-01-18 19:59:34', 1),
(89, 1, 'Uvod – zadatak 1b', 'Korisnik unosi svoje ime i prezime. Program ispisuje \"Pozdrav, Ime Prezime!\".', 'Ivan Horvat', 'Pozdrav, Ivan Horvat!', '#include <iostream>\nusing namespace std;\n\nint main() {\n    char ime[50], prezime[50];\n    cout << \"Unesite ime: \";\n    cin >> ime;\n    cout << \"Unesite prezime: \";\n    cin >> prezime;\n    cout << \"Pozdrav, \" << ime << \" \" << prezime << \"!\" << endl;\n    return 0;\n}', 'Program koristi cin za unos korisnikovog imena i prezimena, a zatim cout za ispis.', 1, '', 0, 1, '2025-01-18 19:59:34', 2),
(90, 1, 'Uvod – zadatak 1c', 'Korisnik unosi dva cijela broja. Program ispisuje njihov zbroj.', '5 10', 'Zbroj: 15', '#include <iostream>\nusing namespace std;\n\nint main() {\n    int a, b;\n    cout << \"Unesite dva cijela broja: \";\n    cin >> a >> b;\n    cout << \"Zbroj: \" << a + b << endl;\n    return 0;\n}', 'Program koristi cin za unos dvaju cijelih brojeva i cout za ispisivanje njihovog zbroja.', 1, '', 0, 1, '2025-01-18 19:59:34', 3),
(91, 1, 'Uvod – zadatak 1d', 'Korisnik unosi jedan cijeli broj. Program ispisuje njegov kvadrat.', '4', 'Kvadrat broja: 16', '#include <iostream>\nusing namespace std;\n\nint main() {\n    int x;\n    cout << \"Unesite broj: \";\n    cin >> x;\n    cout << \"Kvadrat broja: \" << x * x << endl;\n    return 0;\n}', 'Program koristi cin za unos jednog cijelog broja, a zatim računa njegov kvadrat koristeći operaciju množenja.', 1, '', 0, 1, '2025-01-18 19:59:34', 4),
(92, 1, 'Uvod – zadatak 1e', 'Korisnik unosi dva decimalna broja. Program računa i ispisuje njihovu aritmetičku sredinu.', '5.5 3.3', 'Aritmetička sredina: 4.4', '#include <iostream>\nusing namespace std;\n\nint main() {\n    double a, b;\n    cout << \"Unesite dva decimalna broja: \";\n    cin >> a >> b;\n    cout << \"Aritmetička sredina: \" << (a + b) / 2 << endl;\n    return 0;\n}', 'Program koristi cin za unos dvaju decimalnih brojeva i cout za ispis rezultata aritmetičke sredine.', 1, '', 0, 1, '2025-01-18 19:59:34', 5),
(93, 1, 'Uvod – zadatak 1f', 'Korisnik unosi svoje godine i godinu rođenja. Program provjerava je li godina rođenja u skladu s godinama te ispisuje poruku \"Točno\" ili \"Netočno\".', '2025 25 2000', 'Točno', '#include <iostream>\nusing namespace std;\n\nint main() {\n    int godine, godinaRodenja, trenutnaGodina;\n    cout << \"Unesite trenutnu godinu: \";\n    cin >> trenutnaGodina;\n    cout << \"Unesite svoje godine: \";\n    cin >> godine;\n    cout << \"Unesite godinu rođenja: \";\n    cin >> godinaRodenja;\n\n    if (trenutnaGodina - godinaRodenja == godine) {\n        cout << \"Točno\" << endl;\n    } else {\n        cout << \"Netočno\" << endl;\n    }\n    return 0;\n}', 'Program koristi uvjetnu naredbu if za provjeru jesu li uneseni podaci konzistentni s godinom rođenja.', 1, '', 0, 1, '2025-01-18 19:59:34', 6),
(94, 1, 'Uvod – zadatak 1g', 'Napišite program koji ispisuje vaše omiljeno jelo i piće na ekran.', '', 'Omiljeno jelo: Pizza\nOmiljeno piće: Cola', '#include <iostream>\nusing namespace std;\n\nint main() {\n    cout << \"Omiljeno jelo: Pizza\" << endl;\n    cout << \"Omiljeno piće: Cola\" << endl;\n    return 0;\n}', 'Program ispisuje dvije unaprijed definirane linije koristeći cout.', 1, '', 0, 0, '2025-01-18 20:06:04', 2),
(95, 1, 'Uvod – zadatak 1h', 'Korisnik unosi svoje godine. Program ispisuje \"Imate X godina.\", gdje je X uneseni broj.', '25', 'Imate 25 godina.', '#include <iostream>\nusing namespace std;\n\nint main() {\n    int godine;\n    cout << \"Unesite svoje godine: \";\n    cin >> godine;\n    cout << \"Imate \" << godine << \" godina.\" << endl;\n    return 0;\n}', 'Program koristi cin za unos godina i cout za formatirani ispis.', 1, '', 0, 1, '2025-01-18 20:06:04', 3),
(96, 1, 'Uvod – zadatak 1i', 'Korisnik unosi duljinu i širinu pravokutnika. Program ispisuje površinu i opseg pravokutnika.', '5 3', 'Površina: 15\nOpseg: 16', '#include <iostream>\nusing namespace std;\n\nint main() {\n    double duljina, sirina;\n    cout << \"Unesite duljinu i širinu pravokutnika: \";\n    cin >> duljina >> sirina;\n    cout << \"Površina: \" << duljina * sirina << endl;\n    cout << \"Opseg: \" << 2 * (duljina + sirina) << endl;\n    return 0;\n}', 'Program koristi formule za površinu i opseg pravokutnika.', 1, '', 0, 1, '2025-01-18 20:06:04', 4),
(97, 1, 'Uvod – zadatak 1j', 'Korisnik unosi temperaturu u Celzijusima. Program izračunava i ispisuje temperaturu u Fahrenheitu.', '0', 'Temperatura u Fahrenheitu: 32', '#include <iostream>\nusing namespace std;\n\nint main() {\n    double celzijus;\n    cout << \"Unesite temperaturu u Celzijusima: \";\n    cin >> celzijus;\n    cout << \"Temperatura u Fahrenheitu: \" << (celzijus * 9/5) + 32 << endl;\n    return 0;\n}', 'Program koristi formulu za pretvorbu temperature iz Celzijusa u Fahrenheite.', 1, '', 0, 1, '2025-01-18 20:06:04', 5),
(98, 4, 'Niz velikih slova', 'Kreirajte niz veličine 5 znakova. Neka niz bude popunjen slučajnim VELIKIM slovima engleske abecede. Kreirani niz ispišite u jednom retku bez razmaka.', '', '', '#include<iostream>\r\n\r\n#include <cstdlib>\r\n\r\n#include <ctime>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n\r\n	srand(time(0));\r\n\r\n	char x[5];\r\n\r\n	for (int i = 0; i < 5; i++) {\r\n\r\n        x[i] = \'A\' + rand() % 26; // Generiranje slova između \'a\' i \'z\'\r\n\r\n        cout<<x[i];\r\n\r\n    }\r\n\r\n    \r\n\r\nsystem(\"pause\");\r\n\r\nreturn 0;\r\n\r\n}', 'Petljom se prolazi kroz svih 5 elementa polja (0,1,2,3,4) i u svaki se random generira slovo između A i Z, funkcija rand generira broj 0-25, a polazna točka \r\nje \'A\' ako je generirano 0 tada će biti slovo \'A\' ako je 1 onda \'B\'...\r\n', 3, '', 0, 0, '2025-01-18 20:28:56', 1),
(99, 4, 'Cijelobrojno polje', 'Cijelobrojno polje od 10 elemenata kreirajte. Brojeve nasumične u rasponu od -10 do 10 u polje generirajte. U jednom retku ispišite cijelo polje, razmakom odvojeno. Neparne brojeve iz polja u drugom retku ispišite.', '', '', '', NULL, 3, '', 0, 0, '2025-01-18 20:28:56', 2),
(100, 4, 'Niz malih slova', 'Niz od 20 znakova kreirajte. Nasumična mala slova engleske abecede u niz generirajte. U prvom retku cijeli niz, razmakom odvojene znakove ispišite. Koliko ima suglasnika, a koliko samoglasnika u nizu u drugom retku ispišite.', '', '', '#include <iostream>\r\n#include <cstdlib>\r\n#include <ctime>\r\nusing namespace std;\r\n\r\nint main() {\r\n    srand(time(0));\r\n    \r\n    char polje[20];\r\n    int samoglasnici = 0;\r\n    int suglasnici = 0;\r\n\r\n    for (int i = 0; i < 20; i++) {\r\n        polje[i] = \'a\' + rand() % 26;\r\n        \r\n        if (polje[i] == \'a\' || polje[i] == \'e\' || polje[i] == \'i\' || polje[i] == \'o\' || polje[i] == \'u\') {\r\n            samoglasnici++;\r\n        } else {\r\n            suglasnici++;\r\n        }\r\n        cout << polje[i] << \" \";\r\n    }\r\n    \r\n    cout << endl << \"Broj samoglasnika: \" << samoglasnici;\r\n    cout << endl << \"Broj suglasnika: \" << suglasnici;\r\n    \r\n    return 0;        \r\n}\r\n', NULL, 3, '', 0, 0, '2025-01-18 20:28:56', 3),
(101, 4, 'Polje i simboli', 'Cijelobrojno polje od 5 elemenata kreirajte. Brojeve nasumične u rasponu od 2 do 8 u polje generirajte. Polje s nasumičnim simbolima + i - iste veličine kreirajte. Vrijednosti brojeva povećajte za 1 gdje je simbol +, a smanjite za 1 gdje je simbol -. Konačne vrijednosti polja brojeva ispišite.', '', '', '', NULL, 3, '', 0, 0, '2025-01-18 20:28:56', 4),
(102, 4, 'Najduža riječ u nizu', 'Niz znakova veličine 100 kreirajte. Rečenicu korisnik u niz unosi, maksimalno 100 znakova. Riječ s najviše znakova u rečenici na kraju ispišite.', '', '', '', NULL, 3, '', 0, 0, '2025-01-18 20:28:56', 5),
(103, 4, 'Inicijalizacija polja', 'Kreirajte polje veličine 10 brojeva. Inicijalizirajte vrijednosti polja na broj 50. Ispišite polje zajedno s pripadajućim indeksima.', '', '', '', NULL, 3, '', 0, 0, '2025-01-18 20:34:32', 1),
(104, 4, 'Nasumični brojevi i filtri', 'Kreirajte cijelobrojno polje od 15 elemenata te u polje generirajte nasumične vrijednosti od -20 do 20. U prvom retku ispišite cijelo polje, brojevi odvojeni zarezom. U drugom retku ispišite samo neparne brojeve iz polja.', '', '', '#include <iostream>\r\n#include <ctime>\r\n#include <cstdlib>\r\nusing namespace std;\r\nint main(){\r\n	srand(time(0));\r\n	int x[15];\r\n	\r\n	for (int i=0; i<15; i++){\r\n		x[i]=rand()%41-20; // Generira broj u rasponu [-20, 20]\r\n		cout<<x[i]; \r\n		if (i!=14) cout<<\", \"; //zarez nakon broja, (osim zadnjeg)\r\n	}\r\n	\r\n	cout<<endl; \r\n	\r\n	for (int i=0; i<15; i++){\r\n		if(x[i]%2) cout<<x[i]<<\" \"; //za ispis neparnih brojeva, nije definirano da trebaju biti odvojeni zarezom pa su odvojeni razmakom\r\n	}\r\n	cout<<endl;\r\n	system(\"pause\");\r\n	return 0;\r\n}\r\n', NULL, 3, '', 0, 0, '2025-01-18 20:34:32', 2),
(105, 4, 'Velika i mala slova', 'Kreirajte niz od 15 znakova. Generirajte u niz nasumična velika i mala slova engleske abecede. U prvom retku ispišite niz, znakovi odvojeni razmakom. U drugom retku pretvorite velika slova u mala i ponovno ispišite cijeli niz.', '', '', '', NULL, 3, '', 0, 0, '2025-01-18 20:34:32', 2),
(106, 4, 'Raspon brojeva u polju', 'Kreirajte polje od 20 elemenata. U prvih 10 elemenata generirajte brojeve u rasponu od -30 do -10, a u preostalih 10 brojeve u rasponu od 10 do 30. Ispišite cijelo polje u jednom retku, brojevi odvojeni zarezom.', '', '', '#include <iostream>\r\n#include <ctime>\r\n#include <cstdlib>\r\nusing namespace std;\r\nint main(){\r\n	srand(time(0));\r\n	int x[20];\r\n	\r\n	for (int i=0; i<20; i++){ \r\n		if (i<10){\r\n			x[i]=rand()%21-30; // Generira broj u rasponu [-30, -10] zašto  rand()%21 a ne radn()%20 za generiranje 20 brojeva, zato jer počinje od 0 pa treba 1 više \r\n		}\r\n		else{\r\n			x[i]=rand()%21+10; // Generira broj u rasponu [10, 30] \r\n		}\r\n		\r\n		cout<<x[i];\r\n		if(i<20) cout<<\", \";\r\n	}\r\n	\r\n	cout<<endl; \r\n	\r\n	system(\"pause\");\r\n	return 0;\r\n}', NULL, 3, '', 0, 0, '2025-01-18 20:34:32', 3),
(107, 4, 'Decimalni brojevi u polju', 'Kreirajte polje od 10 decimalnih brojeva u rasponu od 0.1 do 9.9. U prvom retku ispišite cijelo polje, brojevi odvojeni zarezom. Nakon toga, zaokružite sve brojeve na prvu decimalu i ispišite polje u novom retku.', '', '', '', NULL, 3, '', 0, 0, '2025-01-18 20:34:32', 4),
(108, 4, 'Polja i nizovi znakova – zadatak 14', 'Ulaz: Broj N u rasponu [3, 10] i N riječi duljine 20 znakova. Izlaz: Unesene riječi, samo samoglasnici zamijenjeni random znamenkom (kod u rasponu [32-255]).', 'Primjer ulaza:\nBroj: 5\n1. riječ: alfa\n2. riječ: beta\n3. riječ: gama\n4. riječ: burn_in_hell\n5. riječ: epsilon', 'Primjer izlaza:\nÓlfT\nb\'tI\ngLmc\nb\rn_Žn_h5ll\nßpsolFn', '#include<iostream>\n#include<cstring>\n#include<cstdlib>\n#include<ctime>\n\nusing namespace std;\n\nint main(){\n	\n	srand(time(0));\n	rand();\n	\n	int N;\n	do {\n		cout << \"Broj [3, 10]: \";\n		cin >> N;\n	} while (N < 3 || N > 10);\n	char rijeci[10][20];\n	char samoglasnici [5] = {\'a\', \'e\', \'i\', \'o\', \'u\'};\n	\n	for (int i = 0; i < N; i++)\n	{\n		cout << i+1 << \". rijec: \";\n		cin >> rijeci[i];\n	}\n	for (int i = 0; i < N; i++)\n	{\n		for (int j = 0; j < strlen(rijeci[i]); j++)\n			for (int c = 0; c < 5; c++)\n				if (rijeci[i][j] == samoglasnici[c]) rijeci[i][j] = (rand()%(255-32))+32;\n		cout << rijeci[i] << endl;\n	}\n	\n\n	cout << endl;\n	system(\"pause\");\n	return 0;\n}', 'Program generira slučajne znakove za samoglasnike u riječima unutar zadanog raspona ASCII vrijednosti. Funkcija rand() osigurava različite rezultate svakim pokretanjem.', 1, '', 0, 0, '2025-01-18 20:35:18', 5),
(109, 4, 'Niz malih slova', 'Kreirajte niz veličine 10 znakova (char). Neka niz bude popunjen slučajnim malim slovima engleske abecede. Kreirani niz ispišite u jednom retku bez razmaka.', '', 'ahgjertkle', '#include<iostream>\r\n#include <cstdlib>\r\n#include <ctime>\r\nusing namespace std;\r\nint main(){\r\n	srand(time(0));\r\n	char x[10];\r\n	for (int i = 0; i < 10; i++) {\r\n        x[i] = \'a\' + rand() % 26; // Generiranje slova između \'a\' i \'z\'\r\n        cout<<x[i];\r\n    }\r\n    \r\nsystem(\"pause\");\r\nreturn 0;\r\n}', 'Petljom se prolazi kroz svih 10 elementa polja (0,1,2,...8,9) i u svaki se random generira slovo između a i z, funkcija rand generira broj 0-25 a polazna točka je \'a\' ako je generirano 0 tada će biti slovo \'a\' ako je 1 onda \'b\'...', 1, 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 0, 0, '2025-01-18 22:07:39', 1),
(110, 4, 'Niz s 10 elemenata', 'Generirajte 20 slučajnih cijelobrojnih brojeva u rasponu od -10 do 10 i smjestite ih u niz. Prikažite sadržaj niza zajedno s njihovim pripadajućim indeksima.', '', '', '', '', 1, 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 0, 0, '2025-01-18 22:37:27', 1),
(111, 4, 'Polje s 10 decimalnih brojeva i artimetička sredina', 'Kreirajte polje s 10 nasumično generiranim decimalnim vrijednostima u rasponu od 1 do 4.9 zatim ispišite sadržaj polja, brojeve odvojene razmakom. Izračunajte i prikažite aritmetičku sredinu brojeva. Ako je rezultat manji od 2, ispišite \"Pad!\", a ako je veći ili jednak 2, ispišite \"Prolaz!\".', '', '', '', '', 1, 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 0, 0, '2025-01-18 22:42:00', 2),
(112, 4, 'Izmjena polja rečenice', 'Omogućite unos rečenice u znakovno polje kapaciteta 100 znakova. Rečenica ne smije prelaziti 100 znakova. Nakon unosa, zamijenite sve samoglasnike unutar polja znakom \'*\' te prikažite izmijenjeni sadržaj polja.', '', '', '', '', 1, 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 0, 0, '2025-01-18 22:47:11', 3),
(113, 4, 'Filtracija znakove', 'Generirajte 15 nasumičnih znakova u rasponu od 20 do 120 i smjestite ih u polje. Prikažite sadržaj polja u jednom retku bez ikakvih razmaka između znakova. Iz originalnog polja stvorite novo polje u koje će sadržavati isključivo velika i mala slova iz orginalnog polja. Prikažite sadržaj novog polja u jednom retku, bez razmaka između znakova.', '', '', '', '', 1, 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 0, 0, '2025-01-18 22:49:56', 5);
INSERT INTO `spcp_tasks` (`id`, `lesson_id`, `title`, `description`, `input`, `output`, `solution`, `explanation`, `visibility`, `public_id`, `solution_status`, `has_input`, `created_at`, `difficulty`) VALUES
(114, 4, 'Pomicanje polja udesno i zbrajanje ', 'Kreirajte cijelobrojno polje od 5 elemenata te u njega generirajte nasumične dvoznamenkaste vrijednosti. Niz ispišite u jednom retku, brojevi odvojeni razmakom. Nakon toga, sve brojeve u polju pomaknite za jedno mjesto udesno. Zadnji broj, koji se nema gdje pomaknuti, upišite na prvo mjesto u polju. Svaki broj povećajte za 1, ponavljajte pomicanje tako dugo dok bilokoji broj ne bude veći ili jednak 100. Nakon svakog pomicanja udesno, u novom retku ponovno ispišite cijelo polje, brojevi odvojeni razmakom.', '', '', '#include <iostream>\r\n#include <ctime>\r\n#include <cstdlib>\r\nusing namespace std;\r\n\r\nint main() {\r\n    srand(time(0));\r\n\r\n    const int n = 5;\r\n    int x[n];\r\n\r\n    // Generiranje nasumičnih dvoznamenkastih brojeva i početni ispis\r\n    for (int i = 0; i < n; i++) {\r\n        x[i] = rand() % 90 + 10; // Generira brojeve u rasponu [10, 99]\r\n        cout << x[i] << \" \";\r\n    }\r\n    cout << endl;\r\n\r\n    bool vece_od_100 = false;\r\n\r\n    // Ponavljaj pomicanje dok neki broj ne bude >= 100\r\n    do {\r\n        // Pomicanje elemenata udesno\r\n        int last = x[n - 1]; // Spremi zadnji element\r\n        for (int i = n - 1; i > 0; i--) {\r\n            x[i] = x[i - 1] + 1; // Pomiči element i povećaj za 1\r\n            if (x[i] >= 100) vece_od_100 = true;\r\n        }\r\n        x[0] = last + 1; // Zadnji element ide na prvo mjesto\r\n        if (x[0] >= 100) vece_od_100 = true;\r\n\r\n        // Ispis trenutnog stanja niza\r\n        for (int i = 0; i < n; i++) {\r\n            cout << x[i] << \" \";\r\n        }\r\n        cout << endl;\r\n\r\n    } while (!vece_od_100);\r\n\r\n    return 0;\r\n}\r\n', '', 1, 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 0, 0, '2025-01-18 22:54:23', 5),
(115, 4, 'Analiziranje polja', 'Kreirajte polje od 20 elemenata i generirajte nasumične cijelobrojne brojeve u rasponu od 10 do 99.\r\nIspišite cijelo polje u jednom retku, bez razmaka između znakova.\r\nPrebrojite i ispišite broj pojavljivanja svakog broja u polju te ispišite broj koji se najviše puta ponavljao. \r\nKreirajte novo polje koje će sadržavati samo brojeve veće od aritmetičke sredine orginalnog polja. Ispišite to polje u novi red, bez razmaka.', '', '', '', '', 1, 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 0, 0, '2025-01-18 22:58:39', 4),
(116, 4, 'Zbrajanje u polju', 'Loše definirani zadatak: Kreirajte cijelobrojno polje s 10 elemenata te u njega generirajte nasumične brojeve u rasponu od 1 do 9.\r\nIspišite sadržaj polja u jednom retku, pri čemu su brojevi odvojeni zarezima. Zatim kreirajte drugi niz u kojem za svaki element polja izračunate sumu trenutnog broja iz prvog niza (na toj poziciji) i njegovog sljedećeg elementa u polju. Ako je trenutni broj iz prvog niza neparan, dodajte mu dvostruku vrijednost sljedećeg broja; ako je paran, dodajte mu samo sljedeći broj.\r\nZa posljednji element u polju, jer nema sljedećeg elementa, izračunajte sumu tog broja i prvog broja u polju, primjenjujući ista pravila za parne i neparne brojeve. Na kraju ispišite najmanju vrijednost iz drugog niza i najveću vrijednost iz originalnog polja.', '', '', '#include <iostream>\r\n#include <cstdlib>\r\n#include <ctime>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n \r\n\r\n    int a[10]; // Originalni niz\r\n    int b[10]; // Drugi niz za izračune\r\n\r\n    // Generiranje nasumičnih brojeva za niz \'a\' i ispis\r\n    cout << \"Originalni niz: \";\r\n    for (int i = 0; i < 10; i++) {\r\n        a[i] = rand() % 9 + 1; // Generira broj u rasponu [1, 9]\r\n        cout << a[i];\r\n        if (i < 9) cout << \", \"; // Dodaje zarez osim za zadnji broj\r\n    }\r\n    cout << endl;\r\n	cout<<\" Drugi niz\";\r\n    // Izračun drugog niza \'b\'\r\n    for (int i = 0; i < 10; i++) {\r\n        // Ako smo na posljednjem elementu, uzmi prvi element kao \"sljedeći\"\r\n        int next = (i == 9) ? a[0] : a[i + 1];\r\n\r\n        // Ako je trenutni broj neparan, dodaj dvostruku vrijednost sljedećeg\r\n        if (a[i] % 2 != 0) {\r\n            b[i] = a[i] + 2 * next;\r\n        } \r\n        // Ako je trenutni broj paran, dodaj samo sljedeći broj\r\n        else {\r\n            b[i] = a[i] + next;\r\n        }\r\n        \r\n        cout<<b[i]<<\" \";\r\n    }\r\n    cout<<endl;\r\n\r\n    // Pronalazak minimalne vrijednosti u nizu \'b\' i maksimalne vrijednosti u nizu \'a\'\r\n    int min = b[0];\r\n    int max = a[0];\r\n    for (int i = 0; i < 10; i++) {\r\n        if (b[i] < min) min = b[i];\r\n        if (a[i] > max) max = a[i];\r\n    }\r\n\r\n    // Ispis rezultata\r\n    cout << \"Minimalna vrijednost u drugom nizu: \" << min << endl;\r\n    cout << \"Maksimalna vrijednost u originalnom nizu: \" << max << endl;\r\n\r\n    return 0;\r\n}\r\n', '', 1, 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 0, 0, '2025-01-18 23:05:40', 6),
(118, 4, 'PD Brojanje brojeva ', 'Broj N u rasponu [1, 100] i N cijelih brojeva u rasponu [0, 100].\r\n\r\nzadatak preuzeti s progdemos repozitorija', 'Unesite prirodan broj od 1 do 100: 4\r\nUpisite 1. broj od 0 do 100: 6\r\nUpisite 2. broj od 0 do 100: 8\r\nUpisite 3. broj od 0 do 100: 66\r\nUpisite 4. broj od 0 do 100: 88\r\n ', '6 - 1\n8 - 1\n66 - 1\n88 - 1', '#include<iostream>\n\nusing namespace std;\n\nint main(){\n    int N;\n    int ponavljanja[101] = {0};\n\n    do {\n        cout << \"Unesite prirodan broj od 1 do 100: \";\n        cin >> N;\n    } while (N < 1 || N > 100);\n\n    for (int i = 1; i <= N; i++) {\n        int unos;\n        do {\n            cout << \"Upisite \" << i << \". broj od 0 do 100: \";\n            cin >> unos;\n        } while (unos < 0 || unos > 100);\n        ponavljanja[unos]++;\n    }\n\n    for (int i = 0; i <= 100; i++) {\n        if (ponavljanja[i] != 0) cout << i << \" - \" << ponavljanja[i] << endl;\n    }\n\n    cout << endl;\n    system(\"pause\");\n    return 0;\n}', 'Rješenje koristi polje za brojanje pojavljivanja svakog unesenog broja i petlju za ispis rezultata.', 1, '', 0, 0, '2025-01-21 11:37:45', 2),
(119, 4, 'PD Zajednička slova', 'Dvije riječi. Ispisati broj slova zajednička objema riječima i također ispisati ta slova.\r\nPreuzeto s progdemos repozitorija', 'Upisite 1. rijec: programiranje\nUpisite 2. rijec: PROLAZ', 'Zajednickih slova: 4 (a o p r)', '#include<iostream>\n#include<cstring>\nusing namespace std;\n\nint main(){\n    char rijec1[20], rijec2[20];\n    cout << \"Upisite 1. rijec: \";\n    cin.getline(rijec1, 20);\n    cout << \"Upisite 2. rijec: \";\n    cin.getline(rijec2, 20);\n\n    bool vec_pogodjena_slova[26] = {false};\n    int suma = 0;\n\n    for (int i = 0; rijec1[i] != \'\\0\'; i++) {\n        for (int j = 0; rijec2[j] != \'\\0\'; j++) {\n            if (tolower(rijec1[i]) == tolower(rijec2[j]) && !vec_pogodjena_slova[tolower(rijec1[i]) - \'a\']) {\n                vec_pogodjena_slova[tolower(rijec1[i]) - \'a\'] = true;\n                suma++;\n            }\n        }\n    }\n\n    cout << \"Zajednickih slova: \" << suma << \" (\";\n    for (int i = 0; i < 26; i++) {\n        if (vec_pogodjena_slova[i]) cout << char(i + \'a\') << \" \";\n    }\n    cout << \")\" << endl;\n    return 0;\n}', 'Uspoređuje svako slovo prve riječi sa svakim slovom druge i bilježi pronađena slova u polju.', 1, '', 0, 0, '2025-01-21 11:39:45', 3),
(120, 4, 'PD Velika slova i razmaci', 'Tekst s najviše 200 znakova. U tekstu ostaviti samo slova i razmake.\nPreuzeto s progdemos repozitorija', 'Upisite tekst od najvise 200 znakova: A.G. Matos (1873. - 1914.) napisao je pjesmu 1909.', 'A G MATOS NAPISAO JE PJESMU ', '#include<iostream>\n#include<cstring>\nusing namespace std;\n\nint main(){\n    char tekst[200];\n    cout << \"Upisite tekst od najvise 200 znakova: \";\n    cin.getline(tekst, 200);\n    \n    for (int i = 0; i < strlen(tekst); i++) {\n        if (tekst[i] >= \'a\' && tekst[i] <= \'z\') tekst[i] -= 32; // Mala slova pretvori u velika\n        else if (tekst[i] < \'A\' || tekst[i] > \'Z\') tekst[i] = \' \'; // Sve ostalo zamijeni razmakom\n    }\n\n    cout << tekst << endl;\n    return 0;\n}', 'Rješenje koristi ASCII vrijednosti za pretvorbu znakova i ignorira ne-slova.', 1, '', 0, 0, '2025-01-21 11:42:27', 4),
(121, 4, 'PD Alternacija velikih i malih slova', 'Tekst s najviše 200 znakova. Svako parno slovo ispisati veliko, a neparno malo.\nPreuzeto s progdemos repozitorija', 'Upisite tekst od najvise 200 znakova: You can\'t make a C++ into a meme.', 'YoU CaN\'t MaKe A c++ InTo A mEmE', '#include<iostream>\n#include<cstring>\nusing namespace std;\n\nint main(){\n    char tekst[200];\n    cout << \"Upisite tekst od najvise 200 znakova: \";\n    cin.getline(tekst, 200);\n\n    bool parno = true;\n    for (int i = 0; tekst[i] != \'\\0\'; i++) {\n        if (isalpha(tekst[i])) {\n            if (parno) tekst[i] = toupper(tekst[i]);\n            else tekst[i] = tolower(tekst[i]);\n            parno = !parno;\n        }\n    }\n\n    cout << tekst << endl;\n    return 0;\n}', 'Rješenje izmjenjuje velika i mala slova koristeći bool varijablu.', 1, '', 0, 0, '2025-01-21 11:42:27', 5),
(122, 4, 'PD Razdvajanje riječi', 'Tekst s najviše 200 znakova. Svaka riječ u novom redu.\nPreuzeto s progdemos repozitorija', 'Najvise 200 znakova: Ne radi mi tipka enter.', 'Ne\nradi\nmi\ntipka\nenter.', '#include<iostream>\n#include<cstring>\nusing namespace std;\n\nint main(){\n    char tekst[200];\n    cout << \"Najvise 200 znakova: \";\n    cin.getline(tekst, 200);\n\n    for (int i = 0; tekst[i] != \'\\0\'; i++) {\n        if (tekst[i] == \' \') cout << endl;\n        else cout << tekst[i];\n    }\n\n    cout << endl;\n    return 0;\n}', 'Zadatak koristi petlju za ispis svake riječi u novom redu, prepoznajući razmake.', 1, '', 0, 0, '2025-01-21 11:42:27', 6),
(123, 4, 'PD Sva slova koja se ponavljaju', 'Pozitivan cijeli broj N i N riječi. Sva slova koja se u upisanim riječima ponavljaju.\nPreuzeto s progdemos repozitorija', 'Unesite prirodan broj: 5\nUnesite 1. rijec: pod\nUnesite 2. rijec: njome\nUnesite 3. rijec: crna\nUnesite 4. rijec: zlocinacka\nUnesite 5. rijec: jama', 'a, c, d, e, i, j, k, l, m, n, o, p, r, z', '#include<iostream>\n#include<cstring>\nusing namespace std;\n\nint main(){\n    short N;\n    char rijec[20][20] = {0};\n    char slova[26] = {0};\n    \n    do {\n        cout << \"Unesite prirodan broj: \";\n        cin >> N;\n    } while (N < 1 || N > 20);\n    cin.ignore();\n    \n    for (int i = 0; i < N; i++) {\n        cout << \"Unesite \" << i + 1 << \". rijec: \";\n        cin.getline(rijec[i], 20);\n        for (int c = 0; c < strlen(rijec[i]); c++) {\n            if (rijec[i][c] >= \'A\' && rijec[i][c] <= \'Z\') rijec[i][c] += 32;\n            slova[rijec[i][c] - \'a\'] = 1;\n        }\n    }\n    \n    for (int i = 0; i < 26; i++) {\n        if (slova[i] == 1) {\n            cout << char(i + \'a\') << \", \";\n        }\n    }\n    cout << endl;\n    return 0;\n}', 'Petlja prolazi kroz unesene riječi i označava sva slova koja se pojavljuju.', 1, '', 0, 0, '2025-01-21 11:43:58', 4),
(124, 4, 'PD Druga najveća riječ', 'Broj N u rasponu [1, 20> i N riječi. Abecedno druga najveća riječ.\nPreuzeto s progdemos repozitorija', 'Upisite broj rijeci (do 20): 5\nUnesi 1. rijec: ubistva\nUnesi 2. rijec: mjesto\nUnesi 3. rijec: tamno\nUnesi 4. rijec: kao\nUnesi 5. rijec: blud', 'Druga po redu rijec po leksickom redoslijedu: tamno', '#include<iostream>\n#include<cstring>\nusing namespace std;\n\nint main(){\n    int N;\n    do {\n        cout << \"Upisite broj rijeci (do 20): \";\n        cin >> N;\n    } while (N < 1 || N >= 20);\n    cin.ignore();\n    \n    char rijeci[20][20] = {0};    \n    char najveca[20] = \"\";\n    char druga_najveca[20] = \"\";\n    \n    for (int i = 0; i < N; i++) {\n        cout << \"Unesi \" << i + 1 << \". rijec: \";\n        cin >> rijeci[i];\n        if (strcmp(rijeci[i], najveca) > 0) {\n            strcpy(druga_najveca, najveca);\n            strcpy(najveca, rijeci[i]);\n        } else if (strcmp(rijeci[i], druga_najveca) > 0 && strcmp(rijeci[i], najveca) != 0) {\n            strcpy(druga_najveca, rijeci[i]);\n        }\n    }\n    \n    cout << \"Druga po redu rijec po leksickom redoslijedu: \" << druga_najveca << endl;\n    return 0;\n}', 'Algoritam pronalazi najveću riječ, zatim drugu najveću leksikografski.', 1, '', 0, 0, '2025-01-21 11:44:37', 4),
(125, 4, 'PD Najveća udaljenost među točkama', 'Prirodan broj [1, 100], toliko točaka s pripadnim x i y koordinatama. Najveća udaljenost među svim točkama.\nPreuzeto s progdemos repozitorija', 'Upisite prirodan broj [1, 100]: 4\n1. tocka\n	koordinata x: 6.3\n	koordinata y: 19.99\n2. tocka\n	koordinata x: 17.4\n	koordinata y: 0\n3. tocka\n	koordinata x: 101\n	koordinata y: 3\n4. tocka\n	koordinata x: 111\n	koordinata y: 4', 'Najveca udaljenost: 105.914', '#include<iostream>\n#include<cmath>\nusing namespace std;\n\nint main(){\n    int N;\n    float x, y, max_udaljenost = 0;\n    \n    do {\n        cout << \"Upisite prirodan broj [1, 100]: \";\n        cin >> N;\n    } while (N < 1 || N > 100);\n    \n    float x_lista[100] = {0};\n    float y_lista[100] = {0};\n    \n    for (int i = 0; i < N; i++) {\n        cout << i + 1 << \". tocka\n\\tkoordinata x: \";\n        cin >> x;\n        cout << \"\\tkoordinata y: \";\n        cin >> y;\n        x_lista[i] = x;\n        y_lista[i] = y;\n    }\n    \n    for (int i = 0; i < N; i++) {\n        for (int j = i + 1; j < N; j++) {\n            float udaljenost = sqrt(pow(x_lista[i] - x_lista[j], 2) + pow(y_lista[i] - y_lista[j], 2));\n            if (udaljenost > max_udaljenost) max_udaljenost = udaljenost;\n        }\n    }\n    \n    cout << \"Najveca udaljenost: \" << max_udaljenost << endl;\n    return 0;\n}', 'Petlja uspoređuje udaljenost između svake dvije točke koristeći formulu udaljenosti.', 1, '', 0, 0, '2025-01-21 11:45:16', 6),
(126, 4, 'PD Eratostenovo sito', 'Prirodni brojevi N i M koji predstavljaju dvije granice u rasponu <1, 1000]. Svi prosti brojevi između N i M izračunati koristeći Eratostenovo sito.\nPreuzeto s progdemos repozitorija', 'Unesite donju granicu N <1, 1000>: 15\nUnesite gornju granicu M <15, 1000>: 35', '17\n19\n23\n29\n31', '#include <iostream>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n\r\n    int N, M;\r\n\r\n    // Korisnički unos donje granice N\r\n    do {\r\n        cout << \"Unesite donju granicu N <1, 1000>: \";\r\n        cin >> N;\r\n    } while (N < 1 || N >= 1000); // Provjera da li je N unutar dozvoljenog raspona\r\n\r\n    // Korisnički unos gornje granice M\r\n    do {\r\n        cout << \"Unesite gornju granicu M <\" << N << \", 1000>: \";\r\n        cin >> M;\r\n    } while (M < N || M > 1000); // Provjera da li je M unutar dozvoljenog raspona i veći ili jednak N\r\n\r\n    // Polje za označavanje prostih brojeva\r\n    bool prost[1001]; // Polje za sve brojeve do 1000 (indeksi 0-1000)\r\n\r\n    // Inicijalno postavljamo sve brojeve od 2 do M kao potencijalno proste\r\n    for (int i = 2; i <= M; i++) prost[i] = true;\r\n\r\n    // Implementacija Eratostenovog sita\r\n    for (int i = 2; i <= sqrt(M); i++) { // Iteriramo do korijena od M\r\n        if (prost[i]) { // Ako je broj i označen kao prost\r\n            for (int j = i * 2; j <= M; j += i) { // Označavamo sve višekratnike broja i kao neproste\r\n                prost[j] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Ispis prostih brojeva unutar granica [N, M]\r\n    for (int i = N; i <= M; i++) {\r\n        if (prost[i]) // Ako je broj i označen kao prost\r\n            cout << i << endl; // Ispis prostog broja\r\n    }\r\n\r\n    return 0;\r\n}\r\n', 'Eratostenovo sito je metoda za pronalaženje prostih brojeva unutar raspona.', 1, '', 0, 0, '2025-01-21 11:45:47', 5),
(127, 4, 'PD Neparni i parni brojevi', 'Parni broj N u rasponu <1, 10> i N brojeva u nizu. Najprije neparni, a zatim parni brojevi iz niza.\nPreuzeto s progdemos repozitorija', 'Unesite prirodni parni broj (1-10): 4\nUnesi 1. cijeli broj: 3\nUnesi 2. cijeli broj: 6\nUnesi 3. cijeli broj: 77\nUnesi 4. cijeli broj: 8', '3\n77\n6\n8', '#include<iostream>\nusing namespace std;\n\nint main() {\n    int N;\n    int polje[10];\n\n    do {\n        cout << \"Unesite prirodni parni broj (1-10): \";\n        cin >> N;\n    } while (N < 1 || N % 2 != 0 || N > 10);\n\n    for (int i = 0; i < N; i++) {\n        cout << \"Unesi \" << i + 1 << \". cijeli broj: \";\n        cin >> polje[i];\n    }\n\n    for (int i = 0; i < N; i++) {\n        if (polje[i] % 2 != 0) cout << polje[i] << endl;\n    }\n    for (int i = 0; i < N; i++) {\n        if (polje[i] % 2 == 0) cout << polje[i] << endl;\n    }\n\n    return 0;\n}', 'Petlja najprije prolazi kroz niz ispisujući neparne, a zatim prolazi kroz niz za parne brojeve.', 1, '', 0, 0, '2025-01-21 11:51:39', 3),
(128, 4, 'PD Parovi relativno prostih brojeva', 'Broj N u rasponu [1, 50] i N brojeva. Parovi relativno prostih brojeva.\nPreuzeto s progdemos repozitorija', 'Unesi prirodan broj [1, 50]: 5\nUnesi 1. broj: 3\nUnesi 2. broj: 6\nUnesi 3. broj: 2\nUnesi 4. broj: 1\nUnesi 5. broj: 76', '3 2\n3 1\n3 76\n6 1\n2 1\n1 76', '#include<iostream>\nusing namespace std;\n\nint main() {\n    int N, unos, max_unos;\n\n    do {\n        cout << \"Unesi prirodan broj [1, 50]: \";\n        cin >> N;\n    } while (N < 1 || N > 50);\n\n    int parovi[50];\n\n    for (int i = 0; i < N; i++) {\n        do {\n            cout << \"Unesi \" << i + 1 << \". broj: \";\n            cin >> unos;\n        } while (unos < 1);\n\n        if (i == 0)\n            max_unos = unos;\n        else if (unos > max_unos)\n            max_unos = unos;\n\n        parovi[i] = unos;\n    }\n\n    for (int a = 0; a < N; a++) {\n        for (int b = a; b < N; b++) {\n            if (parovi[a] == parovi[b]) continue;\n\n            bool rel_prost = true;\n            for (int c = 2; c <= max_unos; c++) {\n                if (parovi[a] % c == 0 && parovi[b] % c == 0) {\n                    rel_prost = false;\n                    break;\n                }\n            }\n            if (rel_prost) cout << parovi[a] << \" \" << parovi[b] << endl;\n        }\n    }\n\n    return 0;\n}', 'Petlja uspoređuje svaki par brojeva provjeravajući zajedničke djelitelje.', 1, '', 0, 0, '2025-01-21 11:51:39', 4),
(129, 4, 'PD Umnožak dva broja', 'Unositi dvije riječi sve dok im sve znamenke nisu brojevi. Ispis umnoška ta dva broja.\nPreuzeto s progdemos repozitorija', 'Unesite 1. broj: 123\nUnesite 2. broj: 324', 'Umnozak unesenih brojeva iznosi: 39852', '#include<iostream>\n#include<cstdlib>\n#include<cstring>\nusing namespace std;\n\nbool jeBroj(const char* str) {\n    for (int i = 0; str[i] != \'\\0\'; i++) {\n        if (!isdigit(str[i])) return false;\n    }\n    return true;\n}\n\nint main() {\n    char broj1[20], broj2[20];\n\n    do {\n        cout << \"Unesite 1. broj: \";\n        cin >> broj1;\n    } while (!jeBroj(broj1));\n\n    do {\n        cout << \"Unesite 2. broj: \";\n        cin >> broj2;\n    } while (!jeBroj(broj2));\n\n    long long umnozak = atoll(broj1) * atoll(broj2);\n\n    cout << \"Umnozak unesenih brojeva iznosi: \" << umnozak << endl;\n    return 0;\n}', 'Provjerava unose za brojeve te izračunava umnožak koristeći `atoll`.', 1, '', 0, 0, '2025-01-21 11:52:41', 3),
(130, 4, 'PD Zamjena samoglasnika', 'Broj N u rasponu [3, 10] i N riječi duljine 20 znakova. Unesene riječi, samo samoglasnici zamijenjeni random znamenkom (kod u rasponu [32-255]).\nPreuzeto s progdemos repozitorija', 'Broj [3, 10]: 5\n1. rijec: alfa\n2. rijec: beta\n3. rijec: gama\n4. rijec: burn_in_hell\n5. rijec: epsilon', 'Ólf¶\nßtÞ\ngLmÇ\nb\rn_Žn_h5ll\nßpsQlFn', '#include<iostream>\n#include<cstring>\n#include<cstdlib>\n#include<ctime>\nusing namespace std;\n\nint main(){\n    srand(time(0));\n\n    int N;\n    do {\n        cout << \"Broj [3, 10]: \";\n        cin >> N;\n    } while (N < 3 || N > 10);\n\n    char rijeci[10][20];\n    char samoglasnici[5] = {\'a\', \'e\', \'i\', \'o\', \'u\'};\n\n    for (int i = 0; i < N; i++) {\n        cout << i + 1 << \". rijec: \";\n        cin >> rijeci[i];\n    }\n\n    for (int i = 0; i < N; i++) {\n        for (int j = 0; j < strlen(rijeci[i]); j++) {\n            for (int c = 0; c < 5; c++) {\n                if (rijeci[i][j] == samoglasnici[c]) \n                    rijeci[i][j] = (rand() % (255 - 32)) + 32;\n            }\n        }\n        cout << rijeci[i] << endl;\n    }\n\n    return 0;\n}', 'Zamjena samoglasnika s random znakovima koristeći funkciju `rand`.', 1, '', 0, 0, '2025-01-21 11:52:41', 4),
(131, 4, 'PD Ispis riječi bez određenog slova', 'Broj N u rasponu <1, 20> i N riječi duljine 20 znakova. Unesene riječi, samo one koje ne sadrže zadano slovo.\nPreuzeto s progdemos repozitorija', 'Unesi broj rijeci <1, 20>: 4\nUnesi 1. rijec: sreća\nUnesi 2. rijec: radost\nUnesi 3. rijec: veselje\nUnesi 4. rijec: divota\nUnesi slovo koje se ne smije pojavljivati: d', 'sreća\nveselje', '#include<iostream>\nusing namespace std;\n\nint main(){\n    int N;\n    char s;\n\n    do {\n        cout << \"Unesi broj rijeci <1, 20>: \";\n        cin >> N;\n    } while (N <= 1 || N >= 20);\n    cin.ignore();\n\n    char rijeci[N][21];\n    for (int rijec = 0; rijec < N; rijec++) {\n        cout << \"Unesi \" << rijec + 1 << \". rijec: \";\n        cin.getline(rijeci[rijec], 21);\n    }\n\n    cout << endl << \"Unesi slovo koje se ne smije pojavljivati: \";\n    cin >> s;\n\n    for (int rijec = 0; rijec < N; rijec++) {\n        bool rijec_bez_slova = true;\n        for (int slovo = 0; slovo < 20; slovo++) {\n            if (rijeci[rijec][slovo] == s) {\n                rijec_bez_slova = false;\n                break;\n            }\n        }\n        if (rijec_bez_slova) cout << rijeci[rijec] << endl;\n    }\n\n    return 0;\n}', 'Petlja provjerava slova unutar riječi i ispisuje samo one bez zadatog slova.', 1, '', 0, 0, '2025-01-21 11:52:41', 5),
(132, 5, 'PD Sortiranja – zadatak 1', 'Prirodni broj N [1, 20] i N brojeva. Polje sortirati pri unosu broja (koristi insertion sort).Preuzeto s repozitorija zadataka prog demosa. ', 'Prirodni broj N [1, 20] i N brojeva.', 'Prikaz stanja polja tijekom svih N unosa.', '#include<iostream>\n\nusing namespace std;\n\nint main(){\n    int N;\n    do {\n        cout << \"Broj brojeva N [1, 20]: \";\n        cin >> N;\n    } while (N < 1 || N > 20);\n\n    int polje[20] = {0};\n\n    for (int i = 0; i < N; i++) {\n        for (int j = 0; j < N; j++) cout << polje[j] << \" \";\n        cout << \" << \";\n        cin >> polje[i];\n\n        int j = i - 1;\n        int pom = polje[i];\n        while (j >= 0 && polje[j] > pom) {\n            polje[j + 1] = polje[j];\n            j--;\n        }\n        polje[j + 1] = pom;\n    }\n\n    for (int j = 0; j < N; j++) cout << polje[j] << \" \";\n\n    cout << endl;\n    system(\"pause\");\n    return 0;\n}', NULL, 1, '', 0, 0, '2025-01-22 22:31:32', 2),
(133, 5, 'PD Sortiranja – zadatak 2', ' Broj od 1 do 20 i toliko brojeva od kojih je svaki u rasponu [2, 100].Preuzeto s repozitorija zadataka prog demosa.', 'Broj od 1 do 20 i brojevi [2, 100].', 'Prvo prosti brojevi uzlazno, a zatim složeni silazno.', '#include<iostream>\n#include<cmath>\n\nusing namespace std;\n\nint main(){\n    int polje_pr[100] = {0};\n    int polje_sl[100] = {0};\n    int kursor_polje_pr = 0;\n    int kursor_polje_sl = 0;\n\n    int N;\n    do {\n        cout << \"Broj brojeva [1, 20] = \";\n        cin >> N;\n    } while (N < 1 || N > 20);\n\n    for (int i = 0; i < N; i++) {\n        int broj;\n        do {\n            cout << i + 1 << \". broj [2, 100]: \";\n            cin >> broj;\n        } while (broj < 2 || broj > 100);\n\n        bool prost = true;\n        for (int j = 2; j <= sqrt(broj) && prost; j++) {\n            if (broj % j == 0) {\n                polje_sl[kursor_polje_sl++] = broj;\n                prost = false;\n            }\n        }\n        if (prost) polje_pr[kursor_polje_pr++] = broj;\n    }\n\n    for (int i = 0; i < kursor_polje_pr; i++)\n        for (int c = kursor_polje_pr - 1; c > i; c--)\n            if (polje_pr[i] > polje_pr[c]) {\n                int pom = polje_pr[i];\n                polje_pr[i] = polje_pr[c];\n                polje_pr[c] = pom;\n            }\n\n    for (int i = 0; i < kursor_polje_sl; i++)\n        for (int c = kursor_polje_sl - 1; c > i; c--)\n            if (polje_sl[i] < polje_sl[c]) {\n                int pom = polje_sl[i];\n                polje_sl[i] = polje_sl[c];\n                polje_sl[c] = pom;\n            }\n\n    for (int i = 0; i < kursor_polje_pr; i++) {\n        cout << polje_pr[i] << endl;\n    }\n    cout << \"--\\n\";\n    for (int i = 0; i < kursor_polje_sl; i++) {\n        cout << polje_sl[i] << endl;\n    }\n\n    cout << endl;\n    system(\"pause\");\n    return 0;\n}', NULL, 1, '', 0, 0, '2025-01-22 22:33:03', 3),
(134, 5, 'PD Sortiranja – zadatak 3', 'Broj od 1 do 9 i parovi slova i brojeva. Preuzeto s repozitorija zadataka prog demosa.', 'Broj od 1 do 9 i parovi slova i brojeva.', 'Svako slovo onoliko puta koliko je broj uz njega.', '#include<iostream>\n#include<cstring>\n\nusing namespace std;\n\nint main(){\n    int N;\n    do {\n        cout << \"Broj slova [1, 10] = \";\n        cin >> N;\n    } while (N < 1 || N > 10);\n\n    char parovi[10][3];\n\n    for (int i = 0; i < N; i++) {\n        cin >> parovi[i][0] >> parovi[i][1];\n        if (parovi[i][1] < \'0\' || parovi[i][1] > \'9\') {\n            i--;\n            continue;\n        }\n        parovi[i][2] = \'\\0\';\n    }\n\n    for (int i = 0; i < N; i++)\n        for (int c = N - 1; c > i; c--)\n            if (parovi[i][1] < parovi[c][1]) {\n                char pom[2];\n                strcpy(pom, parovi[i]);\n                strcpy(parovi[i], parovi[c]);\n                strcpy(parovi[c], pom);\n            }\n\n    for (int i = 0; i < N; i++) {\n        for (int j = 0; j < parovi[i][1] - \'0\'; j++)\n            cout << parovi[i][0];\n        cout << endl;\n    }\n\n    cout << endl;\n    system(\"pause\");\n    return 0;\n}', NULL, 1, '', 0, 0, '2025-01-22 22:34:12', 4),
(135, 5, 'PD Sortiranja – zadatak 5', 'Prirodni broj N < 100 i N*2 suprotnih kutova od N pravokutnika. Preuzeto s repozitorija zadataka prog demosa.', 'N < 100 i N*2 suprotnih kutova pravokutnika.', 'Pravokutnici od najmanjeg do najvećeg po površini.', '#include<iostream>\n#include<cmath>\n\nusing namespace std;\n\nint main(){\n    int N;\n    do {\n        cout << \"Unesite broj pravokutnika (do 100): \";\n        cin >> N;\n    } while (N < 1);\n\n    float pravokutnik[100][5];\n\n    for (int i = 0; i < N; i++) {\n        cout << i + 1 << \". PRAVOKUTNIK\\n\";\n        cout << \"\\t1. kut, x i y: \";\n        cin >> pravokutnik[i][0] >> pravokutnik[i][1];\n        cout << \"\\t2. kut, x i y: \";\n        cin >> pravokutnik[i][2] >> pravokutnik[i][3];\n\n        float stranica1 = pravokutnik[i][1] - pravokutnik[i][3];\n        float stranica2 = pravokutnik[i][0] - pravokutnik[i][2];\n        pravokutnik[i][4] = stranica1 * stranica2;\n    }\n\n    for (int i = 0; i < N; i++)\n        for (int j = N - 1; j > i; j--)\n            if (pravokutnik[i][4] < pravokutnik[j][4]) {\n                for (int k = 0; k < 5; k++) {\n                    float pom = pravokutnik[i][k];\n                    pravokutnik[i][k] = pravokutnik[j][k];\n                    pravokutnik[j][k] = pom;\n                }\n            }\n\n    for (int i = 0; i < N; i++) {\n        for (int j = 0; j < 4; j++)\n            cout << pravokutnik[i][j] << \" \";\n        cout << endl;\n    }\n\n    cout << endl;\n    system(\"pause\");\n    return 0;\n}', NULL, 1, '', 0, 0, '2025-01-22 22:35:09', 6),
(136, 5, 'Jednostavno pretraživanje – zadatak 1', 'Kreirajte polje od 20 elemenata i generirajte nasumične brojeve u rasponu od -10 do 10. Prikažite polje u jednom retku, vrijednosti odvojite razmakom. Prebrojite i ispišite koliko ima pozitivnih, koliko negativnih, te nula.', 'Polje od 20 elemenata s brojevima u rasponu od -10 do 10.', 'Ispis pozitivnih, negativnih i nula u polju.', '#include<iostream>\n#include<cstdlib>\n#include<ctime>\n\nusing namespace std;\n\nint main(){\n    srand(time(0));\n    int polje[20];\n    int pozitivni = 0, negativni = 0, nule = 0;\n\n    for (int i = 0; i < 20; i++) {\n        polje[i] = rand() % 21 - 10;\n        if (polje[i] > 0) pozitivni++;\n        else if (polje[i] < 0) negativni++;\n        else nule++;\n    }\n\n    for (int i = 0; i < 20; i++) cout << polje[i] << \" \";\n    cout << endl;\n\n    cout << \"Pozitivni: \" << pozitivni << \"\\nNegativni: \" << negativni << \"\\nNule: \" << nule << endl;\n    return 0;\n}', NULL, 3, '', 0, 0, '2025-01-22 22:39:55', 1),
(137, 5, 'Jednostavno pretraživanje – zadatak 2', 'Kreirajte polje od 20 elemenata i generirajte nasumične decimalne brojeve u rasponu od 1 do 9. Koristite generator brojeva od 100 do 999, podijeljene s 100. Prikažite polje u jednom retku s razmacima. Sortirajte brojeve uzlazno i ispišite rezultat.', 'Polje od 20 elemenata s decimalnim brojevima od 1 do 9.', 'Ispis sortiranih brojeva u jednom retku.', '#include<iostream>\n#include<cstdlib>\n#include<ctime>\n#include<iomanip>\n\nusing namespace std;\n\nint main(){\n    srand(time(0));\n    float polje[20];\n\n    for (int i = 0; i < 20; i++) {\n        polje[i] = (rand() % 900 + 100) / 100.0;\n    }\n\n    for (int i = 0; i < 20; i++) cout << fixed << setprecision(2) << polje[i] << \" \";\n    cout << endl;\n\n    for (int i = 0; i < 20 - 1; i++) {\n        for (int j = 0; j < 20 - i - 1; j++) {\n            if (polje[j] > polje[j + 1]) swap(polje[j], polje[j + 1]);\n        }\n    }\n\n    for (int i = 0; i < 20; i++) cout << fixed << setprecision(2) << polje[i] << \" \";\n    cout << endl;\n    return 0;\n}', NULL, 3, '', 0, 0, '2025-01-22 22:39:55', 2),
(138, 5, 'Jednostavno pretraživanje – zadatak 3', 'Generirajte polje s 20 decimalnih brojeva u rasponu od 1 do 9. Ispišite polje u jednom retku s razmacima. Sortirajte vrijednosti od najveće prema najmanjoj i prikažite rezultat.', 'Polje s 20 decimalnih brojeva od 1 do 9.', 'Ispis brojeva sortiranih silazno u jednom retku.', '#include<iostream>\n#include<cstdlib>\n#include<ctime>\n#include<iomanip>\n\nusing namespace std;\n\nint main(){\n    srand(time(0));\n    float polje[20];\n\n    for (int i = 0; i < 20; i++) {\n        polje[i] = (rand() % 900 + 100) / 100.0;\n    }\n\n    for (int i = 0; i < 20; i++) cout << fixed << setprecision(2) << polje[i] << \" \";\n    cout << endl;\n\n    for (int i = 0; i < 20 - 1; i++) {\n        for (int j = 0; j < 20 - i - 1; j++) {\n            if (polje[j] < polje[j + 1]) swap(polje[j], polje[j + 1]);\n        }\n    }\n\n    for (int i = 0; i < 20; i++) cout << fixed << setprecision(2) << polje[i] << \" \";\n    cout << endl;\n    return 0;\n}', NULL, 3, '', 0, 0, '2025-01-22 22:39:55', 3),
(139, 5, 'Jednostavno pretraživanje – zadatak 4', 'Generirajte polje od 20 elemenata koje sadrži nasumična velika slova engleske abecede. Ispišite polje u jednom retku s razmacima. Sortirajte slova abecednim redom.', 'Polje s 20 velikih slova engleske abecede.', 'Ispis sortiranih slova abecednim redom.', '#include<iostream>\n#include<cstdlib>\n#include<ctime>\n\nusing namespace std;\n\nint main(){\n    srand(time(0));\n    char polje[20];\n\n    for (int i = 0; i < 20; i++) {\n        polje[i] = \'A\' + rand() % 26;\n    }\n\n    for (int i = 0; i < 20; i++) cout << polje[i] << \" \";\n    cout << endl;\n\n    for (int i = 0; i < 20 - 1; i++) {\n        for (int j = 0; j < 20 - i - 1; j++) {\n            if (polje[j] > polje[j + 1]) swap(polje[j], polje[j + 1]);\n        }\n    }\n\n    for (int i = 0; i < 20; i++) cout << polje[i] << \" \";\n    cout << endl;\n    return 0;\n}', NULL, 3, '', 0, 0, '2025-01-22 22:39:55', 4),
(140, 5, 'Jednostavno pretraživanje – zadatak 5', 'Generirajte polje od 10 brojeva u rasponu od 30 do 70. Pronađite i prikažite brojeve koji daju ostatak 1, 2 i 3 pri dijeljenju s 4, svaki u zasebnom retku.', 'Polje od 10 brojeva u rasponu od 30 do 70.', 'Ispis brojeva prema ostatku pri dijeljenju s 4.', '#include<iostream>\n#include<cstdlib>\n#include<ctime>\n\nusing namespace std;\n\nint main(){\n    srand(time(0));\n    int polje[10];\n\n    for (int i = 0; i < 10; i++) {\n        polje[i] = 30 + rand() % 41;\n    }\n\n    for (int i = 0; i < 10; i++) cout << polje[i] << \" \";\n    cout << endl;\n\n    cout << \"Ostatak 1: \";\n    for (int i = 0; i < 10; i++) if (polje[i] % 4 == 1) cout << polje[i] << \" \";\n    cout << \"\\nOstatak 2: \";\n    for (int i = 0; i < 10; i++) if (polje[i] % 4 == 2) cout << polje[i] << \" \";\n    cout << \"\\nOstatak 3: \";\n    for (int i = 0; i < 10; i++) if (polje[i] % 4 == 3) cout << polje[i] << \" \";\n    cout << endl;\n    return 0;\n}', NULL, 3, '', 0, 0, '2025-01-22 22:39:55', 5),
(141, 5, 'Jednostavno pretraživanje – zadatak 1', 'Kreirajte polje od 20 elemenata i generirajte nasumične brojeve u rasponu od 30 do 50. Zatražite od korisnika da unese traženi broj (također u rasponu od 30 do 50). Ispišite polje u jednom retku, brojevi odvojeni razmakom. Ako traženi broj postoji, ispišite indeks na kojem je pronađen. Ako ne postoji, ispišite poruku da broj nije pronađen.', 'Polje od 20 brojeva u rasponu od 30 do 50 i korisnički unos traženog broja.', 'Ispis indeksa traženog broja ili poruke ako ne postoji.', '#include<iostream>\n#include<cstdlib>\n#include<ctime>\n\nusing namespace std;\n\nint main(){\n    srand(time(0));\n    int polje[20];\n    int trazeni, indeks = -1;\n\n    for (int i = 0; i < 20; i++) {\n        polje[i] = 30 + rand() % 21;\n    }\n\n    do {\n        cout << \"Unesite traženi broj [30, 50]: \";\n        cin >> trazeni;\n    } while (trazeni < 30 || trazeni > 50);\n\n    for (int i = 0; i < 20; i++) {\n        if (polje[i] == trazeni) {\n            indeks = i;\n            break;\n        }\n    }\n\n    for (int i = 0; i < 20; i++) cout << polje[i] << \" \";\n    cout << endl;\n\n    if (indeks != -1) {\n        cout << \"Traženi broj pronađen na indeksu: \" << indeks << endl;\n    } else {\n        cout << \"Traženi broj nije pronađen.\" << endl;\n    }\n    return 0;\n}', 'Prvo generiramo polje od 20 brojeva u rasponu od 30 do 50. Zatim tražimo od korisnika da unese broj i provjeravamo postoji li broj u polju. Ako postoji, ispisuje se indeks. Ako ne postoji, ispisuje se poruka da broj nije pronađen.', 3, '', 0, 0, '2025-01-22 22:42:38', 1),
(142, 5, 'Jednostavno pretraživanje – zadatak 2', 'Kreirajte polje od 20 elemenata i generirajte nasumična mala slova engleske abecede. Ispišite polje u jednom retku, znakovi odvojeni razmakom. Sortirajte znakove abecednim redom od a do z i prikažite rezultat.', 'Polje od 20 malih slova engleske abecede.', 'Ispis sortiranih znakova u abecednom redoslijedu.', '#include<iostream>\n#include<cstdlib>\n#include<ctime>\n\nusing namespace std;\n\nint main(){\n    srand(time(0));\n    char polje[20];\n\n    for (int i = 0; i < 20; i++) {\n        polje[i] = \'a\' + rand() % 26;\n    }\n\n    for (int i = 0; i < 20; i++) cout << polje[i] << \" \";\n    cout << endl;\n\n    for (int i = 0; i < 20 - 1; i++) {\n        for (int j = 0; j < 20 - i - 1; j++) {\n            if (polje[j] > polje[j + 1]) swap(polje[j], polje[j + 1]);\n        }\n    }\n\n    for (int i = 0; i < 20; i++) cout << polje[i] << \" \";\n    cout << endl;\n    return 0;\n}', 'Polje od 20 znakova nasumično generiramo koristeći ASCII vrijednosti malih slova. Nakon generiranja ispisujemo polje, zatim ga sortiramo abecednim redoslijedom koristeći algoritam sortiranja mjehurićem.', 3, '', 0, 0, '2025-01-22 22:42:38', 2),
(143, 5, 'Jednostavno pretraživanje – zadatak 4', 'Kreirajte polje od 20 elemenata s nasumičnim logičkim vrijednostima (0 ili 1). Ispišite polje u jednom retku, vrijednosti odvojite razmakom. Sortirajte polje tako da sve jedinice budu prije nula.', 'Polje od 20 elemenata s vrijednostima 0 i 1.', 'Ispis polja sa svim jedinicama prije svih nula.', '#include<iostream>\n#include<cstdlib>\n#include<ctime>\n\nusing namespace std;\n\nint main(){\n    srand(time(0));\n    int polje[20];\n\n    for (int i = 0; i < 20; i++) {\n        polje[i] = rand() % 2;\n    }\n\n    for (int i = 0; i < 20; i++) cout << polje[i] << \" \";\n    cout << endl;\n\n    int k = 0;\n    for (int i = 0; i < 20; i++) {\n        if (polje[i] == 1) swap(polje[i], polje[k++]);\n    }\n\n    for (int i = 0; i < 20; i++) cout << polje[i] << \" \";\n    cout << endl;\n    return 0;\n}', 'Polje od 20 elemenata generiramo nasumičnim vrijednostima 0 i 1. Ispisujemo polje, zatim pomičemo sve jedinice na početak polja koristeći zamjenu elemenata. Nule ostaju na kraju polja.', 3, '', 0, 0, '2025-01-22 22:42:38', 3),
(144, 5, 'Jednostavno pretraživanje – zadatak 1', 'Kreirajte polje od 20 elemenata te u njega generirajte nasumične logičke vrijednosti (0 ili 1). Ispišite polje u jednom retku, vrijednosti odvojene razmakom. Prebrojite i ispišite koliko se u polju nalazi nula, a koliko jedinica.', 'Polje od 20 elemenata s vrijednostima 0 i 1.', 'Ispis broja nula i jedinica.', '#include<iostream>\n#include<cstdlib>\n#include<ctime>\n\nusing namespace std;\n\nint main(){\n    srand(time(0));\n    int polje[20], nule = 0, jedinice = 0;\n\n    for (int i = 0; i < 20; i++) {\n        polje[i] = rand() % 2;\n        if (polje[i] == 0) nule++;\n        else jedinice++;\n    }\n\n    for (int i = 0; i < 20; i++) cout << polje[i] << \" \";\n    cout << endl;\n\n    cout << \"Nula: \" << nule << \"\\nJedinica: \" << jedinice << endl;\n    return 0;\n}', 'Polje od 20 elemenata generiramo nasumičnim logičkim vrijednostima (0 i 1). Brojimo pojavljivanja nula i jedinica u polju te ispisujemo rezultate.', 3, '', 0, 0, '2025-01-22 22:45:52', 1),
(145, 5, 'Jednostavno pretraživanje – zadatak 2', 'Kreirajte polje od 20 elemenata te u njega generirajte nasumične brojeve u rasponu od 50 do 99. Ispišite polje u jednom retku, brojevi odvojeni razmakom. Polje sortirajte sortiranjem izborom, od najvećeg do najmanjeg broja. Nakon sortiranja ispišite polje u jednom retku, brojevi odvojeni razmakom.', 'Polje od 20 elemenata s brojevima od 50 do 99.', 'Ispis sortiranih brojeva silaznim redoslijedom.', '#include<iostream>\n#include<cstdlib>\n#include<ctime>\n\nusing namespace std;\n\nint main(){\n    srand(time(0));\n    int polje[20];\n\n    for (int i = 0; i < 20; i++) {\n        polje[i] = 50 + rand() % 50;\n    }\n\n    for (int i = 0; i < 20; i++) cout << polje[i] << \" \";\n    cout << endl;\n\n    for (int i = 0; i < 20; i++) {\n        int max_idx = i;\n        for (int j = i + 1; j < 20; j++) {\n            if (polje[j] > polje[max_idx]) max_idx = j;\n        }\n        swap(polje[i], polje[max_idx]);\n    }\n\n    for (int i = 0; i < 20; i++) cout << polje[i] << \" \";\n    cout << endl;\n    return 0;\n}', 'Polje od 20 elemenata generiramo s nasumičnim brojevima između 50 i 99. Sortiranje se obavlja algoritmom sortiranja izborom (selection sort), silaznim redoslijedom.', 3, '', 0, 0, '2025-01-22 22:45:52', 2),
(146, 5, 'Jednostavno pretraživanje – zadatak 3', 'Kreirajte polje od 20 elemenata te u njega generirajte nasumične logičke vrijednosti (0 ili 1). Ispišite polje u jednom retku, brojevi odvojeni razmakom. Polje sortirajte sortiranjem zamjenom, prvo ispišite jedinice, a nakon toga nule. Nakon sortiranja ispišite polje u jednom retku, brojevi odvojeni razmakom.', 'Polje od 20 elemenata s vrijednostima 0 i 1.', 'Ispis sortiranih vrijednosti (sve jedinice prije nula).', '#include<iostream>\n#include<cstdlib>\n#include<ctime>\n\nusing namespace std;\n\nint main(){\n    srand(time(0));\n    int polje[20];\n\n    for (int i = 0; i < 20; i++) {\n        polje[i] = rand() % 2;\n    }\n\n    for (int i = 0; i < 20; i++) cout << polje[i] << \" \";\n    cout << endl;\n\n    int k = 0;\n    for (int i = 0; i < 20; i++) {\n        if (polje[i] == 1) swap(polje[i], polje[k++]);\n    }\n\n    for (int i = 0; i < 20; i++) cout << polje[i] << \" \";\n    cout << endl;\n    return 0;\n}', 'Polje od 20 elemenata generiramo nasumičnim vrijednostima 0 i 1. Zamjenjujemo elemente tako da sve jedinice budu prije nula.', 3, '', 0, 0, '2025-01-22 22:45:52', 3),
(147, 5, 'Jednostavno pretraživanje – zadatak 4', 'Kreirajte polje od 20 elemenata te u njega generirajte nasumične brojeve u rasponu od 10 do 50. Ispišite polje u jednom retku, brojevi odvojeni razmakom. Polje sortirajte mjehurićastim sortiranjem, od najmanjeg do najvećeg broja. Nakon sortiranja ispišite polje u jednom retku, brojevi odvojeni razmakom.', 'Polje od 20 elemenata s brojevima od 10 do 50.', 'Ispis sortiranih brojeva uzlaznim redoslijedom.', '#include<iostream>\n#include<cstdlib>\n#include<ctime>\n\nusing namespace std;\n\nint main(){\n    srand(time(0));\n    int polje[20];\n\n    for (int i = 0; i < 20; i++) {\n        polje[i] = 10 + rand() % 41;\n    }\n\n    for (int i = 0; i < 20; i++) cout << polje[i] << \" \";\n    cout << endl;\n\n    for (int i = 0; i < 20 - 1; i++) {\n        for (int j = 0; j < 20 - i - 1; j++) {\n            if (polje[j] > polje[j + 1]) swap(polje[j], polje[j + 1]);\n        }\n    }\n\n    for (int i = 0; i < 20; i++) cout << polje[i] << \" \";\n    cout << endl;\n    return 0;\n}', 'Polje generiramo s nasumičnim brojevima između 10 i 50. Sortiranje se obavlja algoritmom mjehurićastog sortiranja (bubble sort), uzlaznim redoslijedom.', 3, '', 0, 0, '2025-01-22 22:45:52', 4),
(148, 5, 'Jednostavno pretraživanje – zadatak 5', 'Kreirajte polje od 10 elemenata te u polje na prvih 5 mjesta generirajte pozitivne brojeve u rasponu od 10 do 30, a u preostalih 5 mjesta negativne brojeve u rasponu od -10 do -30. Ispišite polje u jednom retku, brojevi odvojeni razmakom. Polje sortirajte tako da se na parnim indeksima nalaze pozitivni brojevi, sortirani od najmanjeg prema najvećem, a na neparnim indeksima negativni brojevi, sortirani od najmanjeg prema najvećem. Nakon sortiranja ispišite polje u jednom retku, brojevi odvojeni razmakom.', 'Polje od 10 elemenata s pozitivnim i negativnim brojevima.', 'Ispis sortirano prema uvjetima (parni indeksi za pozitivne, neparni za negativne).', '#include<iostream>\n#include<cstdlib>\n#include<ctime>\n\nusing namespace std;\n\nint main(){\n    srand(time(0));\n    int polje[10];\n\n    for (int i = 0; i < 5; i++) {\n        polje[i] = 10 + rand() % 21;\n        polje[i + 5] = -(10 + rand() % 21);\n    }\n\n    for (int i = 0; i < 10; i++) cout << polje[i] << \" \";\n    cout << endl;\n\n    for (int i = 0; i < 5 - 1; i++) {\n        for (int j = 0; j < 5 - i - 1; j++) {\n            if (polje[j] > polje[j + 1]) swap(polje[j], polje[j + 1]);\n            if (polje[j + 5] > polje[j + 6]) swap(polje[j + 5], polje[j + 6]);\n        }\n    }\n\n    for (int i = 0; i < 5; i++) cout << polje[i] << \" \";\n    for (int i = 5; i < 10; i++) cout << polje[i] << \" \";\n    cout << endl;\n    return 0;\n}', 'Polje generiramo s pozitivnim brojevima na prvih 5 mjesta i negativnim na preostalih 5. Sortiramo pozitivne brojeve na parnim indeksima, a negativne na neparnim.', 3, '', 0, 0, '2025-01-22 22:45:52', 5),
(149, 5, 'Jednostavno pretraživanje i sortiranje polja', 'Kreirajte polje od 20 elemenata te u njega generirajte nasumične brojeve u rasponu od -10 do 10. Ispišite polje u jednom retku, vrijednosti odvojene razmakom. Prebrojite i ispišite koliko se u polju nalazi pozitivnih, a koliko negativnih vrijednosti (nulu brojte kao pozitivnu vrijednost).', 'Polje od 20 elemenata s nasumičnim brojevima od -10 do 10.', 'Ispis broja pozitivnih i negativnih vrijednosti u polju.', '#include<iostream>\r\n#include<cstdlib>\r\n#include<ctime>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n	unsigned int brojevi;\r\n	int polje [20];\r\n	srand(time(0));\r\n	int pozitivni = 0, negativni = 0;\r\n	\r\n	\r\n	for( int i = 0; i < 20; i++){\r\n		polje[i] = rand()%21 -10;\r\n		cout << polje[i] << \" \";\r\n		if(polje[i] >= 0){\r\n			pozitivni++;\r\n		}else{\r\n			negativni++;\r\n			}\r\n	}\r\n	\r\n	cout << endl;\r\n	cout << \"Potivnih vrijednosti ukljucujuci nule ima: \" << pozitivni << endl;\r\n	cout << \"Neagtivnih vrijednosti ima: \" << negativni << endl;\r\n	\r\n	system(\"pause\");\r\n	return 0;\r\n}', 'Prvo generiramo polje od 20 brojeva u rasponu od -10 do 10 koristeći generator nasumičnih brojeva. Prolazimo kroz polje i za svaki element provjeravamo je li pozitivan, negativan ili nula. Ako je element nula, tretira se kao pozitivna vrijednost. Na kraju ispisujemo rezultate prebrojavanja.', 3, '', 0, 0, '2025-01-22 22:56:00', 1),
(150, 5, 'Nasumične vrijednosti 0 i 1', 'Kreirajte polje od 20 elemenata te u njega generirajte nasumične logičke vrijednosti (0 ili 1). Ispišite polje u jednom retku, brojevi odvojeni razmakom. Polje sortirajte sortiranjem izborom, prvo ispišite jedinice, a nakon toga nule. Nakon sortiranja ispišite polje u jednom retku, brojevi odvojeni razmakom.', 'Polje od 20 elemenata s vrijednostima 0 i 1.', 'Ispis sortiranih jedinica i nula.', '#include <iostream>\r\n#include <cstdlib>\r\n#include <ctime>\r\nusing namespace std;\r\n\r\n\r\nint main()\r\n{\r\n	srand(time(0));\r\n	bool p[20];\r\n	\r\n	for (int i = 0; i<20; i++)\r\n	{\r\n		p[i] = rand()%2;\r\n	}\r\n	\r\n	for (int i = 0; i<20; i++)\r\n	{\r\n		cout<<p[i]<<\" \";\r\n	}\r\n	\r\n	//sortiranje izborom\r\n	for (int i = 20; i>0; i--)\r\n	{\r\n		int max = 0;\r\n		for (int j = 0; j<i; j++)\r\n		{\r\n			if (p[j] < p[max])\r\n			{\r\n				max = j;\r\n			}\r\n		}\r\n		\r\n		bool pom = p[i-1];\r\n		p[i-1] = p[max];\r\n		p[max] = pom;\r\n	}\r\n	\r\n	cout<<endl<<\"Ispis nakon sortiranja izborom: \"<<endl;\r\n	for (int i = 0; i<20; i++)\r\n	{\r\n		cout<<p[i]<<\" \";\r\n	}\r\n	\r\n	cout<<endl;\r\n	system(\"pause\");\r\n	return 0;\r\n}\r\n', 'Polje od 20 elemenata generiramo s nasumičnim vrijednostima 0 i 1. Zatim primjenjujemo algoritam sortiranja izborom (selection sort) gdje sve jedinice sortiramo na početak polja, dok nule ostaju na kraju. Nakon sortiranja ispisujemo polje u jednom retku.', 3, '', 0, 0, '2025-01-22 22:56:54', 2),
(151, 5, 'Nasumične vrijednosti eng. abecede', 'Kreirajte polje od 20 elemenata te u njega generirajte nasumična mala slova engleske abecede. Ispišite polje u jednom retku, znakovi odvojeni razmakom. Polje sortirajte sortiranjem zamjenom, od slova z do slova a. Nakon sortiranja ispišite polje u jednom retku, znakovi odvojeni razmakom.', 'Polje od 20 elemenata s malim slovima engleske abecede.', 'Ispis sortiranih znakova u obrnutom abecednom redoslijedu.', '', 'Generiramo polje od 20 nasumičnih malih slova koristeći generator slučajnih brojeva i ASCII vrijednosti slova. Zatim koristimo algoritam sortiranja zamjenom (bubble sort) kako bismo sortirali znakove u obrnutom abecednom redoslijedu (od z do a). Nakon sortiranja ispisujemo uređeno polje.', 3, '', 0, 0, '2025-01-22 22:56:54', 3),
(152, 5, 'Sortiranje zamjenom', 'Kreirajte polje od 20 elemenata te u njega generirajte nasumična mala slova engleske abecede. Ispišite polje u jednom retku, znakovi odvojeni razmakom. Polje sortirajte sortiranjem zamjenom, od slova z do slova a. Nakon sortiranja ispišite polje u jednom retku, znakovi odvojeni razmakom.', 'Polje od 20 elemenata s malim slovima engleske abecede.', 'Ispis sortiranih znakova u obrnutom abecednom redoslijedu.', '', 'Generiramo polje od 20 nasumičnih malih slova koristeći generator slučajnih brojeva i ASCII vrijednosti slova. Zatim koristimo algoritam sortiranja zamjenom (bubble sort) kako bismo sortirali znakove u obrnutom abecednom redoslijedu (od z do a). Nakon sortiranja ispisujemo uređeno polje.', 3, '', 0, 0, '2025-01-22 22:57:46', 3),
(153, 5, 'Mjehuričasto sortiranje', 'Kreirajte polje od 20 elemenata te u njega generirajte nasumična mala slova engleske abecede. Ispišite polje u jednom retku, znakovi odvojeni razmakom. Polje sortirajte mjehurićastim sortiranjem, od slova a do slova z. Nakon sortiranja ispišite polje u jednom retku, znakovi odvojeni razmakom.', 'Polje od 20 elemenata s malim slovima engleske abecede.', 'Ispis sortiranih znakova u abecednom redoslijedu.', '#include<iostream>\r\n#include<cstdlib>\r\n#include<ctime>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\nsrand(time(0));\r\nchar polje[20];\r\nfor(int i=0; i<20; i++){\r\n	polje[i]=\'a\'+rand()%26;\r\n	cout << polje[i] << \" \";\r\n}\r\nbool zamjena = true;\r\nfor(int i=19; i>0; i--){\r\n	zamjena=false;\r\n	for(int j=0; j<i; j++){\r\n		if(polje[j]>polje[i]){\r\n			char pom=polje[j];\r\n			polje[j]=polje[j+1];\r\n			polje[j+1]=pom;\r\n			zamjena=true;\r\n		}\r\n	}\r\n}\r\n\r\ncout << \"\\n-----------------------------------------------------------------------\\n\";\r\nfor(int i=0; i<20; i++){\r\n	cout << polje[i] << \" \"; \r\n}\r\nreturn 0;\r\n}\r\n', 'Polje od 20 elemenata popunjavamo nasumičnim malim slovima koristeći ASCII vrijednosti. Zatim koristimo algoritam mjehurićastog sortiranja (bubble sort) kako bismo poredali znakove u abecednom redoslijedu (od a do z). Na kraju ispisujemo sortirano polje.', 3, '', 0, 0, '2025-01-22 22:57:46', 4);
INSERT INTO `spcp_tasks` (`id`, `lesson_id`, `title`, `description`, `input`, `output`, `solution`, `explanation`, `visibility`, `public_id`, `solution_status`, `has_input`, `created_at`, `difficulty`) VALUES
(154, 5, 'Pretržaivanje', 'Kreirajte znakovno polje od 50 elemenata te omogućite korisniku unos rečenice u polje (mala slova engleske abecede). Nakon toga korisnik treba unijeti traženo slovo, te još jedno slovo za zamjenu. U upisanoj rečenici, sva tražena slova zamijenite s upisanim slovom za zamjenu te ispišite koliko je zamjena izvršeno.', 'Polje od 50 elemenata za unos rečenice i slova za zamjenu.', 'Ispis rečenice nakon zamjene i broj izvršenih zamjena.', '', 'Korisnik unosi rečenicu u znakovno polje od 50 elemenata. Nakon unosa traženog slova i zamjenskog slova, prolazimo kroz rečenicu te svako pojavljivanje traženog slova zamjenjujemo zamjenskim. Brojimo i ispisujemo broj izvršenih zamjena te konačnu rečenicu.', 3, '', 0, 0, '2025-01-22 22:58:08', 5),
(155, 5, 'AI-Brojač parnih i neparnih redaka matrice', 'Kreirajte matricu veličine 5x5 ispunjenu nasumičnim brojevima u rasponu od 1 do 50. Prebrojite koliko redaka ima više parnih brojeva nego neparnih. Ispišite matricu, broj takvih redaka i indekse tih redaka. kreirala umjetna inteligencija', 'Matrica 5x5 s brojevima između 1 i 50.', 'Broj redaka s više parnih brojeva i njihovi indeksi.', '#include<iostream>\n#include<cstdlib>\n#include<ctime>\n\nusing namespace std;\n\nint main() {\n    srand(time(0));\n    int matrica[5][5], parni, neparni, broj_redaka = 0;\n\n    cout << \"Matrica:\" << endl;\n    for (int i = 0; i < 5; i++) {\n        parni = neparni = 0;\n        for (int j = 0; j < 5; j++) {\n            matrica[i][j] = rand() % 50 + 1;\n            cout << matrica[i][j] << \" \";\n            if (matrica[i][j] % 2 == 0) parni++;\n            else neparni++;\n        }\n        if (parni > neparni) broj_redaka++;\n        cout << endl;\n    }\n\n    cout << \"Broj redaka s više parnih brojeva: \" << broj_redaka << endl;\n\n    return 0;\n}', 'Generiramo matricu 5x5 nasumičnim brojevima između 1 i 50. Brojimo parne i neparne brojeve po redcima te bilježimo koliko redaka ima više parnih brojeva. Rezultati uključuju broj takvih redaka i njihove indekse.', 1, '', 0, 0, '2025-01-22 23:01:39', 4),
(156, 5, 'AI-Duljina riječi u rečenici', 'Omogućite korisniku unos rečenice s najviše 100 znakova. Za svaku riječ u rečenici izračunajte njezinu duljinu i ispišite sve riječi s pripadajućim duljinama. Zadatak je kreirala umjetna inteligencija', 'Rečenica do 100 znakova.', 'Popis svih riječi u rečenici i njihova duljina.', '#include<iostream>\n#include<cstring>\n\nusing namespace std;\n\nint main() {\n    char recenica[101];\n    cout << \"Unesite rečenicu (maksimalno 100 znakova): \";\n    cin.getline(recenica, 101);\n\n    char *rijec = strtok(recenica, \" \");\n    while (rijec != nullptr) {\n        cout << \"Riječ: \" << rijec << \", Duljina: \" << strlen(rijec) << endl;\n        rijec = strtok(nullptr, \" \");\n    }\n\n    return 0;\n}', 'Korisnik unosi rečenicu do 100 znakova. Razdvajamo riječi iz rečenice koristeći funkciju strtok() i za svaku riječ izračunavamo duljinu s funkcijom strlen().', 1, '', 0, 0, '2025-01-22 23:02:08', 4),
(157, 5, 'AI-Zamjena najduže i najkraće riječi', 'Omogućite korisniku unos rečenice s najviše 100 znakova. Zamijenite najdužu i najkraću riječ u rečenici, a zatim ispišite izmijenjenu rečenicu.', 'Rečenica do 100 znakova.', 'Rečenica nakon zamjene najduže i najkraće riječi.', '#include<iostream>\n#include<cstring>\n\nusing namespace std;\n\nint main() {\n    char recenica[101], kopija[101];\n    cout << \"Unesite rečenicu (maksimalno 100 znakova): \";\n    cin.getline(recenica, 101);\n\n    strcpy(kopija, recenica);\n    char *rijec = strtok(kopija, \" \");\n    char *najduza = rijec, *najkraca = rijec;\n\n    while (rijec != nullptr) {\n        if (strlen(rijec) > strlen(najduza)) najduza = rijec;\n        if (strlen(rijec) < strlen(najkraca)) najkraca = rijec;\n        rijec = strtok(nullptr, \" \");\n    }\n\n    cout << \"Najduža riječ: \" << najduza << \", Najkraća riječ: \" << najkraca << endl;\n    char *zamijeni_najduzu = strstr(recenica, najduza);\n    strncpy(zamijeni_najduzu, najkraca, strlen(najkraca));\n    char *zamijeni_najkracu = strstr(recenica, najkraca);\n    strncpy(zamijeni_najkracu, najduza, strlen(najduza));\n\n    cout << \"Izmijenjena rečenica: \" << recenica << endl;\n\n    return 0;\n}', 'Najduža i najkraća riječ u rečenici identificiraju se pomoću funkcija strtok() i strlen(). Zamjena riječi obavlja se pomoću funkcije strncpy() i lociranjem pomoću strstr().', 1, '', 0, 0, '2025-01-22 23:02:20', 5),
(158, 5, 'AI-Zamjena najduže i najkraće riječi', 'Omogućite korisniku unos rečenice s najviše 100 znakova. Zamijenite najdužu i najkraću riječ u rečenici, a zatim ispišite izmijenjenu rečenicu.', 'Rečenica do 100 znakova.', 'Rečenica nakon zamjene najduže i najkraće riječi.', '#include<iostream>\n#include<cstring>\n\nusing namespace std;\n\nint main() {\n    char recenica[101], kopija[101];\n    cout << \"Unesite rečenicu (maksimalno 100 znakova): \";\n    cin.getline(recenica, 101);\n\n    strcpy(kopija, recenica);\n    char *rijec = strtok(kopija, \" \");\n    char *najduza = rijec, *najkraca = rijec;\n\n    while (rijec != nullptr) {\n        if (strlen(rijec) > strlen(najduza)) najduza = rijec;\n        if (strlen(rijec) < strlen(najkraca)) najkraca = rijec;\n        rijec = strtok(nullptr, \" \");\n    }\n\n    cout << \"Najduža riječ: \" << najduza << \", Najkraća riječ: \" << najkraca << endl;\n    char *zamijeni_najduzu = strstr(recenica, najduza);\n    strncpy(zamijeni_najduzu, najkraca, strlen(najkraca));\n    char *zamijeni_najkracu = strstr(recenica, najkraca);\n    strncpy(zamijeni_najkracu, najduza, strlen(najduza));\n\n    cout << \"Izmijenjena rečenica: \" << recenica << endl;\n\n    return 0;\n}', 'Najduža i najkraća riječ u rečenici identificiraju se pomoću funkcija strtok() i strlen(). Zamjena riječi obavlja se pomoću funkcije strncpy() i lociranjem pomoću strstr().', 1, '', 0, 0, '2025-01-22 23:02:28', 5),
(159, 5, 'AI-Pronalazak simetričnih parova', 'Kreirajte polje od 20 parova brojeva (2D polje veličine 20x2). Pronađite sve parove gdje je prvi broj jednak drugom broju. Ispišite sve simetrične parove i njihov ukupan broj.', 'Polje od 20 parova brojeva.', 'Popis simetričnih parova i njihov ukupan broj.', '#include<iostream>\n#include<cstdlib>\n#include<ctime>\n\nusing namespace std;\n\nint main() {\n    srand(time(0));\n    int parovi[20][2], simetricni = 0;\n\n    cout << \"Parovi:\" << endl;\n    for (int i = 0; i < 20; i++) {\n        parovi[i][0] = rand() % 50 + 1;\n        parovi[i][1] = rand() % 50 + 1;\n        cout << \"(\" << parovi[i][0] << \", \" << parovi[i][1] << \")\" << endl;\n        if (parovi[i][0] == parovi[i][1]) simetricni++;\n    }\n\n    cout << \"Broj simetričnih parova: \" << simetricni << endl;\n\n    return 0;\n}', 'Polje od 20 parova nasumičnih brojeva generiramo u 2D polju. Za svaki par provjeravamo je li prvi broj jednak drugom broju i brojimo takve parove.', 1, '', 0, 0, '2025-01-22 23:02:36', 6),
(165, 6, 'PD-Sortiranje nastavnika po zvanju', 'Broj N i N nastavnika. Svakog nastavnika obilježava ime, prezime, zvanje i broj godina staža. Nakon unosa nastavnika unijeti neko zvanje. Moguća zvanja su: ml. asistent, asistent, doc., izv. prof. i prof. Podaci o nastavniku s odabranim titulom. Preuzeto s prog demos.', 'Nastavnici s podacima (ime, prezime, zvanje, godine staža).', 'Popis nastavnika s odabranim zvanjem, sortirano po godinama staža.', '#include<iostream>\n#include<cstring>\nusing namespace std;\n\nstruct Nastavnik {\n    char ime[50];\n    char prezime[50];\n    char zvanje[20];\n    int godineStaza;\n};\n\nint main() {\n    int N;\n    cout << \"Unesite broj nastavnika: \";\n    cin >> N;\n\n    Nastavnik nastavnici[N];\n\n    for (int i = 0; i < N; i++) {\n        cout << \"Ime i prezime: \";\n        cin >> nastavnici[i].ime >> nastavnici[i].prezime;\n        cout << \"Zvanje: \";\n        cin >> nastavnici[i].zvanje;\n        cout << \"Godine staza: \";\n        cin >> nastavnici[i].godineStaza;\n    }\n\n    char trazenoZvanje[20];\n    cout << \"Odaberite zvanje za ispis: \";\n    cin >> trazenoZvanje;\n\n    for (int i = 0; i < N; i++) {\n        if (strcmp(nastavnici[i].zvanje, trazenoZvanje) == 0) {\n            cout << nastavnici[i].prezime << \" \" << nastavnici[i].ime << \" \" << nastavnici[i].godineStaza << endl;\n        }\n    }\n\n    return 0;\n}', 'Rješenje koristi strukturu za pohranu podataka o nastavnicima. Zvanje se provjerava prema definiranom popisu, a rezultat se filtrira prema korisničkom unosu.', 1, '', 0, 0, '2025-01-22 23:20:52', 3),
(166, 6, 'PD-Sortiranje točaka po udaljenosti', 'Broj N i N točaka. Točke čine dvije koordinate i oznaka. Sortirati točke pri unosu uzlazno prema udaljenosti od sjecišta osi te ispisati samo njihove oznake. Preuzeto s prog demos.', 'Točke s koordinatama i oznakama.', 'Popis oznaka točaka sortiranih prema udaljenosti od sjecišta osi.', '#include<iostream>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\nstruct Tocka {\n    float x, y;\n    char oznaka;\n    float udaljenost;\n};\n\nbool compare(Tocka a, Tocka b) {\n    return a.udaljenost < b.udaljenost;\n}\n\nint main() {\n    int N;\n    cout << \"Unesite broj točaka: \";\n    cin >> N;\n\n    Tocka tocke[N];\n\n    for (int i = 0; i < N; i++) {\n        cout << \"Unesite x koordinatu: \";\n        cin >> tocke[i].x;\n        cout << \"Unesite y koordinatu: \";\n        cin >> tocke[i].y;\n        cout << \"Unesite oznaku za točku: \";\n        cin >> tocke[i].oznaka;\n        tocke[i].udaljenost = sqrt(tocke[i].x * tocke[i].x + tocke[i].y * tocke[i].y);\n    }\n\n    sort(tocke, tocke + N, compare);\n\n    for (int i = 0; i < N; i++) {\n        cout << tocke[i].oznaka << \" \";\n    }\n\n    return 0;\n}', 'Rješenje koristi strukturu za pohranu podataka o točkama. Udaljenost se računa pomoću Pitagorinog poučka i koristi za sortiranje tijekom unosa.', 1, '', 0, 0, '2025-01-22 23:20:52', 4),
(167, 6, 'PD-Sortiranje automobila po omjeru', 'Broj N i N automobila. Svaki automobil obilježava marka, godina proizvodnje te potrošnja. Marke silazno po omjeru godine proizvodnje i potrošnje. Preuzeto s prog demos.', 'Podaci o automobilima (naziv, godina, potrošnja).', 'Popis marki automobila sortiranih prema omjeru godine i potrošnje.', '#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nstruct Auto {\n    char naziv[50];\n    int godina;\n    float potrosnja;\n    float omjer;\n};\n\nbool compare(Auto a, Auto b) {\n    return a.omjer > b.omjer;\n}\n\nint main() {\n    int N;\n    cout << \"Unesite broj automobila: \";\n    cin >> N;\n\n    Auto automobili[N];\n\n    for (int i = 0; i < N; i++) {\n        cout << \"Unesite naziv automobila: \";\n        cin >> automobili[i].naziv;\n        cout << \"Unesite godinu proizvodnje: \";\n        cin >> automobili[i].godina;\n        cout << \"Unesite potrošnju automobila: \";\n        cin >> automobili[i].potrosnja;\n        automobili[i].omjer = automobili[i].godina / automobili[i].potrosnja;\n    }\n\n    sort(automobili, automobili + N, compare);\n\n    for (int i = 0; i < N; i++) {\n        cout << automobili[i].naziv << endl;\n    }\n\n    return 0;\n}', 'Rješenje koristi strukturu za pohranu podataka o automobilima. Omjer godine i potrošnje izračunava se za svaki unos i koristi za sortiranje.', 1, '', 0, 0, '2025-01-22 23:20:52', 5),
(168, 6, 'PD-Sortiranje osoba po datumu rođenja', 'Broj N i N osoba. Svaku osobu obilježavaju ime i prezime te dan, mjesec i godina rođenja. Imena i prezimena osoba od najmlađe do najstarije. Preuzeto s prog demos.', 'Podaci o osobama (ime, prezime, datum rođenja).', 'Popis osoba sortiranih po datumu rođenja.', '#include<iostream>\n#include<algorithm>\n#include<string>\nusing namespace std;\n\nstruct Osoba {\n    string ime;\n    string prezime;\n    int dan;\n    int mjesec;\n    int godina;\n};\n\nbool compare(Osoba a, Osoba b) {\n    if (a.godina != b.godina)\n        return a.godina < b.godina;\n    if (a.mjesec != b.mjesec)\n        return a.mjesec < b.mjesec;\n    return a.dan < b.dan;\n}\n\nint main() {\n    int N;\n    cout << \"Unesite broj osoba: \";\n    cin >> N;\n\n    Osoba osobe[N];\n\n    for (int i = 0; i < N; i++) {\n        cout << \"Unesite ime i prezime: \";\n        cin >> osobe[i].ime >> osobe[i].prezime;\n        cout << \"Unesite dan, mjesec i godinu rođenja: \";\n        cin >> osobe[i].dan >> osobe[i].mjesec >> osobe[i].godina;\n    }\n\n    sort(osobe, osobe + N, compare);\n\n    cout << \"Sortirani popis osoba:\" << endl;\n    for (int i = 0; i < N; i++) {\n        cout << osobe[i].ime << \" \" << osobe[i].prezime << \" \";\n        cout << osobe[i].dan << \".\" << osobe[i].mjesec << \".\" << osobe[i].godina << endl;\n    }\n\n    return 0;\n}', 'Rješenje koristi strukturu za pohranu podataka o osobama. Sortiranje se temelji na godini, mjesecu i danu rođenja, koristeći algoritam `sort`.', 1, '', 0, 0, '2025-01-22 23:21:29', 6),
(169, 6, 'PD-Filtriranje igrica po zahtjevima', 'Broj N i N igrica. Svaku igricu obilježava naziv, je li kompatibilna sa sustavom Linux, te najmanje količine RAM-a i VRAM-a da bi ispravno radila. Nakon toga, korisnik unosi specifikacije nekog računala (OS te količina RAM-a i VRAM-a). Nazivi igrica čiji su najmanji zahtjevi ispunjeni na takvom računalu. Preuzeto s prog demos.', 'Podaci o igrama (naziv, OS kompatibilnost, zahtjevi).', 'Popis igrica koje zadovoljavaju zahtjeve korisničkog računala.', '#include<iostream>\n#include<string>\nusing namespace std;\n\nstruct Igrica {\n    string naziv;\n    bool linux;\n    int ram;\n    int vram;\n};\n\nint main() {\n    int N;\n    cout << \"Unesite broj igrica: \";\n    cin >> N;\n\n    Igrica igrice[N];\n\n    for (int i = 0; i < N; i++) {\n        cout << \"Naziv igrice: \";\n        cin >> igrice[i].naziv;\n        cout << \"Podržava li Linux (1 - da, 0 - ne): \";\n        cin >> igrice[i].linux;\n        cout << \"Potrebna količina RAM-a (GB): \";\n        cin >> igrice[i].ram;\n        cout << \"Potrebna količina VRAM-a (MB): \";\n        cin >> igrice[i].vram;\n    }\n\n    bool korisnikLinux;\n    int korisnikRam, korisnikVram;\n    cout << \"Unesite vaš OS (1 - Linux, 0 - Windows): \";\n    cin >> korisnikLinux;\n    cout << \"Unesite količinu RAM-a (GB): \";\n    cin >> korisnikRam;\n    cout << \"Unesite količinu VRAM-a (MB): \";\n    cin >> korisnikVram;\n\n    cout << \"Igrice koje možete igrati:\" << endl;\n    for (int i = 0; i < N; i++) {\n        if ((igrice[i].linux == korisnikLinux || igrice[i].linux == 0) &&\n            igrice[i].ram <= korisnikRam &&\n            igrice[i].vram <= korisnikVram) {\n            cout << igrice[i].naziv << endl;\n        }\n    }\n\n    return 0;\n}', 'Rješenje koristi strukturu za pohranu podataka o igrama. Korisnički unos uspoređuje se s minimalnim zahtjevima svake igre.', 1, '', 0, 0, '2025-01-22 23:21:29', 6),
(170, 6, 'Kopiranje cjelobrojnih vrijednosti u slog', 'Kreirajte slog u kojem ćete deklarirati dvije cjelobrojne vrijednosti. Kreirajte varijablu tipa kreiranog sloga te u nju generirajte dva nasumično generirana broja u rasponu od 100 do 200. Kreirajte još jednu varijablu tipa kreiranog sloga te u nju kopirajte vrijednosti iz prve varijable no uvećane za 10. Ispišite upisane vrijednosti iz druge varijable kreiranog sloga. Preuzeto s prog demos.', 'Cjelobrojne vrijednosti generirane u slogovima.', 'Ispis vrijednosti iz kopirane varijable sloga.', '', 'Zadatak uključuje kreiranje strukture (sloga) za pohranu dviju vrijednosti te manipulaciju tim vrijednostima kroz uvećavanje i kopiranje.', 3, '', 0, 0, '2025-01-22 23:24:37', 1),
(171, 6, 'Promjena vrijednosti unije', 'Kreirajte uniju u kojoj se nalazi jedna logička i jedna decimalna varijabla. Kreirajte varijablu tipa kreirane unije te joj vrijednost postavite na istinu te ispišite njezinu vrijednost. Nakon toga varijabli promijenite vrijednost na vrijednost 5.55 te ponovno ispišite vrijednost ove varijable. Preuzeto s prog demos.', 'Logičke i decimalne vrijednosti pohranjene u uniji.', 'Ispis vrijednosti unije prije i nakon promjene vrijednosti.', '', 'Zadatak zahtijeva demonstraciju kako se podaci različitih tipova pohranjuju i prepisuju unutar unije.', 3, '', 0, 0, '2025-01-22 23:24:37', 2),
(172, 6, 'Generiranje ocjena u slogovima', 'Kreirajte slog (strukturu) u kojoj će se nalaziti polje od 50 elemenata i cjelobrojna varijabla \"izvrstan\". Kreirajte strukturnu varijablu te u polje generirajte 50 nasumičnih brojeva u rasponu od 1 do 5 (ocjena). Izračunajte i u cjelobrojnu varijablu upišite koliko u polju ima ocjena 5. Ispišite sve ocjene iz polja u jednom retku, odvojeno razmakom te nakon toga u dućem retku ispišite vrijednost varijable \"izvrstan\". Preuzeto s prog demos.', 'Ocjene generirane i spremljene u slogovima.', 'Ispis ocjena iz polja te broj ocjena 5.', '', 'Zadatak uključuje generiranje podataka u strukturi i manipulaciju poljima kroz brojanje specifičnih vrijednosti.', 3, '', 0, 0, '2025-01-22 23:24:37', 3),
(173, 6, 'Zapisivanje i analiza tekstualnih podataka', 'Kreirajte slog (strukturu) u kojoj će se nalaziti dva znakovna niza. Kreirajte polje od 5 elemenata čiji će elementi biti tipa kreirane strukture. Omogućite korisniku unos 5 zapisa u polje na način da u oba znakovna polja upisujete ime i prezime. Nakon svih unosa, kod svakog zapisa odredite koje ime i prezime ima manje znakova te za svaki zapis u polju ispišite ono ime i prezime koje ima manje znakova. Preuzeto s prog demos.', 'Znakovni nizovi (ime i prezime) uneseni u slog.', 'Ispis znakovnog niza koji ima manje znakova za svaki zapis.', '', 'Zadatak demonstrira rad sa znakovnim nizovima unutar strukture i njihovu usporedbu na temelju duljine.', 3, '', 0, 0, '2025-01-22 23:24:37', 4),
(174, 6, 'Analiza podataka o studentima', 'Kreirajte slog (strukturu) u kojoj će se nalaziti podaci o studentima: ime, prezime, godina studija te prosjek ocjena. Kreirajte polje od 10 elemenata čiji su elementi tipa kreirane strukture te omogućite unos podataka o studentima u polje. Upitajte korisnika da odabere željenu godinu studija. Ispišite sve podatke o studentima odabrane godine studija, uzlazno sortirano prema prosječnoj ocjeni. Preuzeto s prog demos.', 'Podaci o studentima (ime, prezime, godina studija, prosjek).', 'Ispis podataka o studentima odabrane godine, sortirano po prosjeku ocjena.', '', 'Zadatak omogućuje unos podataka o studentima i njihovu filtraciju i sortiranje na temelju korisničkog upita.', 3, '', 0, 0, '2025-01-22 23:24:37', 5),
(175, 6, 'Kopiranje vrijednosti između slogova', 'Kreirajte slog u kojem ćete deklarirati jednu cjelobrojnu i jednu decimalnu varijablu. Kreirajte varijablu tipa kreiranog sloga te omogućite korisniku unos vrijednosti u nju. Nakon toga te podatke kopirajte u drugu varijablu tipa kreiranog sloga te nakon kopiranja ispišite iz nje upisane vrijednosti. Preuzeto s prog demos.', 'Cjelobrojna i decimalna vrijednost unesene u slog.', 'Ispis vrijednosti kopiranih iz prve varijable u drugu.', '', 'Zadatak uključuje manipulaciju podacima unutar slogova kroz kopiranje između varijabli različitih tipova.', 3, '', 0, 0, '2025-01-22 23:30:52', 1),
(176, 6, 'Rad s anonimnom unijom', 'Kreirajte anonimnu uniju s dva člana: jedan za unos jedne logičke vrijednosti (logika), a jedan za unos decimalne vrijednosti (broj). Članu \"logika\" dodijelite vrijednost istine te ispišite vrijednost ovog člana. Zatim članu \"broj\" dodijelite vrijednost 3.71 te ispišite vrijednost ovog člana. Preuzeto s prog demos.', 'Logička i decimalna vrijednost unesene u anonimnu uniju.', 'Ispis vrijednosti oba člana unije nakon manipulacije.', '', 'Zadatak prikazuje kako koristiti anonimnu uniju za manipulaciju podacima različitih tipova i ispis rezultata.', 3, '', 0, 0, '2025-01-22 23:30:52', 2),
(177, 6, 'Analiza vrijednosti u slogovima', 'Kreirajte slog (strukturu) u kojoj će se nalaziti polje od 10 elemenata i jedna cjelobrojna varijabla \"sredina\". Kreirajte strukturnu varijablu te u polje generirajte nasumične brojeve u rasponu od 1 do 20. Omogućite korisniku unos vrijednosti u varijablu sredina. Iz polja ispisujte sve vrijednosti koje su manje od vrijednosti u varijabli sredina, te nakon toga ispišite sve vrijednosti iz polja koje su veće ili jednake od vrijednosti u varijabli sredina. Preuzeto s prog demos.', 'Nasumične vrijednosti u polju i cjelobrojna vrijednost sredina.', 'Ispis vrijednosti iz polja u odnosu na varijablu sredina.', '', 'Zadatak koristi strukturu za pohranu polja i jedne varijable, te omogućuje filtraciju elemenata u odnosu na zadanu vrijednost.', 3, '', 0, 0, '2025-01-22 23:30:52', 3),
(178, 6, 'Rad sa znakovnim nizovima i analizom', 'Kreirajte slog (strukturu) u kojoj će se nalaziti znakovni niz od 10 elemenata i jedna cjelobrojna varijabla. Kreirajte polje od 10 elemenata čiji će elementi biti tipa kreirane strukture. Unesite 10 zapisa u polje na način da u polje generirate nasumična mala slova engleske abecede, a u cjelobrojnu varijablu upišite koliko u generiranom nizu znakova ima samoglasnika. Ispišite sve zapise iz polja (znakovne nizove i broj samoglasnika u svakom nizu). Na kraju ispišite indeks onog znakovnog niza koji ima najviše znakova. Preuzeto s prog demos.', 'Znakovni nizovi i brojanje samoglasnika u slogovima.', 'Ispis svih nizova i broja samoglasnika te indeks niza s najviše znakova.', '', 'Zadatak uključuje rad sa znakovnim nizovima unutar strukture te analizu njihovih elemenata prema zadanim uvjetima.', 3, '', 0, 0, '2025-01-22 23:30:52', 4),
(179, 6, 'Analiza podataka o knjigama', 'Kreirajte slog (strukturu) za unos podataka o knjizi: naziv knjige, ime autora, žanr i godina izdanja. Kreirajte polje od 10 elemenata čiji su elementi tipa kreirane strukture. Omogućite korisniku unos 10 zapisa u kreirano polje o knjigama. Nakon toga ispišite sve knjige određenog žanra (korisnik treba upisati koji žanr želi ispisati) u uzlaznom redoslijedu prema godini izdanja knjiga. Preuzeto s prog demos.', 'Podaci o knjigama (naziv, autor, žanr, godina izdanja).', 'Ispis knjiga odabranog žanra sortiranih po godini izdanja.', '', 'Zadatak koristi slogove za pohranu podataka o knjigama i omogućuje filtraciju i sortiranje na temelju korisničkog upita.', 3, '', 0, 0, '2025-01-22 23:30:52', 5),
(180, 6, 'Pronalazak maksimalne vrijednosti u slogovima', 'Kreirajte slog koji sadrži polje od 10 cijelih brojeva i jednu cjelobrojnu varijablu \"maksimum\". Omogućite korisniku unos 10 brojeva u polje, a zatim pronađite i pohranite najveći broj u varijablu \"maksimum\". Na kraju ispišite sve brojeve iz polja i vrijednost varijable \"maksimum\".', 'Polje od 10 cijelih brojeva uneseno od strane korisnika.', 'Ispis svih brojeva iz polja i maksimalne vrijednosti.', '', 'Zadatak uključuje rad sa slogovima za pohranu polja i jedne varijable te pronalaženje maksimalne vrijednosti u skupu podataka.', 3, '', 0, 0, '2025-01-22 23:31:40', 3),
(181, 6, 'Zbrajanje elemenata unutar slogova', 'Kreirajte slog koji sadrži polje od 15 elemenata tipa float i jednu varijablu tipa float \"zbroj\". Generirajte nasumične decimalne vrijednosti u polju u rasponu od 0.1 do 10.0, a zatim izračunajte ukupni zbroj elemenata i pohranite ga u varijablu \"zbroj\". Na kraju ispišite sve elemente iz polja i ukupni zbroj.', 'Polje od 15 decimalnih vrijednosti generirano nasumično.', 'Ispis svih vrijednosti iz polja i ukupnog zbroja.', '', 'Zadatak demonstrira kako koristiti slogove za pohranu podataka tipa float i rad s poljem za izračunavanje ukupnih vrijednosti.', 3, '', 0, 0, '2025-01-22 23:31:40', 4),
(182, 6, 'Kreiranje tablice proizvoda', 'Kreirajte slog koji će sadržavati podatke o proizvodu: naziv, količinu i cijenu. Kreirajte polje od 5 elemenata čiji su elementi tipa slog te omogućite korisniku unos tih podataka. Nakon unosa, ispišite sve proizvode sortirane uzlazno prema cijeni.', 'Podaci o proizvodima (naziv, količina, cijena) uneseni od strane korisnika.', 'Ispis proizvoda sortiranih prema cijeni.', '', 'Zadatak koristi slogove za pohranu podataka o proizvodima i omogućuje sortiranje prema zadanoj vrijednosti.', 3, '', 0, 0, '2025-01-22 23:31:40', 4),
(183, 6, 'Filtriranje zaposlenika po godinama iskustva', 'Kreirajte slog koji sadrži podatke o zaposleniku: ime, prezime, godine iskustva i poziciju. Kreirajte polje od 8 elemenata čiji su elementi tipa slog. Omogućite korisniku unos podataka o zaposlenicima. Nakon unosa, korisnik unosi minimalan broj godina iskustva. Ispišite podatke o svim zaposlenicima koji zadovoljavaju taj kriterij.', 'Podaci o zaposlenicima (ime, prezime, godine iskustva, pozicija).', 'Ispis zaposlenika koji imaju više godina iskustva od unesenog minimuma.', '', 'Zadatak koristi slogove za pohranu podataka o zaposlenicima i omogućuje filtriranje prema korisnički definiranom kriteriju.', 3, '', 0, 0, '2025-01-22 23:31:40', 5),
(184, 6, 'Kopiranje vrijednosti u slog', 'Kreirati slog u kojem se deklarira: jedna cjelobrojna i jedna decimalna varijabla. Kreirati varijablu tipa kreiranog sloga te omogućiti korisniku unos vrijednosti u slog. Nakon toga, podatke kopirati u drugu varijablu tipa kreiranog sloga i ispisati nepromijenjene vrijednosti.', 'Cjelobrojna i decimalna vrijednost unesena od strane korisnika.', 'Ispis vrijednosti iz kopirane varijable.', '#include <iostream>\nusing namespace std;\n\nstruct Podaci {\n    int cijeliBroj;\n    float decimalniBroj;\n};\n\nint main() {\n    Podaci var1, var2;\n\n    cout << \"Unesite cjelobrojnu vrijednost: \";\n    cin >> var1.cijeliBroj;\n    cout << \"Unesite decimalnu vrijednost: \";\n    cin >> var1.decimalniBroj;\n\n    var2 = var1;\n\n    cout << \"\\nPodaci u varijabli 2:\\n\";\n    cout << \"Cjelobrojna vrijednost: \" << var2.cijeliBroj << endl;\n    cout << \"Decimalna vrijednost: \" << var2.decimalniBroj << endl;\n\n    return 0;\n}', 'Zadatak demonstrira manipulaciju vrijednostima unutar slogova i kopiranje podataka.', 3, '', 0, 0, '2025-01-22 23:38:50', 1),
(185, 6, 'Rad s anonimnom unijom', 'Kreirajte anonimnu uniju s dva člana: jedan za unos jedne logičke vrijednosti (logika), a jedan za unos decimalne vrijednosti (broj). Postavite vrijednosti i ispišite ih.', 'Logička i decimalna vrijednost unesena u anonimnu uniju.', 'Ispis vrijednosti oba člana unije.', '#include <iostream>\nusing namespace std;\n\nunion AnonimnaUnija {\n    bool logika;\n    float broj;\n};\n\nint main() {\n    AnonimnaUnija unija;\n\n    unija.logika = true;\n    cout << \"Vrijednost logike: \" << unija.logika << endl;\n\n    unija.broj = 3.71;\n    cout << \"Vrijednost broja: \" << unija.broj << endl;\n\n    return 0;\n}', 'Zadatak demonstrira kako unija pohranjuje različite tipove podataka na istom memorijskom prostoru.', 3, '', 0, 0, '2025-01-22 23:38:50', 2),
(186, 6, 'Računanje srednje vrijednosti', 'Kreirajte slog s nizom od 10 elemenata i cjelobrojnom varijablom \"sredina\". Omogućite unos 10 vrijednosti u niz i varijablu \"sredina\". Ispišite sve vrijednosti koje su veće od \"sredina\".', 'Niz od 10 cijelih brojeva i varijabla \"sredina\".', 'Ispis svih vrijednosti većih od \"sredina\".', '#include <iostream>\nusing namespace std;\n\nstruct Podaci {\n    int niz[10];\n    int sredina;\n};\n\nint main() {\n    Podaci podaci;\n\n    cout << \"Unesite 10 cijelih brojeva:\\n\";\n    for (int i = 0; i < 10; i++) {\n        cin >> podaci.niz[i];\n    }\n\n    cout << \"Unesite vrijednost za varijablu sredina: \";\n    cin >> podaci.sredina;\n\n    for (int i = 0; i < 10; i++) {\n        if (podaci.niz[i] > podaci.sredina) {\n            cout << \"Vrijednost \" << podaci.niz[i] << \" je veća od sredine.\\n\";\n        }\n    }\n\n    return 0;\n}', 'Zadatak koristi slog za pohranu niza i varijable te omogućuje filtraciju vrijednosti prema kriteriju.', 3, '', 0, 0, '2025-01-22 23:38:50', 3),
(187, 6, 'Analiza znakova u nizovima', 'Kreirajte slog s nizom od 10 elemenata i cjelobrojnom varijablom. Generirajte nizove od slučajnih slova te brojite samoglasnike. Pronađite niz s najviše samoglasnika.', 'Nizovi znakova generirani nasumično.', 'Ispis svih nizova i broja samoglasnika. Indeks niza s najviše samoglasnika.', '#include <iostream>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n\nstruct Podaci {\n    char niz[10];\n    int brojSamoglasnika;\n};\n\nbool jeSamoglasnik(char c) {\n    return c == \'a\' || c == \'e\' || c == \'i\' || c == \'o\' || c == \'u\';\n}\n\nint main() {\n    srand(time(0));  \n    Podaci polje[10];\n\n    for (int i = 0; i < 10; i++) {\n        int brojSamoglasnika = 0;\n        for (int j = 0; j < 10; j++) {\n            char slovo = \'a\' + rand() % 26;\n            polje[i].niz[j] = slovo;\n            if (jeSamoglasnik(slovo)) {\n                brojSamoglasnika++;\n            }\n        }\n        polje[i].brojSamoglasnika = brojSamoglasnika;\n    }\n\n    cout << \"Zapisi u polju:\\n\";\n    for (int i = 0; i < 10; i++) {\n        cout << \"Niz \" << i + 1 << \": \";\n        for (int j = 0; j < 10; j++) {\n            cout << polje[i].niz[j];\n        }\n        cout << \" - Broj samoglasnika: \" << polje[i].brojSamoglasnika << endl;\n    }\n\n    int maxSamoglasnika = 0;\n    int indeksMax = 0;\n    for (int i = 0; i < 10; i++) {\n        if (polje[i].brojSamoglasnika > maxSamoglasnika) {\n            maxSamoglasnika = polje[i].brojSamoglasnika;\n            indeksMax = i;\n        }\n    }\n\n    cout << \"\\nNiz s najviše samoglasnika:\\n\";\n    cout << \"Indeks: \" << indeksMax + 1 << \", Broj samoglasnika: \" << maxSamoglasnika << endl;\n    cout << \"Niz: \";\n    for (int j = 0; j < 10; j++) {\n        cout << polje[indeksMax].niz[j];\n    }\n    cout << endl;\n    return 0;\n}', 'Zadatak koristi slog za generiranje nizova i brojenje samoglasnika. Demonstrira rad sa znakovima i nasumičnim generiranjem.', 3, '', 0, 0, '2025-01-22 23:38:50', 4),
(188, 6, 'Analiza podataka o knjigama', 'Kreirajte slog (strukturu) za unos podataka o knjizi: naziv knjige, ime autora, žanr i godina izdanja. Kreirajte polje od 10 elemenata čiji su elementi tipa kreirane strukture. Omogućite korisniku unos 10 zapisa u kreirano polje o knjigama. Nakon toga ispišite sve knjige određenog žanra (korisnik treba upisati koji žanr želi ispisati) u uzlaznom redoslijedu prema godini izdanja knjiga.', 'Podaci o knjigama (naziv, autor, žanr, godina izdanja) uneseni od strane korisnika.', 'Ispis knjiga određenog žanra sortiranih po godini izdanja.', '#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\n\nstruct Knjiga {\n    string naziv;\n    string autor;\n    string zanr;\n    int godinaIzdavanja;\n};\n\nbool compare(const Knjiga &a, const Knjiga &b) {\n    return a.godinaIzdavanja < b.godinaIzdavanja;\n}\n\nint main() {\n    Knjiga knjige[10];\n\n    cout << \"Unesite podatke za 10 knjiga:\\n\";\n    for (int i = 0; i < 10; i++) {\n        cout << \"Naziv knjige: \";\n        cin >> knjige[i].naziv;\n        cout << \"Autor knjige: \";\n        cin >> knjige[i].autor;\n        cout << \"Žanr knjige: \";\n        cin >> knjige[i].zanr;\n        cout << \"Godina izdanja knjige: \";\n        cin >> knjige[i].godinaIzdavanja;\n    }\n\n    string trazeniZanr;\n    cout << \"\\nUnesite traženi žanr: \";\n    cin >> trazeniZanr;\n\n    sort(knjige, knjige + 10, compare);\n\n    cout << \"\\nKnjige u žanru \'\" << trazeniZanr << \"\' sortirane po godini izdanja:\\n\";\n    for (int i = 0; i < 10; i++) {\n        if (knjige[i].zanr == trazeniZanr) {\n            cout << knjige[i].naziv << \" - \" << knjige[i].autor << \" (\" << knjige[i].godinaIzdavanja << \")\\n\";\n        }\n    }\n\n    return 0;\n}', 'Zadatak koristi slog za pohranu podataka o knjigama i omogućuje filtraciju i sortiranje na temelju korisničkog unosa.', 3, '', 0, 0, '2025-01-22 23:38:50', 5),
(189, 7, 'PD Dinamička alokacija i sortiranje brojeva', 'Unijeti prirodni broj N i zatim N brojeva. Brojeve spremiti u dinamički alocirano polje i sortirati. Preuzeto s Program Demos (PD).', 'N brojeva uneseno od strane korisnika.', 'Ispis brojeva sortiranih uzlazno.', '#include<iostream>\n\nusing namespace std;\n\nint main(){\n	int N;\n	do {\n		cout << \"Unesite broj brojeva: \";\n		cin >> N;\n	} while (N < 1);\n	\n	int *polje = new int [N];\n	\n	for (int i = 0; i < N; i++){\n		cout << \"Unesite \" << i+1 << \". element: \";\n		cin >> polje[i];\n	}\n	\n	bool zamjena = true;\n	for (int i = N-1; zamjena && i > 0; i--){\n		zamjena = false;\n		for (int c = 0; c < i; c++){\n			if (polje[c] > polje[c+1]) {\n				int pom = polje[c];\n				polje[c] = polje[c+1];\n				polje[c+1] = pom;\n				zamjena = true;\n			}\n		}\n	}\n	\n	for (int i = 0; i < N; i++)\n		cout << polje[i] << endl;\n	\n	delete [] polje;\n	\n	cout << endl;\n	system(\"pause\");\n	return 0;\n}', 'Demonstrira rad s dinamički alociranim poljima i algoritmima sortiranja.', 1, '', 0, 0, '2025-01-22 23:42:34', 2),
(190, 7, 'PD Sortiranje dinamički alociranih riječi', 'Unijeti prirodni broj N i N riječi od maksimalno 19 znakova. Riječi spremiti u dinamički alocirano polje i sortirati. Preuzeto s Program Demos (PD).', 'N riječi uneseno od strane korisnika.', 'Ispis riječi sortiranih po abecedi.', '#include<iostream>\n#include<cstring>\n\nusing namespace std;\n\nint main(){\n	int N;\n	do {\n		cout << \"Unesite broj rijeci: \";\n		cin >> N;\n	} while (N < 1);\n	cin.ignore();\n	\n	char (*polje)[20] = new char[N][20];\n	\n	for (int i = 0; i < N; i++){\n		cout << \"Unesite \" << i+1 << \". rijec: \";\n		cin.getline(polje[i], 20);\n	}\n	\n	for (int i = N-1; i > 0; i--){\n		int Max = 0;\n		for (int c = 1; c <= i; c++)\n			if (strcmp(polje[Max], polje[c]) == 1) Max = c;\n			\n		if (i != Max){\n			char pom[20] = {0};\n			strcpy(pom, polje[i]);\n			strcpy(polje[i], polje[Max]);\n			strcpy(polje[Max], pom);\n		}\n	}\n	\n	cout << \"_______________________\" << endl;\n	for (int i = 0; i<N; i++){\n		cout << polje[i] << endl;\n	}\n	\n	delete [] polje;\n	cout << endl;\n	system(\"pause\");\n	return 0;\n}', 'Demonstrira dinamičku alokaciju memorije i rad s nizovima znakova.', 1, '', 0, 0, '2025-01-22 23:43:54', 3),
(191, 7, 'PD Sortiranje parnih i neparnih brojeva', 'Unos brojeva završava nulom. Unosi se niz brojeva koji se dijele na parne i neparne te spremaju u vezane liste. Oba niza se sortiraju. Preuzeto s Program Demos (PD).', 'Niz prirodnih brojeva.', 'Ispis sortiranih parnih i neparnih brojeva iz vezanih lista.', '#include<iostream>\n#include<cstdlib>\n\nusing namespace std;\n\nstruct element{\n	int vrijednost;\n	element *sljedeci;\n};\n\ntypedef element *lista;\n\nint main(){\n	lista PARNI = new element;\n	lista NEPARNI = new element;\n	PARNI->sljedeci = NULL;\n	NEPARNI->sljedeci = NULL;\n	\n	do {\n		int unos;\n		cin >> unos;\n		if (!unos) break;\n		if (unos % 2 == 0){\n			lista el = PARNI;\n			while (el->sljedeci != NULL && el->sljedeci->vrijednost < unos)\n				el = el->sljedeci;\n			lista novi = new element;\n			novi->vrijednost = unos;\n			novi->sljedeci = el->sljedeci;\n			el->sljedeci = novi;\n		} else {\n			lista el = NEPARNI;\n			while (el->sljedeci != NULL && el->sljedeci->vrijednost < unos)\n				el = el->sljedeci;\n			lista novi = new element;\n			novi->vrijednost = unos;\n			novi->sljedeci = el->sljedeci;\n			el->sljedeci = novi;\n		}\n	} while (true);\n	\n	cout << \"Parni brojevi:\" << endl;\n	while (PARNI->sljedeci != NULL){\n		lista za_brisanje = PARNI;\n		cout << PARNI->sljedeci->vrijednost << endl;\n		PARNI = PARNI->sljedeci;\n		delete za_brisanje;\n	}\n	\n	cout << \"Neparni brojevi:\" << endl;\n	while (NEPARNI->sljedeci != NULL){\n		lista za_brisanje = NEPARNI;\n		cout << NEPARNI->sljedeci->vrijednost << endl;\n		NEPARNI = NEPARNI->sljedeci;\n		delete za_brisanje;\n	}\n	\n	system(\"pause\");\n	return 0;\n}', 'Demonstrira upotrebu vezanih lista za pohranu podataka i njihovo sortiranje.', 1, '', 0, 0, '2025-01-22 23:43:54', 4),
(192, 7, 'PD Sortiranje unosa u vezanoj listi', 'Unos brojeva završava nulom. Tijekom unosa brojevi se dinamički dodaju u vezanu listu i sortiraju. Preuzeto s Program Demos (PD).', 'Niz brojeva unesen od strane korisnika.', 'Ispis sortiranih brojeva iz vezane liste.', '#include<iostream>\nusing namespace std;\n\nstruct element{\n	int vrijednost;\n	element *sljedeci;\n};\n\ntypedef element *lista;\n\nint main(){\n	lista glava = new element;\n	glava->sljedeci = NULL;\n	\n	do {\n		int unos;\n		cin >> unos;\n		if (!unos) break;\n		\n		lista trenutni = glava;\n		while (trenutni->sljedeci != NULL && trenutni->sljedeci->vrijednost < unos)\n			trenutni = trenutni->sljedeci;\n		\n		lista novi = new element;\n		novi->vrijednost = unos;\n		novi->sljedeci = trenutni->sljedeci;\n		trenutni->sljedeci = novi;\n	} while (true);\n	\n	cout << \"Sortirani brojevi:\" << endl;\n	while (glava->sljedeci != NULL){\n		lista za_brisanje = glava;\n		cout << glava->sljedeci->vrijednost << \" \";\n		glava = glava->sljedeci;\n		delete za_brisanje;\n	}\n	\n	delete glava;\n	cout << endl;\n	system(\"pause\");\n	return 0;\n}', 'Demonstrira dinamičko dodavanje elemenata u vezanu listu i njihovo sortiranje.', 1, '', 0, 0, '2025-01-22 23:44:03', 4),
(193, 7, 'PD Grupiranje prema ostacima pri dijeljenju', 'Unos brojeva završava nulom. Brojevi se razvrstavaju u tri vezane liste prema ostacima pri dijeljenju s 3. Preuzeto s Program Demos (PD).', 'Niz prirodnih brojeva unesen od strane korisnika.', 'Ispis tri liste brojeva grupiranih prema ostacima pri dijeljenju s 3.', '#include<iostream>\nusing namespace std;\n\nstruct element{\n	int vrijednost;\n	element *sljedeci;\n};\n\ntypedef element *lista;\n\nvoid dodajUListu(lista &glava, int unos) {\n	lista trenutni = glava;\n	while (trenutni->sljedeci != NULL && trenutni->sljedeci->vrijednost < unos)\n		trenutni = trenutni->sljedeci;\n	\n	lista novi = new element;\n	novi->vrijednost = unos;\n	novi->sljedeci = trenutni->sljedeci;\n	trenutni->sljedeci = novi;\n}\n\nvoid ispisiIObrisiListu(lista &glava) {\n	while (glava->sljedeci != NULL) {\n		lista za_brisanje = glava;\n		cout << glava->sljedeci->vrijednost << \" \";\n		glava = glava->sljedeci;\n		delete za_brisanje;\n	}\n	delete glava;\n}\n\nint main(){\n	lista Ostatak0 = new element;\n	lista Ostatak1 = new element;\n	lista Ostatak2 = new element;\n	Ostatak0->sljedeci = NULL;\n	Ostatak1->sljedeci = NULL;\n	Ostatak2->sljedeci = NULL;\n	\n	do {\n		int unos;\n		cin >> unos;\n		if (!unos) break;\n		\n		if (unos % 3 == 0) dodajUListu(Ostatak0, unos);\n		else if (unos % 3 == 1) dodajUListu(Ostatak1, unos);\n		else dodajUListu(Ostatak2, unos);\n	} while (true);\n	\n	cout << \"Ostatak 0:\" << endl;\n	ispisiIObrisiListu(Ostatak0);\n	cout << \"\\nOstatak 1:\" << endl;\n	ispisiIObrisiListu(Ostatak1);\n	cout << \"\\nOstatak 2:\" << endl;\n	ispisiIObrisiListu(Ostatak2);\n	\n	cout << endl;\n	system(\"pause\");\n	return 0;\n}', 'Koristi vezane liste za grupiranje brojeva prema ostacima pri dijeljenju.', 1, '', 0, 0, '2025-01-22 23:44:03', 5),
(194, 7, 'PD Hash tablica s 5 pretinaca', ' Prirodni broj N i N random brojeva koji se pohranjuju u hash tablicu s 5 pretinaca. Brojevi iz pretinca kojeg korisnik odabere. Preuzeto s prog demos.', 'Prirodni broj N i N random brojeva.', 'Brojevi iz pretinca kojeg korisnik odabere.', '#include<iostream>\n#include<ctime>\n#include<cstdlib>\n\nusing namespace std;\n\nstruct element {\n    int vrijednost;\n    element *sljedeci;\n};\n\ntypedef element *pretinac;\ntypedef pretinac hash[5];\n\nint main () {\n    hash hash_tablica;\n    for (int i = 0; i < 5; i++) hash_tablica[i] = NULL;\n\n    srand(time(0));\n    rand();\n\n    int N;\n    do {\n        cout << \"Koliko random brojeva generirati? \";\n        cin >> N;\n    } while (N < 1);\n\n    int random_broj;\n    element *unos;\n    for (int i = 0; i < N; i++) {\n        random_broj = rand();\n        unos = new element;\n        unos->vrijednost = random_broj;\n        unos->sljedeci = hash_tablica[random_broj%5];\n        hash_tablica[random_broj%5] = unos;\n    }   \n\n    int i;\n    do {\n        cout << \"Unesite broj pretinca (1-5): \";\n        cin >> i;\n    } while (i < 1 || i > 5);\n    i--;\n\n    element *pretinac_ispis = hash_tablica[i];\n    cout << \"Pretinac: \" << i+1 << \": \";\n    while (pretinac_ispis) {\n        cout << pretinac_ispis->vrijednost << \" \";\n        pretinac_ispis = pretinac_ispis->sljedeci;\n    }\n\n    cout << endl;\n    system(\"pause\");\n    return 0;\n}', 'Demonstrira rad s hash tablicama i dohvat podataka prema hash funkciji.', 1, '', 0, 0, '2025-01-22 23:45:23', 3),
(195, 7, 'PD Hash tablica s najviše riječi', ' Prirodni broj N i N riječi koje se pohranjuju u hash tablicu s 5 pretinaca. Riječi iz pretinca u kojemu ih ima najviše. Preuzeto s prog demos.', 'Prirodni broj N i N riječi.', 'Riječi iz pretinca u kojemu ih ima najviše.', '#include<iostream>\n#include<cstring>\n#include<cstdlib>\n\nusing namespace std;\n\nstruct element {\n    char rijec[20];\n    element *sljedeci;\n};\n\ntypedef element *pretinac;\ntypedef pretinac hash[5];\n\nint main() {\n    hash hash_tablica;\n    for (int i = 0; i < 5; i++) hash_tablica[i] = NULL;\n\n    int N;\n    do {\n        cout << \"Unesite broj rijeci: \";\n        cin >> N;\n    } while (N < 1);\n\n    int brojac_rijeci_u_pretincu[5] = {0};\n\n    element *unos;\n    for (int i = 0; i < N; i++) {\n        unos = new element;\n        cout << \"Unesite \" << i+1 << \". rijec: \";\n        cin >> unos->rijec;\n\n        int ASCII_zbroj = 0;    \n        for (int i = 0; i < strlen(unos->rijec); i++) ASCII_zbroj += unos->rijec[i];\n\n        int indeks = ASCII_zbroj%5;\n        unos->sljedeci = hash_tablica[indeks];\n        hash_tablica[indeks] = unos;\n        brojac_rijeci_u_pretincu[indeks]++;\n    }\n\n    int indeks_najvise_rijeci = 0;\n    for (int i = 0; i < 5; i++) \n        if (brojac_rijeci_u_pretincu[i] > brojac_rijeci_u_pretincu[indeks_najvise_rijeci])\n            indeks_najvise_rijeci = i;\n\n    cout << \"Najviše riječi u pretincu #\" << indeks_najvise_rijeci+1 << \":\";\n    while (hash_tablica[indeks_najvise_rijeci] != NULL) {\n        cout << \" -> \" << hash_tablica[indeks_najvise_rijeci]->rijec;\n        hash_tablica[indeks_najvise_rijeci] = hash_tablica[indeks_najvise_rijeci]->sljedeci;\n    }\n\n    cout << endl;\n    system(\"pause\");\n    return 0;\n}', 'Demonstrira rad s hash tablicama i analizu pretinaca s najvećim brojem elemenata.', 1, '', 0, 0, '2025-01-22 23:45:37', 3),
(196, 7, 'PD Minimalna i maksimalna vrijednost u hash tablici', ' Prirodni broj N. Program generira N random brojeva i upisuje ih u 10 pretinaca hash tablice. Za svaki pretinac ispisati minimalni i maksimalni element u njemu. Preuzeto s prog demos.', 'Prirodni broj N i generirani random brojevi.', 'Minimalna i maksimalna vrijednost u svakom pretincu hash tablice.', '#include<iostream>\n#include<cstdlib>\n#include<ctime>\n\nusing namespace std;\n\nstruct element {\n    int vrijednost;\n    element *sljedeci;\n};\n\ntypedef element *pretinac;\ntypedef pretinac hash[10];\n\nint main() {\n    hash hash_tablica;\n    for (int i = 0; i < 10; i++) hash_tablica[i] = NULL;\n\n    srand(time(0));\n\n    int N;\n    do {\n        cout << \"Koliko da generiram random brojeva? \";\n        cin >> N;\n    } while (N < 1);\n\n    element *unos;\n    int random_broj;\n    for (int i = 0; i < N; i++) {\n        random_broj = rand();\n        unos = new element;\n        unos->vrijednost = random_broj;\n        unos->sljedeci = hash_tablica[random_broj%10];\n        hash_tablica[random_broj%10] = unos;\n    }\n\n    for (int i = 0; i < 10; i++) {\n        int max = 0;\n        int min = -1;\n        element *pom = hash_tablica[i];\n        while (pom != NULL) {\n            if (pom->vrijednost > max) max = pom->vrijednost;\n            if (min == -1 || pom->vrijednost < min) min = pom->vrijednost;\n            pom = pom->sljedeci;\n        }\n        cout << \"Pretinac #\" << i << \": Min=\" << min << \", Max=\" << max << endl;\n    }\n\n    cout << endl;\n    system(\"pause\");\n    return 0;\n}', 'Analiza minimalnih i maksimalnih vrijednosti u hash tablici s 10 pretinaca.', 1, '', 0, 0, '2025-01-22 23:45:57', 4),
(197, 7, 'Dinamička alokacija i unos troznamenkastog broja', 'Dinamički alocirajte cjelobrojnu varijablu. Zatražite od korisnika da u nju upiše troznamenkasti broj. Ponavljajte unos sve dok korisnik ne unese ispravnu vrijednost. Ispišite zbroj znamenki upisanog troznamenkastog broja (npr. za broj 123 zbroj iznosi 1+2+3=6). Na kraju dealocirajte dinamički kreiranu varijablu.', 'Niz troznamenkastih brojeva unesenih od strane korisnika.', 'Zbroj znamenki troznamenkastog broja.', '', NULL, 3, '', 0, 0, '2025-01-22 23:50:16', 1),
(198, 7, 'Dinamička struktura za unos i provjeru slova', 'Kreirajte slog (strukturu) u kojoj definirate 2 znakovne vrijednosti. Dinamički alocirajte strukturnu varijablu. Omogućite korisniku unos malog slova engleske abecede u oba člana. Ponavljajte unos dok korisnik ne napravi ispravan unos. Ispišite koliko se u engleskoj abecedi nalazi slova između prvog i drugog znaka (npr. između slova a i c se nalaze 2 slova). Na kraju dealocirajte dinamički kreiranu varijablu.', 'Unos dva znaka engleske abecede.', 'Broj znakova između dva unesena znaka.', '', NULL, 3, '', 0, 0, '2025-01-22 23:50:16', 2),
(199, 7, 'Generiranje i ispis polja znakova', 'Omogućite korisniku unos vrijednosti veličine polja. Dinamički alocirajte polje znakova na temelju upisane vrijednosti veličine polja. U prvu polovicu polja generirajte mala slova engleske abecede, a u drugu polovicu polja generirajte velika slova engleske abecede. Ispišite cijelo polje u jednom retku, znakove jedan iza drugog bez razmaka. Na kraju dealocirajte kreirano polje.', 'Unesena veličina polja.', 'Ispis polja znakova generiranih iz abecede.', '', NULL, 3, '', 0, 0, '2025-01-22 23:50:16', 3),
(200, 7, 'Vezana lista za studente', 'Kreirajte slog (strukturu) sa sljedećim atributima: šifra studenta (primarni ključ), ime studenta i ocjena iz programiranja. Kreirajte vezanu listu koja će se sastojati od elemenata kreirane strukture. Implementirajte ponavljajući izbornik u kojem će opcija 1 biti unos jednog novog elementa na kraj vezane liste, a opcija 2 ispis svih elemenata iz vezane liste (ispis svih atributa za svaki element). Opcija 9 treba biti izlaz iz programa.', 'Unos podataka o studentima.', 'Ispis elemenata vezane liste sa svim podacima o studentima.', '', NULL, 3, '', 0, 0, '2025-01-22 23:50:16', 4),
(201, 7, 'Nadogradnja vezane liste', 'Nadogradite vezanu listu koju ste kreirali u prethodnom zadatku sa sljedećim funkcionalnostima: u ponavljajući izbornik dodajte opciju 3 kojom trebate implementirati mogućnost ispisa svih neparnih elemenata vezane liste. Također u izbornik dodajte opciju 4 u kojoj trebate implementirati mogućnost brisanja srednjeg elementa (npr. ako je u listi 5 elemenata, obrišite treći, a ako je 10 elemenata, obrišite peti) u vezanoj listi (ako je lista prazna, ispisati poruku da nije moguće izvršiti brisanje).', 'Nadogradnja vezane liste sa dodatnim opcijama.', 'Izbornik s dodatnim funkcionalnostima za rad s vezanom listom.', '', NULL, 3, '', 0, 0, '2025-01-22 23:50:16', 5),
(202, 7, 'AI Dinamička alokacija i provjera parnosti', 'Kreirajte dinamički alociranu varijablu u koju korisnik unosi cijeli broj. Provjerite je li uneseni broj paran ili neparan i ispišite odgovarajuću poruku. Na kraju dealocirajte dinamički kreiranu varijablu. Kreirano umjetnom inteligencijom.', 'Unos cijelog broja od strane korisnika.', 'Poruka koja označava je li broj paran ili neparan.', '', NULL, 1, '', 0, 0, '2025-01-22 23:51:44', 1),
(203, 7, 'AI Dinamička alokacija za niz riječi', 'Dinamički alocirajte polje riječi u kojem korisnik unosi N riječi. Neka korisnik odredi veličinu polja. Na kraju ispišite sve unesene riječi obrnutim redoslijedom. Dealocirajte kreirano polje. Kreirano umjetnom inteligencijom.', 'Unos broja riječi i samih riječi od strane korisnika.', 'Unesene riječi ispisane obrnutim redoslijedom.', '', NULL, 1, '', 0, 0, '2025-01-22 23:51:44', 2),
(204, 7, 'AI Generiranje niza nasumičnih brojeva', 'Dinamički alocirajte polje za N cijelih brojeva. Generirajte N nasumičnih brojeva između 1 i 100 i ispišite samo brojeve koji su djeljivi s 5. Na kraju dealocirajte polje. Kreirano umjetnom inteligencijom.', 'Generirani nasumični brojevi između 1 i 100.', 'Ispis brojeva djeljivih s 5.', '', NULL, 1, '', 0, 0, '2025-01-22 23:51:44', 3),
(205, 7, 'AI Upravljanje dinamičkom vezanom listom', 'Kreirajte dinamičku vezanu listu. Omogućite korisniku unos brojeva u listu na početak ili kraj, prema vlastitom odabiru. Nakon svakog unosa, ispišite sve elemente liste. Kreirano umjetnom inteligencijom.', 'Unos brojeva u vezanu listu.', 'Ispis trenutnog stanja liste nakon svakog unosa.', '', NULL, 1, '', 0, 0, '2025-01-22 23:51:44', 4),
(206, 7, 'AI Sortiranje parnih i neparnih brojeva', 'Dinamički alocirajte polje za N brojeva koje korisnik unosi. Sortirajte brojeve tako da su parni brojevi na početku, a neparni na kraju. Na kraju ispišite sortirani niz i dealocirajte polje. Kreirano umjetnom inteligencijom.', 'Unos brojeva od strane korisnika.', 'Ispis brojeva sortirano prema parnosti.', '', NULL, 1, '', 0, 0, '2025-01-22 23:51:44', 5),
(207, 7, 'Dinamička alokacija i unos troznamenkastog broja', 'Dinamički alocirajte cjelobrojnu varijablu. Zatražite od korisnika da u nju upiše troznamenkasti broj. Ponavljajte unos sve dok korisnik ne unese ispravnu vrijednost. Ispišite zbroj znamenki upisanog troznamenkastog broja (npr. za broj 123 zbroj iznosi 1+2+3=6). Na kraju dealocirajte dinamički kreiranu varijablu.', 'Unos troznamenkastog broja od strane korisnika.', 'Zbroj znamenki troznamenkastog broja.', '', NULL, 3, '', 0, 0, '2025-01-22 23:53:00', 1);
INSERT INTO `spcp_tasks` (`id`, `lesson_id`, `title`, `description`, `input`, `output`, `solution`, `explanation`, `visibility`, `public_id`, `solution_status`, `has_input`, `created_at`, `difficulty`) VALUES
(208, 7, 'Dinamička alokacija i provjera slova', 'Kreirajte slog (strukturu) u kojoj definirate 2 znakovne vrijednosti. Dinamički alocirajte strukturnu varijablu. Omogućite korisniku unos malog slova engleske abecede u oba člana. Ponavljajte unos dok korisnik ne napravi ispravan unos. Ispišite koliko se u engleskoj abecedi nalazi slova između prvog i drugog znaka (npr. između slova a i d se nalaze 2 slova). Na kraju dealocirajte dinamički kreiranu varijablu.', 'Unos dva znaka engleske abecede.', 'Broj znakova između dva unesena znaka.', '', NULL, 3, '', 0, 0, '2025-01-22 23:53:00', 2),
(209, 7, 'Generiranje brojeva u polju prema indeksima', 'Omogućite korisniku unos vrijednosti veličine polja. Dinamički alocirajte cjelobrojno polje na temelju upisane vrijednosti veličine polja. U polje na neparnim indeksima generirajte brojeve u rasponu od 20 do 50, a u polje na parnim indeksima generirajte brojeve u rasponu od -20 do -50. Ispišite cijelo polje u jednom retku, brojevi odvojeni razmakom. Na kraju dealocirajte kreirano polje.', 'Unos veličine polja od strane korisnika.', 'Ispis polja brojeva prema definiranim indeksima.', '', NULL, 3, '', 0, 0, '2025-01-22 23:53:00', 3),
(210, 7, 'Vezana lista za korisnike', 'Kreirajte slog (strukturu) sa sljedećim atributima: šifra korisnika (primarni ključ), ime korisnika i email adresa korisnika. Kreirajte vezanu listu koja će se sastojati od elemenata kreirane strukture. Implementirajte ponavljajući izbornik u kojem će opcija 1 biti unos jednog novog elementa na kraj vezane liste, a opcija 2 ispis svih elemenata iz vezane liste (ispis svih atributa za svaki element). Opcija 9 treba biti izlaz iz programa.', 'Unos podataka o korisnicima.', 'Ispis elemenata vezane liste sa svim podacima o korisnicima.', '', NULL, 3, '', 0, 0, '2025-01-22 23:53:00', 4),
(211, 7, 'Nadogradnja vezane liste', 'Nadogradite vezanu listu koju ste kreirali u prethodnom zadatku sa sljedećim funkcionalnostima: u ponavljajući izbornik dodajte opciju 3 kojom trebate implementirati mogućnost ispisa svih neparnih elemenata vezane liste. Također u izbornik dodajte opciju 4 u kojoj trebate implementirati mogućnost brisanja srednjeg elementa (npr. ako je u listi 5 elemenata, obrišite treći, a ako je 10 elemenata, obrišite peti) u vezanoj listi (ako je lista prazna, ispisati poruku da nije moguće izvršiti brisanje).', 'Nadogradnja vezane liste sa dodatnim opcijama.', 'Izbornik s dodatnim funkcionalnostima za rad s vezanom listom.', '', NULL, 3, '', 0, 0, '2025-01-22 23:53:00', 5),
(212, 8, 'PD Funkcije – zadatak 1', 'Implementiraj funkciju broji_do(int) koja ispisuje brojeve od 1 do N. Preuzeto s prog demos.', 'Prirodni broj N.', 'Ispis brojeva od 1 do N, svaki broj u novom retku.', '#include <iostream>\nusing namespace std;\n\nvoid broji_do(int N) {\n    for (int i = 1; i <= N; i++) {\n        cout << i << endl;\n    }\n}\n\nint main() {\n    broji_do(5);\n    cout << endl;\n    system(\"pause\");\n    return 0;\n}', 'Funkcija koristi petlju koja iterira od 1 do N i ispisuje svaki broj u zasebnom retku.', 1, '', 0, 0, '2025-01-23 00:00:27', 1),
(213, 8, 'PD Funkcije – zadatak 2', 'Implementiraj funkciju koja prima broj riječi, zatim riječi duljine do 19 znakova i ispisuje ih velikim slovima. Preuzeto s prog demos.', 'Prirodni broj N manji od 20, N riječi po najviše 19 znakova.', 'Sve unesene riječi ispisane velikim slovima.', '#include <iostream>\n#include <cstring>\nusing namespace std;\n\nvoid to_uppercase(char word[]) {\n    for (int i = 0; word[i] != \'\\0\'; i++) {\n        word[i] = toupper(word[i]);\n    }\n    cout << word << endl;\n}\n\nint main() {\n    int N;\n    do {\n        cout << \"Unesite broj rijeci: \";\n        cin >> N;\n    } while (N < 1 || N >= 20);\n\n    char word[20][20];\n    for (int i = 0; i < N; i++) {\n        cout << \"Unesite \" << i + 1 << \". rijec: \";\n        cin >> word[i];\n        to_uppercase(word[i]);\n    }\n    system(\"pause\");\n    return 0;\n}', 'Funkcija koristi biblioteku <cstring> za manipulaciju stringovima i funkciju toupper za pretvaranje malih slova u velika.', 1, '', 0, 0, '2025-01-23 00:00:27', 2),
(214, 8, 'PD Funkcije – zadatak 3', 'Izračunaj najdulju dužinu na temelju unesenih koordinata rubnih točaka. Preuzeto s prog demos.', 'Prirodni broj N i 2*N koordinata (dvije po dužini).', 'Najdulja dužina i njezin indeks.', '#include <iostream>\n#include <cmath>\nusing namespace std;\n\nstruct Duzina {\n    float x1, y1, x2, y2;\n    float duljina() {\n        return sqrt(pow(x2 - x1, 2) + pow(y2 - y1, 2));\n    }\n};\n\nint main() {\n    int N;\n    cout << \"Unesite broj duzina: \";\n    cin >> N;\n\n    Duzina duzine[100];\n    float max_duljina = 0;\n    int max_index = 0;\n\n    for (int i = 0; i < N; i++) {\n        cout << i + 1 << \". duzina\" << endl;\n        cout << \"Unesite 1. tocku (x1, y1): \";\n        cin >> duzine[i].x1 >> duzine[i].y1;\n        cout << \"Unesite 2. tocku (x2, y2): \";\n        cin >> duzine[i].x2 >> duzine[i].y2;\n\n        float duljina = duzine[i].duljina();\n        if (duljina > max_duljina) {\n            max_duljina = duljina;\n            max_index = i;\n        }\n    }\n\n    cout << \"Najdulja duzina je \" << max_index + 1 << \". duzina (\" << max_duljina << \")\" << endl;\n    system(\"pause\");\n    return 0;\n}', 'Struktura Duzina omogućuje izračun duljine između točaka pomoću formule udaljenosti.', 1, '', 0, 0, '2025-01-23 00:00:27', 3),
(215, 8, 'PD Funkcije – zadatak 4', 'Ispiši slova čiji su ASCII kodovi prosti brojevi. Preuzeto s prog demos.', 'Unos 0 za mala slova, 1 za velika slova.', 'Slova s ASCII kodovima koji su prosti brojevi.', '#include <iostream>\n#include <cmath>\nusing namespace std;\n\nbool is_prime(int n) {\n    if (n < 2) return false;\n    for (int i = 2; i <= sqrt(n); i++) {\n        if (n % i == 0) return false;\n    }\n    return true;\n}\n\nvoid print_letters(int choice) {\n    char start = (choice == 0) ? \'a\' : \'A\';\n    char end = (choice == 0) ? \'z\' : \'Z\';\n\n    for (char c = start; c <= end; c++) {\n        if (is_prime(int(c))) {\n            cout << c << \" \";\n        }\n    }\n    cout << endl;\n}\n\nint main() {\n    int choice;\n    cout << \"Unesite 0 za mala slova ili 1 za velika slova: \";\n    cin >> choice;\n    print_letters(choice);\n    system(\"pause\");\n    return 0;\n}', 'Koristi funkciju is_prime za provjeru prostih brojeva te ispisuje slova s prostim ASCII kodovima.', 1, '', 0, 0, '2025-01-23 00:00:27', 4),
(216, 8, 'PD Funkcije – zadatak 5', 'Implementiraj dvije funkcije: jednu za ispis elemenata, a drugu za sortiranje polja. Preuzeto s prog demos.', 'Prirodni broj N i N cijelih brojeva.', 'Polje prije i nakon sortiranja.', '#include <iostream>\nusing namespace std;\n\nvoid ispisi_polje(int polje[], int N) {\n    for (int i = 0; i < N; i++) {\n        cout << polje[i] << \" \";\n    }\n    cout << endl;\n}\n\nvoid sortiraj_polje(int polje[], int N) {\n    for (int i = 0; i < N - 1; i++) {\n        for (int j = i + 1; j < N; j++) {\n            if (polje[i] > polje[j]) {\n                swap(polje[i], polje[j]);\n            }\n        }\n    }\n}\n\nint main() {\n    int N;\n    cout << \"Unesite broj brojeva: \";\n    cin >> N;\n\n    int *polje = new int[N];\n    for (int i = 0; i < N; i++) {\n        cout << \"Unesite \" << i + 1 << \". broj: \";\n        cin >> polje[i];\n    }\n\n    cout << \"Ispis polja: \";\n    ispisi_polje(polje, N);\n    sortiraj_polje(polje, N);\n    cout << \"Sortirano polje: \";\n    ispisi_polje(polje, N);\n\n    delete[] polje;\n    system(\"pause\");\n    return 0;\n}', 'Kombinira funkciju za ispis polja i funkciju za sortiranje, implementirano pomoću dinamičke alokacije memorije.', 1, '', 0, 0, '2025-01-23 00:00:27', 5),
(217, 8, 'PD Funkcije – zadatak 6', 'Ulaz: 0 za mala slova ili 1 za velika slova. Funkcija: Eratostenovim sitom određuje slova (velika ili mala, ovisi o odabiru) čiji su ASCII kodovi prosti brojevi. Ta slova pohranjuje u polje koje prima kao argument. Na kraju zadatka: PD, program demos.', '0 za mala slova ili 1 za velika slova', 'Izgled konzole isti kao u zadatku 4.', '/* Kod za zadatak 6 */\n#include <iostream>\n#include <cmath>\n#include <cstring>\nusing namespace std;\n\nbool jeProst(int n) {\n    if (n <= 1) return false;\n    for (int i = 2; i <= sqrt(n); i++)\n        if (n % i == 0) return false;\n    return true;\n}\n\nvoid pronađiSlova(int odabir, char polje[]) {\n    int index = 0;\n    int pocetak = (odabir == 0) ? 97 : 65;\n    int kraj = (odabir == 0) ? 122 : 90;\n\n    for (int i = pocetak; i <= kraj; i++) {\n        if (jeProst(i)) {\n            polje[index++] = i;\n        }\n    }\n    polje[index] = \'\\0\';\n}\n\nint main() {\n    int odabir;\n    cout << \"Unesite 0 za mala slova ili 1 za velika slova: \";\n    cin >> odabir;\n    char slova[30];\n    pronađiSlova(odabir, slova);\n    cout << \"Slova s prostim ASCII kodovima su: \" << slova << endl;\n    return 0;\n}', NULL, 1, '', 0, 0, '2025-01-23 00:02:41', 3),
(218, 8, 'PD Funkcije – zadatak 7', 'Ulaz: Broj N i N riječi po najviše 19 znakova. Funkcija: Sortira slova unutar neke riječi. Izlaz: Sve riječi provedene kroz funkciju. Na kraju zadatka: PD, program demos.', 'Broj N i N riječi po najviše 19 znakova', 'Sve riječi provedene kroz funkciju.', '/* Kod za zadatak 7 */\n#include <iostream>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\n\nvoid sortirajRijeci(char rijeci[][20], int n) {\n    for (int i = 0; i < n; i++) {\n        sort(rijeci[i], rijeci[i] + strlen(rijeci[i]));\n    }\n}\n\nint main() {\n    int n;\n    cout << \"Unesite broj rijeci: \";\n    cin >> n;\n    char rijeci[n][20];\n    for (int i = 0; i < n; i++) {\n        cout << \"Unesite \" << i + 1 << \". rijec: \";\n        cin >> rijeci[i];\n    }\n    sortirajRijeci(rijeci, n);\n    cout << \"Sortirane rijeci su: \" << endl;\n    for (int i = 0; i < n; i++) {\n        cout << rijeci[i] << endl;\n    }\n    return 0;\n}', NULL, 1, '', 0, 0, '2025-01-23 00:02:41', 3),
(219, 8, 'PD Funkcije – zadatak 8', 'Ulaz: Broj N i N točaka. Funkcija: Izračunava udaljenost dvije točke u ravnini. Izlaz: Dvije najudaljenije točke i njihova udaljenost. Na kraju zadatka: PD, program demos.', 'Broj N i N točaka', 'Dvije najudaljenije točke i njihova udaljenost.', '/* Kod za zadatak 8 */\n#include <iostream>\n#include <cmath>\nusing namespace std;\n\nstruct Tocka {\n    double x, y;\n};\n\ndouble udaljenost(Tocka a, Tocka b) {\n    return sqrt(pow(a.x - b.x, 2) + pow(a.y - b.y, 2));\n}\n\nint main() {\n    int n;\n    cout << \"Unesite broj točaka: \";\n    cin >> n;\n    Tocka tocke[n];\n    for (int i = 0; i < n; i++) {\n        cout << \"Unesite x i y koordinatu \" << i + 1 << \". točke: \";\n        cin >> tocke[i].x >> tocke[i].y;\n    }\n    double maxUdaljenost = 0;\n    int t1, t2;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            double d = udaljenost(tocke[i], tocke[j]);\n            if (d > maxUdaljenost) {\n                maxUdaljenost = d;\n                t1 = i;\n                t2 = j;\n            }\n        }\n    }\n    cout << \"Najudaljenije točke su točka \" << t1 + 1 << \" i točka \" << t2 + 1 << \" s udaljenosti \" << maxUdaljenost << endl;\n    return 0;\n}', NULL, 1, '', 0, 0, '2025-01-23 00:02:41', 4),
(220, 8, 'PD Funkcije – zadatak 9', 'Ulaz: Broj N i N riječi, a potom jedno slovo. Funkcija: Provjerava nalazi li se neko slovo u nekoj riječi. Ako se slovo ne pojavljuje niti jednom, funkcija ispisuje tu riječ. Na kraju zadatka: PD, program demos.', 'Broj N i N riječi, a potom jedno slovo', 'Sve riječi koje ne sadrže zadano slovo.', '/* Kod za zadatak 9 */\n#include <iostream>\n#include <cstring>\nusing namespace std;\n\nvoid provjeriRijeci(char rijeci[][20], int n, char slovo) {\n    for (int i = 0; i < n; i++) {\n        if (strchr(rijeci[i], slovo) == NULL) {\n            cout << rijeci[i] << endl;\n        }\n    }\n}\n\nint main() {\n    int n;\n    cout << \"Unesite broj rijeci: \";\n    cin >> n;\n    char rijeci[n][20];\n    for (int i = 0; i < n; i++) {\n        cout << \"Unesite \" << i + 1 << \". rijec: \";\n        cin >> rijeci[i];\n    }\n    char slovo;\n    cout << \"Unesite slovo: \";\n    cin >> slovo;\n    cout << \"Rijeci koje ne sadrze slovo \"\" << slovo << \"\" su: \" << endl;\n    provjeriRijeci(rijeci, n, slovo);\n    return 0;\n}', NULL, 1, '', 0, 0, '2025-01-23 00:04:13', 5),
(221, 8, 'PD Funkcije – zadatak 10', 'Napravite program s menijem kao na slici. Za svaku opciju u meniju implementirajte zasebnu funkciju. Polje kao argument u funkcije prenosite po referenci. Na kraju zadatka: PD, program demos.', 'Prikaz menija i opcija', 'Implementacija menija s funkcijama.', '/* Kod za zadatak 10 */\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nvoid stvoriPolje(vector<int>& polje) {\n    cout << \"Polje stvoreno!\" << endl;\n}\n\nvoid unesiPolje(vector<int>& polje) {\n    int broj;\n    cout << \"Unesite brojeve (0 za kraj): \";\n    while (cin >> broj && broj != 0) {\n        polje.push_back(broj);\n    }\n}\n\nvoid ispisiPolje(const vector<int>& polje) {\n    cout << \"Elementi polja: \";\n    for (int broj : polje) {\n        cout << broj << \" \";\n    }\n    cout << endl;\n}\n\nvoid izbrisiPolje(vector<int>& polje) {\n    polje.clear();\n    cout << \"Polje izbrisano!\" << endl;\n}\n\nint main() {\n    vector<int> polje;\n    char opcija;\n    do {\n        cout << \"1 - Stvori polje\\n2 - Unesi u polje\\n3 - Ispisi elemente polja\\n4 - Izbrisi polje\\nx - Ugasi program\\nOdabir: \";\n        cin >> opcija;\n        switch (opcija) {\n            case \'1\': stvoriPolje(polje); break;\n            case \'2\': unesiPolje(polje); break;\n            case \'3\': ispisiPolje(polje); break;\n            case \'4\': izbrisiPolje(polje); break;\n            case \'x\': cout << \"Kraj programa.\" << endl; break;\n            default: cout << \"Nepoznata opcija!\" << endl;\n        }\n    } while (opcija != \'x\');\n    return 0;\n}', NULL, 1, '', 0, 0, '2025-01-23 00:04:13', 6),
(222, 8, 'tg Funkcije – zadatak 1', 'Kreirajte potprogram bez tipa i bez argumenata u kojem korisnik unosi tri broja te koji ispisuje redom brojeve po veličini: najveći, srednji i najmanji. Pozovite izvođenje potprograma u glavnom potprogramu (main) dva puta. ', 'Tri unesena broja od strane korisnika.', 'Brojevi ispisani redom po veličini: najveći, srednji i najmanji.', '#include <iostream>\nusing namespace std;\n\nvoid sortirajBrojeve() {\n    int brojevi[3];\n\n    cout << \"Unesite tri broja: \";\n    for (int i = 0; i < 3; i++) {\n        cin >> brojevi[i];\n    }\n\n    for (int i = 0; i < 2; i++) {\n        for (int j = i + 1; j < 3; j++) {\n            if (brojevi[i] < brojevi[j]) {\n                int temp = brojevi[i];\n                brojevi[i] = brojevi[j];\n                brojevi[j] = temp;\n            }\n        }\n    }\n\n    cout << \"Brojevi po veličini: \" << brojevi[0] << \", \" << brojevi[1] << \", \" << brojevi[2] << endl;\n}\n\nint main() {\n    sortirajBrojeve();\n    sortirajBrojeve();\n    return 0;\n}', NULL, 3, '', 0, 0, '2025-01-23 00:11:10', 1),
(223, 8, 'tg Funkcije – zadatak 2', 'Kreirajte globalnu varijablu decimalnog tipa. U glavnom potprogramu zatražite od korisnika unos decimalne vrijednosti. Kreirajte potprogram koji će upisanu vrijednost u globalnoj varijabli zaokružiti na cjelobrojnu vrijednost.', 'Jedna decimalna vrijednost unesena od strane korisnika.', 'Zaokružena vrijednost decimalnog broja.', '#include <iostream>\nusing namespace std;\n\ndouble globalnaVrijednost;\n\nvoid zaokruziVrijednost() {\n    int cjelobrojniDio = globalnaVrijednost;\n    double prvaDecimala = globalnaVrijednost - cjelobrojniDio;\n    if (prvaDecimala < 0.5) {\n        globalnaVrijednost = cjelobrojniDio;\n    } else {\n        globalnaVrijednost = cjelobrojniDio + 1;\n    }\n}\n\nint main() {\n    cout << \"Unesite decimalni broj: \";\n    cin >> globalnaVrijednost;\n\n    zaokruziVrijednost();\n\n    cout << \"Zaokružena vrijednost: \" << globalnaVrijednost << endl;\n\n    return 0;\n}', NULL, 3, '', 0, 0, '2025-01-23 00:11:10', 2),
(224, 8, ' Funkcije – zadatak 3', 'Zatražite od korisnika unos velikog slova engleske abecede. Taj znak proslijedite potprogramu koji treba kao povratnu vrijednost vratiti prethodni znak u abecedi. Ako se unese \'A\', povratna vrijednost treba biti \'Z\'. ', 'Jedno veliko slovo engleske abecede.', 'Prethodni znak u engleskoj abecedi.', '#include <iostream>\nusing namespace std;\n\nchar prethodniZnak(char znak) {\n    if (znak == \'A\') {\n        return \'Z\';\n    } else {\n        return znak - 1;\n    }\n}\n\nint main() {\n    char znak;\n    do {\n        cout << \"Unesite veliko slovo: \";\n        cin >> znak;\n    } while (znak < \'A\' || znak > \'Z\');\n\n    char prethodni = prethodniZnak(znak);\n    cout << \"Prethodni znak: \" << prethodni << endl;\n\n    return 0;\n}', NULL, 3, '', 0, 0, '2025-01-23 00:13:18', 3),
(225, 8, ' Funkcije – zadatak 4', 'Omogućite korisniku unos dvije cjelobrojne vrijednosti. Te brojeve proslijedite potprogramu koji će kao povratnu vrijednost vratiti nasumični broj u rasponu proslijeđenih vrijednosti..', 'Dvije unesene cjelobrojne vrijednosti (granice raspona).', 'Nasumičan broj u rasponu proslijeđenih vrijednosti.', '#include <iostream>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n\nint nasumicniBroj(int donjaGranica, int gornjaGranica) {\n    return rand() % (gornjaGranica - donjaGranica + 1) + donjaGranica;\n}\n\nint main() {\n    srand(time(0));\n\n    int donja, gornja;\n    do {\n        cout << \"Unesite donju granicu: \";\n        cin >> donja;\n        cout << \"Unesite gornju granicu: \";\n        cin >> gornja;\n    } while (donja >= gornja);\n\n    int broj = nasumicniBroj(donja, gornja);\n    cout << \"Nasumični broj u rasponu: \" << broj << endl;\n\n    return 0;\n}', NULL, 3, '', 0, 0, '2025-01-23 00:13:18', 4),
(226, 8, ' Funkcije – zadatak 5', 'Omogućite korisniku unos 3 cjelobrojne vrijednosti. Te brojeve proslijedite potprogramu koji će vratiti najveću vrijednost. Pozovite potprogram u glavnom programu i ispišite povratnu vrijednost.', 'Tri unesene cjelobrojne vrijednosti.', 'Najveća vrijednost među unesena tri broja.', '#include <iostream>\nusing namespace std;\n\nint najveciBroj(int a, int b, int c) {\n    int najveci = a;\n    if (b > najveci) najveci = b;\n    if (c > najveci) najveci = c;\n    return najveci;\n}\n\nint main() {\n    int x, y, z;\n    cout << \"Unesite tri broja: \";\n    cin >> x >> y >> z;\n\n    int najveci = najveciBroj(x, y, z);\n    cout << \"Najveći broj je: \" << najveci << endl;\n\n    return 0;\n}', NULL, 3, '', 0, 0, '2025-01-23 00:13:18', 5),
(227, 8, 'PD Funkcije – zadatak 6', 'Omogućite korisniku unos malog slova engleske abecede. Taj znak proslijedite potprogramu koji treba kao povratnu vrijednost vratiti idući znak u engleskoj abecedi. Ako se unese \'z\', povratna vrijednost treba biti \'a\'. Na kraju zadatka: PD, program demos.', 'Jedno malo slovo engleske abecede.', 'Idući znak u engleskoj abecedi.', '#include <iostream>\nusing namespace std;\n\nchar sljedeciZnak(char znak) {\n    if (znak == \'z\') {\n        return \'a\';\n    } else {\n        return znak + 1;\n    }\n}\n\nint main() {\n    char znak;\n    do {\n        cout << \"Unesite malo slovo: \";\n        cin >> znak;\n    } while (znak < \'a\' || znak > \'z\');\n\n    char sljedeci = sljedeciZnak(znak);\n    cout << \"Sljedeći znak: \" << sljedeci << endl;\n\n    return 0;\n}', NULL, 3, '', 0, 0, '2025-01-23 00:13:18', 6),
(228, 8, 'Funkcije – sortiranje polja', 'Zatražite od korisnika unos veličine polja te kreirajte decimalno polje na temelju unosa. U polje generirajte nasumične vrijednosti u rasponu od 1.0 do 9.9 (decimalni brojevi s jednim decimalnim mjestom). Kreirajte funkciju koja će uzlazno sortirati polje. Na kraju ispišite sortirano polje.', 'Veličina polja unesena od strane korisnika.', 'Ispis sortiranog polja decimalnih vrijednosti.', '#include <iostream>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n\nvoid sortirajPolje(double polje[], int velicina) {\n    for (int i = 0; i < velicina - 1; i++) {\n        for (int j = i + 1; j < velicina; j++) {\n            if (polje[i] > polje[j]) {\n                double temp = polje[i];\n                polje[i] = polje[j];\n                polje[j] = temp;\n            }\n        }\n    }\n}\n\nint main() {\n    srand(time(0));\n    int velicina;\n    cout << \"Unesite veličinu polja: \";\n    cin >> velicina;\n\n    double* polje = new double[velicina];\n    for (int i = 0; i < velicina; i++) {\n        polje[i] = (rand() % 90 + 10) / 10.0;\n    }\n\n    cout << \"Generirano polje: \";\n    for (int i = 0; i < velicina; i++) {\n        cout << polje[i] << \" \";\n    }\n    cout << endl;\n\n    sortirajPolje(polje, velicina);\n\n    cout << \"Sortirano polje: \";\n    for (int i = 0; i < velicina; i++) {\n        cout << polje[i] << \" \";\n    }\n    cout << endl;\n\n    delete[] polje;\n    return 0;\n}', NULL, 3, '', 0, 0, '2025-01-23 00:13:23', 1),
(229, 8, 'Funkcije – ASCII znakovi', 'Omogućite korisniku unos ASCII koda znaka (u rasponu od 32 do 126). Kreirajte funkciju koja će kao povratnu vrijednost vratiti odgovarajući znak. U glavnom programu ispišite znak za uneseni kod.', 'Jedna cjelobrojna vrijednost iz raspona ASCII kodova (32–126).', 'Ispis znaka za uneseni ASCII kod.', '#include <iostream>\nusing namespace std;\n\nchar dobaviZnak(int kod) {\n    return (char)kod;\n}\n\nint main() {\n    int kod;\n    do {\n        cout << \"Unesite ASCII kod (32–126): \";\n        cin >> kod;\n    } while (kod < 32 || kod > 126);\n\n    char znak = dobaviZnak(kod);\n    cout << \"Znak za kod \" << kod << \" je: \" << znak << endl;\n\n    return 0;\n}', NULL, 3, '', 0, 0, '2025-01-23 00:13:23', 2),
(230, 8, 'Funkcije – zbrajanje elemenata polja', 'Kreirajte polje od 10 cjelobrojnih vrijednosti te omogućite korisniku unos vrijednosti u polje. Kreirajte funkciju koja će izračunati i vratiti zbroj svih elemenata polja. Na kraju ispišite zbroj u glavnom programu.', 'Deset cjelobrojnih vrijednosti uneseno od strane korisnika.', 'Zbroj svih elemenata polja.', '#include <iostream>\nusing namespace std;\n\nint zbrojPolja(int polje[], int velicina) {\n    int zbroj = 0;\n    for (int i = 0; i < velicina; i++) {\n        zbroj += polje[i];\n    }\n    return zbroj;\n}\n\nint main() {\n    int polje[10];\n    cout << \"Unesite 10 cijelih brojeva: \";\n    for (int i = 0; i < 10; i++) {\n        cin >> polje[i];\n    }\n\n    int zbroj = zbrojPolja(polje, 10);\n    cout << \"Zbroj elemenata polja je: \" << zbroj << endl;\n\n    return 0;\n}', NULL, 3, '', 0, 0, '2025-01-23 00:13:23', 3),
(231, 8, 'Funkcije – rad sa statičkim varijablama', 'Kreirajte funkciju koja koristi statičku varijablu za praćenje broja poziva te ispisuje koliko puta je do sada bila pozvana. U glavnom programu omogućite korisniku unos broja poziva funkcije te pozovite funkciju onoliko puta koliko je uneseno.', 'Broj poziva funkcije unesen od strane korisnika.', 'Ispis broja trenutnih i ukupnih poziva funkcije.', '#include <iostream>\nusing namespace std;\n\nvoid brojacPoziva() {\n    static int brojPoziva = 0;\n    brojPoziva++;\n    cout << \"Funkcija je pozvana \" << brojPoziva << \" puta.\" << endl;\n}\n\nint main() {\n    int brojPoziva;\n    cout << \"Koliko puta želite pozvati funkciju? \";\n    cin >> brojPoziva;\n\n    for (int i = 0; i < brojPoziva; i++) {\n        brojacPoziva();\n    }\n\n    return 0;\n}', NULL, 3, '', 0, 0, '2025-01-23 00:13:23', 4),
(232, 9, 'Funkcije – ispis raspona brojeva', 'Kreirajte slog za unos/pohranu dvije cjelobrojne vrijednosti (x i y). Kreirajte funkciju koja prima jednu varijablu kreirane strukture i ispisuje sve brojeve u rasponu od manjeg do većeg. U glavnom programu kreirajte varijablu strukture, omogućite unos vrijednosti i pozovite funkciju.', 'Dvije cjelobrojne vrijednosti unesene od strane korisnika.', 'Ispis svih brojeva u rasponu od manjeg do većeg.', '#include <iostream>\nusing namespace std;\n\nstruct Brojevi {\n    int x, y;\n};\n\nvoid ispisRaspona(Brojevi brojevi) {\n    int manji = (brojevi.x < brojevi.y) ? brojevi.x : brojevi.y;\n    int veci = (brojevi.x > brojevi.y) ? brojevi.x : brojevi.y;\n    for (int i = manji; i <= veci; i++) {\n        cout << i << \" \";\n    }\n    cout << endl;\n}\n\nint main() {\n    Brojevi brojevi;\n    cout << \"Unesite dva broja: \";\n    cin >> brojevi.x >> brojevi.y;\n    ispisRaspona(brojevi);\n    return 0;\n}', NULL, 3, '', 0, 0, '2025-01-23 00:23:32', 1),
(233, 9, 'Funkcije – ispis abecede unazad', 'Kreirajte funkciju koja prima jedan argument inicijaliziran na veliko slovo Z. Funkcija treba ispisati sva velika slova engleske abecede unazad od proslijeđenog slova do slova A. Pozovite funkciju s proslijeđenim argumentom i bez njega.', 'Jedno veliko slovo ili podrazumijevani argument Z.', 'Ispis svih velikih slova od zadatog do A, u jednom retku.', '#include <iostream>\nusing namespace std;\n\nvoid ispisAbecede(char slovo = \'Z\') {\n    for (char c = slovo; c >= \'A\'; c--) {\n        cout << c << \" \";\n    }\n    cout << endl;\n}\n\nint main() {\n    char unos;\n    cin >> unos;\n    ispisAbecede(unos);\n    ispisAbecede();\n    return 0;\n}', NULL, 3, '', 0, 0, '2025-01-23 00:23:32', 2),
(234, 9, 'Funkcije – zamjena vrijednosti', 'Kreirajte funkciju koja prima dva cjelobrojna argumenta putem pokazivača i zamjenjuje njihove vrijednosti. U glavnom programu omogućite korisniku unos dviju vrijednosti, proslijedite ih funkciji i nakon toga ispišite zamijenjene vrijednosti.', 'Dvije unesene cjelobrojne vrijednosti.', 'Ispis zamijenjenih vrijednosti.', '#include <iostream>\nusing namespace std;\n\nvoid zamijeniVrijednosti(int* a, int* b) {\n    int temp = *a;\n    *a = *b;\n    *b = temp;\n}\n\nint main() {\n    int a, b;\n    cout << \"Unesite dva broja: \";\n    cin >> a >> b;\n    zamijeniVrijednosti(&a, &b);\n    cout << \"Nakon zamjene: a = \" << a << \", b = \" << b << endl;\n    return 0;\n}', NULL, 3, '', 0, 0, '2025-01-23 00:23:32', 3),
(235, 9, 'Funkcije – obrada polja', 'Kreirajte funkciju koja prima cjelobrojno polje i njegovu veličinu. Funkcija treba ispisati sadržaj polja, izračunati i ispisati aritmetičku sredinu, te ispisati sve brojeve veće od aritmetičke sredine. U glavnom programu generirajte polje nasumičnih brojeva u rasponu od 10 do 99.', 'Veličina polja unesena od strane korisnika.', 'Ispis sadržaja polja, aritmetičke sredine i brojeva većih od sredine.', '#include <iostream>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n\nvoid obradiPolje(int polje[], int velicina) {\n    cout << \"Polje: \";\n    for (int i = 0; i < velicina; i++) {\n        cout << polje[i] << \" \";\n    }\n    cout << endl;\n\n    double suma = 0;\n    for (int i = 0; i < velicina; i++) {\n        suma += polje[i];\n    }\n    double sredina = suma / velicina;\n    cout << \"Aritmetička sredina: \" << sredina << endl;\n\n    cout << \"Brojevi veći od aritmetičke sredine: \";\n    for (int i = 0; i < velicina; i++) {\n        if (polje[i] > sredina) {\n            cout << polje[i] << \" \";\n        }\n    }\n    cout << endl;\n}\n\nint main() {\n    srand(time(0));\n    int velicina;\n    cout << \"Unesite veličinu polja: \";\n    cin >> velicina;\n\n    int* polje = new int[velicina];\n    for (int i = 0; i < velicina; i++) {\n        polje[i] = rand() % 90 + 10;\n    }\n\n    obradiPolje(polje, velicina);\n    delete[] polje;\n    return 0;\n}', NULL, 3, '', 0, 0, '2025-01-23 00:23:32', 4),
(236, 9, 'Funkcije – provjera palindroma', 'Napišite rekurzivnu funkciju koja provjerava je li upisana rečenica palindrom. Funkcija treba ignorirati razmake i uspoređivati slova bez obzira na velika ili mala slova.', 'Jedna unesena rečenica.', 'Informacija je li rečenica palindrom.', '#include <iostream>\n#include <cstring>\nusing namespace std;\n\nbool provjeriPalindrom(char* recenica, int pocetak, int kraj) {\n    while (recenica[pocetak] == \' \') pocetak++;\n    while (recenica[kraj] == \' \') kraj--;\n    if (pocetak >= kraj) return true;\n    if (tolower(recenica[pocetak]) != tolower(recenica[kraj])) return false;\n    return provjeriPalindrom(recenica, pocetak + 1, kraj - 1);\n}\n\nint main() {\n    char recenica[100];\n    cout << \"Unesite rečenicu: \";\n    cin.getline(recenica, 100);\n    int duljina = strlen(recenica) - 1;\n    if (provjeriPalindrom(recenica, 0, duljina)) {\n        cout << \"Rečenica je palindrom!\" << endl;\n    } else {\n        cout << \"Rečenica nije palindrom!\" << endl;\n    }\n    return 0;\n}', NULL, 3, '', 0, 0, '2025-01-23 00:23:32', 5),
(237, 9, 'Rekurzija za traženje parova potencija', 'Pronađite sve parove brojeva (a, b) gdje je a^b = zadani broj. Funkcija rekurzivno pretražuje baze i za svaku bazu provjerava potenciju koja daje zadani broj.', 'Jedna cjelobrojna vrijednost (broj).', 'Svi parovi (baza, eksponent) koji zadovoljavaju uvjet a^b = broj.', '#include <iostream>\n#include <cmath>\nusing namespace std;\n\nvoid pronadiParove(int broj, int baza = 2) {\n    if (baza > broj) return;\n\n    int eksponent = 0;\n    int rezultat = 1;\n    while (rezultat < broj) {\n        rezultat *= baza;\n        eksponent++;\n    }\n\n    if (rezultat == broj)\n        cout << baza << \"^\" << eksponent << \" = \" << broj << endl;\n\n    pronadiParove(broj, baza + 1);\n}\n\nint main() {\n    int broj;\n    cout << \"Unesite broj: \";\n    cin >> broj;\n\n    cout << \"Parovi potencija za broj \" << broj << \" su: \\n\";\n    pronadiParove(broj);\n\n    return 0;\n}', NULL, 1, '', 0, 0, '2025-01-23 00:26:12', 4),
(238, 9, 'Rekurzija za provjeru palindroma broja', 'Provjerite rekurzivno je li uneseni broj palindrom (čita se isto sprijeda i straga) bez korištenja string biblioteke.', 'Jedna cjelobrojna vrijednost (broj).', 'Informacija je li broj palindrom.', '#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint brojZnamenki(int n) {\n    if (n < 10) return 1;\n    return 1 + brojZnamenki(n / 10);\n}\n\nbool jePalindrom(int n, int duzina) {\n    if (n < 10) return true;\n\n    int prvaZnamenka = n / pow(10, duzina - 1);\n    int zadnjaZnamenka = n % 10;\n\n    if (prvaZnamenka != zadnjaZnamenka) return false;\n\n    int noviBroj = (n % static_cast<int>(pow(10, duzina - 1))) / 10;\n    return jePalindrom(noviBroj, duzina - 2);\n}\n\nint main() {\n    int broj;\n    cout << \"Unesite broj: \";\n    cin >> broj;\n\n    if (jePalindrom(broj, brojZnamenki(broj)))\n        cout << broj << \" je palindrom.\\n\";\n    else\n        cout << broj << \" nije palindrom.\\n\";\n\n    return 0;\n}', NULL, 1, '', 0, 0, '2025-01-23 00:26:12', 5),
(239, 9, 'Dvostruko vezana lista za parne i neparne brojeve', 'Implementirajte dvostruko vezanu listu. Parni brojevi pohranjuju se u jednu listu, a neparni u drugu. Na kraju ispišite sadržaj obje liste.', 'Polje cjelobrojnih vrijednosti uneseno od strane korisnika.', 'Ispis sadržaja dviju lista: parni i neparni brojevi.', '#include <iostream>\nusing namespace std;\n\nstruct Cvor {\n    int podatak;\n    Cvor* sljedeci;\n    Cvor(int vrijednost) : podatak(vrijednost), sljedeci(nullptr) {}\n};\n\nvoid dodajUCvor(Cvor*& glava, int vrijednost) {\n    Cvor* novi = new Cvor(vrijednost);\n    if (!glava) {\n        glava = novi;\n    } else {\n        Cvor* temp = glava;\n        while (temp->sljedeci) {\n            temp = temp->sljedeci;\n        }\n        temp->sljedeci = novi;\n    }\n}\n\nvoid ispisiListu(Cvor* glava) {\n    while (glava) {\n        cout << glava->podatak << \" -> \";\n        glava = glava->sljedeci;\n    }\n    cout << \"null\\n\";\n}\n\nvoid razdvojiParneINeparne(Cvor* glava, Cvor*& parni, Cvor*& neparni) {\n    if (!glava) return;\n\n    if (glava->podatak % 2 == 0)\n        dodajUCvor(parni, glava->podatak);\n    else\n        dodajUCvor(neparni, glava->podatak);\n\n    razdvojiParneINeparne(glava->sljedeci, parni, neparni);\n}\n\nint main() {\n    Cvor* lista = nullptr;\n    Cvor* parni = nullptr;\n    Cvor* neparni = nullptr;\n\n    dodajUCvor(lista, 1);\n    dodajUCvor(lista, 2);\n    dodajUCvor(lista, 3);\n    dodajUCvor(lista, 4);\n    dodajUCvor(lista, 5);\n\n    cout << \"Originalna lista: \";\n    ispisiListu(lista);\n\n    razdvojiParneINeparne(lista, parni, neparni);\n\n    cout << \"\\nParni brojevi: \";\n    ispisiListu(parni);\n    cout << \"Neparni brojevi: \";\n    ispisiListu(neparni);\n\n    return 0;\n}', NULL, 1, '', 0, 0, '2025-01-23 00:26:12', 6),
(240, 9, 'Provjera djeljivosti brojeva u rasponu', 'Kreirajte funkciju koja prima dva cjelobrojna argumenta, početak i kraj raspona. Funkcija treba ispisati sve brojeve u rasponu koji su djeljivi s 3. U glavnom programu omogućite korisniku unos početka i kraja raspona te pozovite funkciju.', 'Početak i kraj raspona (dva cjelobrojna broja).', 'Brojevi iz raspona koji su djeljivi s 3.', '#include <iostream>\nusing namespace std;\n\nvoid ispisiDjeljive(int pocetak, int kraj) {\n    cout << \"Brojevi djeljivi s 3: \";\n    for (int i = pocetak; i <= kraj; i++) {\n        if (i % 3 == 0) {\n            cout << i << \" \";\n        }\n    }\n    cout << endl;\n}\n\nint main() {\n    int pocetak, kraj;\n    cout << \"Unesite početak raspona: \";\n    cin >> pocetak;\n    cout << \"Unesite kraj raspona: \";\n    cin >> kraj;\n\n    ispisiDjeljive(pocetak, kraj);\n\n    return 0;\n}', NULL, 1, '', 0, 0, '2025-01-23 00:28:45', 1),
(241, 9, 'Pronalaženje znamenki broja', 'Kreirajte funkciju koja prima cijeli broj i ispisuje sve njegove znamenke u zasebnim redovima. U glavnom programu omogućite unos broja i pozovite funkciju.', 'Jedna cjelobrojna vrijednost.', 'Svaka znamenka broja ispisana u zasebnom retku.', '#include <iostream>\n#include <cmath>\nusing namespace std;\n\nvoid ispisiZnamenke(int broj) {\n    if (broj < 0) broj = abs(broj);\n    cout << \"Znamenke broja su:\" << endl;\n    while (broj > 0) {\n        cout << broj % 10 << endl;\n        broj /= 10;\n    }\n}\n\nint main() {\n    int broj;\n    cout << \"Unesite broj: \";\n    cin >> broj;\n\n    ispisiZnamenke(broj);\n\n    return 0;\n}', NULL, 1, '', 0, 0, '2025-01-23 00:28:45', 2),
(242, 9, 'Obrnuti redoslijed polja', 'Kreirajte funkciju koja prima polje cijelih brojeva i njegovu veličinu te vraća elemente u obrnutom redoslijedu. U glavnom programu omogućite korisniku unos veličine polja i vrijednosti elemenata te pozovite funkciju.', 'Polje cijelih brojeva i njegova veličina.', 'Polje ispisano u obrnutom redoslijedu.', '#include <iostream>\nusing namespace std;\n\nvoid obrniPolje(int polje[], int velicina) {\n    cout << \"Obrnuto polje: \";\n    for (int i = velicina - 1; i >= 0; i--) {\n        cout << polje[i] << \" \";\n    }\n    cout << endl;\n}\n\nint main() {\n    int velicina;\n    cout << \"Unesite veličinu polja: \";\n    cin >> velicina;\n\n    int* polje = new int[velicina];\n    cout << \"Unesite elemente polja: \";\n    for (int i = 0; i < velicina; i++) {\n        cin >> polje[i];\n    }\n\n    obrniPolje(polje, velicina);\n\n    delete[] polje;\n    return 0;\n}', NULL, 1, '', 0, 0, '2025-01-23 00:28:45', 3),
(243, 9, 'Rekurzivni zbroj elemenata polja', 'Kreirajte funkciju koja rekurzivno izračunava zbroj svih elemenata polja cijelih brojeva. U glavnom programu omogućite korisniku unos veličine polja i vrijednosti elemenata te pozovite funkciju.', 'Polje cijelih brojeva i njegova veličina.', 'Zbroj svih elemenata polja.', '#include <iostream>\nusing namespace std;\n\nint rekurzivniZbroj(int polje[], int velicina) {\n    if (velicina == 0) return 0;\n    return polje[velicina - 1] + rekurzivniZbroj(polje, velicina - 1);\n}\n\nint main() {\n    int velicina;\n    cout << \"Unesite veličinu polja: \";\n    cin >> velicina;\n\n    int* polje = new int[velicina];\n    cout << \"Unesite elemente polja: \";\n    for (int i = 0; i < velicina; i++) {\n        cin >> polje[i];\n    }\n\n    int zbroj = rekurzivniZbroj(polje, velicina);\n    cout << \"Zbroj elemenata polja je: \" << zbroj << endl;\n\n    delete[] polje;\n    return 0;\n}', NULL, 1, '', 0, 0, '2025-01-23 00:29:47', 5),
(244, 9, 'Rekurzivna provjera najvećeg broja u polju', 'Kreirajte funkciju koja rekurzivno pronalazi najveći broj u polju cijelih brojeva. U glavnom programu omogućite korisniku unos veličine polja i vrijednosti elemenata te pozovite funkciju.', 'Polje cijelih brojeva i njegova veličina.', 'Najveći broj u polju.', '#include <iostream>\nusing namespace std;\n\nint najveciBroj(int polje[], int velicina, int najveci = INT_MIN) {\n    if (velicina == 0) return najveci;\n    if (polje[velicina - 1] > najveci) najveci = polje[velicina - 1];\n    return najveciBroj(polje, velicina - 1, najveci);\n}\n\nint main() {\n    int velicina;\n    cout << \"Unesite veličinu polja: \";\n    cin >> velicina;\n\n    int* polje = new int[velicina];\n    cout << \"Unesite elemente polja: \";\n    for (int i = 0; i < velicina; i++) {\n        cin >> polje[i];\n    }\n\n    int najveci = najveciBroj(polje, velicina);\n    cout << \"Najveći broj u polju je: \" << najveci << endl;\n\n    delete[] polje;\n    return 0;\n}', NULL, 1, '', 0, 0, '2025-01-23 00:29:47', 6),
(245, 9, 'PD Rekurzije – zadatak 1', 'Kreirajte rekurzivnu funkciju koja izračunava zbroj brojeva od 1 do N. Omogućite korisniku unos vrijednosti N i ispišite rezultat korištenjem funkcije.', 'Jedna cjelobrojna vrijednost (N).', 'Zbroj svih brojeva od 1 do N.', '#include <iostream>\nusing namespace std;\n\nint zbrojDoN(int n) {\n    if (n == 0) return 0; // Bazni slučaj\n    return n + zbrojDoN(n - 1); // Rekurzivni poziv\n}\n\nint main() {\n    int n;\n    cout << \"Unesite broj N: \";\n    cin >> n;\n\n    int rezultat = zbrojDoN(n);\n    cout << \"Zbroj od 1 do \" << n << \" je: \" << rezultat << endl;\n\n    return 0;\n}', NULL, 1, '', 0, 0, '2025-01-23 09:04:53', 1),
(246, 9, 'PD Rekurzije – zadatak 2', 'Kreirajte rekurzivnu funkciju za izračunavanje faktorijela broja N. Omogućite korisniku unos vrijednosti N i ispišite rezultat pomoću funkcije.', 'Jedna cjelobrojna vrijednost (N).', 'Faktorijel broja N.', '#include <iostream>\nusing namespace std;\n\nint faktorijel(int n) {\n    if (n <= 1) return 1; // Bazni slučaj\n    return n * faktorijel(n - 1); // Rekurzivni poziv\n}\n\nint main() {\n    int n;\n    cout << \"Unesite broj N: \";\n    cin >> n;\n\n    int rezultat = faktorijel(n);\n    cout << \"Faktorijel broja \" << n << \" je: \" << rezultat << endl;\n\n    return 0;\n}', NULL, 1, '', 0, 0, '2025-01-23 09:04:53', 2),
(247, 9, 'PD Rekurzije – zadatak 3', 'Kreirajte rekurzivnu funkciju koja provjerava je li zadani niz znakova (string) palindrom. Omogućite unos niza znakova i provjerite rezultat korištenjem funkcije.', 'Niz znakova (string).', 'Informacija je li niz palindrom ili nije.', '#include <iostream>\n#include <cstring>\nusing namespace std;\n\nbool jePalindrom(const char* niz, int pocetak, int kraj) {\n    if (pocetak >= kraj) return true; // Bazni slučaj\n    if (niz[pocetak] != niz[kraj]) return false; // Nejednake granice\n    return jePalindrom(niz, pocetak + 1, kraj - 1); // Rekurzivni poziv\n}\n\nint main() {\n    char niz[100];\n    cout << \"Unesite niz: \";\n    cin.getline(niz, 100);\n\n    int duljina = strlen(niz);\n    if (jePalindrom(niz, 0, duljina - 1))\n        cout << \"Niz je palindrom.\" << endl;\n    else\n        cout << \"Niz nije palindrom.\" << endl;\n\n    return 0;\n}', NULL, 1, '', 0, 0, '2025-01-23 09:04:53', 3),
(248, 9, 'PD Rekurzije – zadatak 4', 'Kreirajte rekurzivnu funkciju koja izračunava n-ti Fibonaccijev broj. Omogućite korisniku unos vrijednosti n i ispišite rezultat korištenjem funkcije.', 'Jedna cjelobrojna vrijednost (n).', 'n-ti Fibonaccijev broj.', '#include <iostream>\nusing namespace std;\n\nint fibonacci(int n) {\n    if (n == 0) return 0; // Bazni slučaj\n    if (n == 1) return 1; // Bazni slučaj\n    return fibonacci(n - 1) + fibonacci(n - 2); // Rekurzivni poziv\n}\n\nint main() {\n    int n;\n    cout << \"Unesite broj n: \";\n    cin >> n;\n\n    int rezultat = fibonacci(n);\n    cout << n << \". Fibonaccijev broj je: \" << rezultat << endl;\n\n    return 0;\n}', NULL, 1, '', 0, 0, '2025-01-23 09:04:53', 4),
(249, 9, 'PD Rekurzije – zadatak 5', 'Kreirajte rekurzivnu funkciju koja izračunava najveći zajednički djelitelj (NZD) dvaju brojeva. Omogućite korisniku unos dvaju brojeva i ispišite rezultat korištenjem funkcije.', 'Dvije cjelobrojne vrijednosti.', 'Najveći zajednički djelitelj (NZD) dvaju brojeva.', '#include <iostream>\nusing namespace std;\n\nint nzd(int a, int b) {\n    if (b == 0) return a; // Bazni slučaj\n    return nzd(b, a % b); // Rekurzivni poziv\n}\n\nint main() {\n    int a, b;\n    cout << \"Unesite dva broja: \";\n    cin >> a >> b;\n\n    int rezultat = nzd(a, b);\n    cout << \"Najveći zajednički djelitelj brojeva \" << a << \" i \" << b << \" je: \" << rezultat << endl;\n\n    return 0;\n}', NULL, 1, '', 0, 0, '2025-01-23 09:04:53', 5),
(250, 9, 'Struktura pravokutnika', 'Kreirajte slog (strukturu) za unos/pohranu stranica (a, b) pravokutnika. Potprogram izračunava opseg i površinu pravokutnika te ih ispisuje.', 'Unesite stranice a i b pravokutnika.', 'Opseg: 14, Površina: 10', '', NULL, 3, '', 0, 0, '2025-01-23 09:12:14', 1),
(251, 9, 'Zbrajanje s podrazumijevanim argumentom', 'Potprogram vraća zbroj dvaju brojeva, pri čemu je drugi argument podrazumijevano 10. Glavni program poziva potprogram 3 puta s različitim argumentima.', 'Unesite dva broja (prvi obavezan, drugi opcionalan).', 'Rezultati zbrajanja: 15, 12, 20', '', NULL, 3, '', 0, 0, '2025-01-23 09:12:14', 2),
(252, 9, 'Zamjena vrijednosti pomoću reference', 'Potprogram zamjenjuje vrijednosti dviju varijabli korištenjem referenci.', 'Unesite vrijednosti za a i b.', 'Nakon zamjene: a = 10, b = 5', '', NULL, 3, '', 0, 0, '2025-01-23 09:12:14', 3),
(253, 9, 'Aritmetička sredina i umnožak iz polja', 'Potprogram računa umnožak i aritmetičku sredinu vrijednosti iz polja te ispisuje veličinu polja.', 'Unesite veličinu polja i njegove elemente.', 'Umnožak: 120, Aritmetička sredina: 5.0, Veličina: 5', '', NULL, 3, '', 0, 0, '2025-01-23 09:12:14', 4),
(254, 9, 'Najveća zajednička mjera (NZD)', 'Rekurzivna funkcija računa najveću zajedničku mjeru dvaju brojeva koristeći Euklidov algoritam.', 'Unesite dva broja M i N.', 'Najveća zajednička mjera: 6', '', NULL, 3, '', 0, 0, '2025-01-23 09:12:14', 5),
(255, 10, 'Generiranje cjelobrojnog polja i traženje vrijednosti', 'Kreirajte cjelobrojno polje od 10 elemenata. U polje generirajte cjelobrojne vrijednosti na način da svaki idući broj bude veći od prethodnog za nasumičnu vrijednost u rasponu od 3 do 5. Ispišite cijelo polje u jednom retku, brojevi odvojeni razmacima. Zatražite od korisnika unos tražene vrijednosti. Kreirajte potprogram u kojem ćete provjeriti nalazi li se tražena vrijednost u polju.', 'Unesite traženi broj:', 'Traženi broj se nalazi u polju.', '', NULL, 3, '', 0, 0, '2025-01-23 09:13:59', 1),
(256, 10, 'Sortiranje cjelobrojnog polja i traženje minimuma', 'Kreirajte cjelobrojno polje od 10 elemenata. U polje generirajte cjelobrojne vrijednosti na način da svaki idući broj bude veći od prethodnog za nasumičnu vrijednost u rasponu od 3 do 5. Ispišite cijelo polje u jednom retku, brojevi odvojeni razmacima. Kreirajte potprogram u kojem ćete sortirati vrijednosti polja silazno. Zatim zatražite od korisnika unos tražene vrijednosti. Kreirajte potprogram u kojem ćete provjeriti nalazi li se tražena vrijednost u polju.', 'Unesite traženi broj:', 'Traženi broj je pronađen.', '', NULL, 3, '', 0, 0, '2025-01-23 09:13:59', 2),
(257, 10, 'Aritmetička sredina i sortiranje polja', 'Kreirajte cjelobrojno polje veličine zadane od korisnika i generirajte slučajne vrijednosti u rasponu od 10 do 99. Ispišite cijelo polje u jednom retku, brojevi odvojeni razmacima. Kreirajte potprogram koji će polje sortirati uzlazno te dodatno provesti parametre: Nakon sortiranja izračunajte i ispišite aritmetičku sredinu.', 'Unesite veličinu polja:', 'Sortirano polje: ..., Aritmetička sredina: ...', '', NULL, 3, '', 0, 0, '2025-01-23 09:13:59', 3),
(258, 10, 'Sortiranje rečenice prema ASCII vrijednostima', 'Zatražite od korisnika da unese veličinu polja i na temelju unesenih vrijednosti kreirajte cjelobrojno polje. Omogućite korisniku unos cijelog broja u polje. Kreirajte potprogram u kojem ćete polje sortirati uzlazno i silazno te dodatno provesti sortiranje rečenice prema ASCII vrijednostima.', 'Unesite veličinu polja:', 'Ispis uzlazno sortirane rečenice.', '', NULL, 3, '', 0, 0, '2025-01-23 09:13:59', 4),
(259, 10, 'Razvrstavanje brojeva prema parnosti', 'Kreirajte polje od n elemenata u kojem se nalaze nasumične generirane vrijednosti u rasponu od 30 do 70. Kreirajte dva potprograma: jedan za razvrstavanje brojeva u polju (na parne i neparne), a drugi za izračun prosjeka parnih i neparnih brojeva. Rezultat ispisati na ekran.', 'Unesite n:', 'Prosjek parnih brojeva: ..., Prosjek neparnih brojeva: ...', '', NULL, 3, '', 0, 0, '2025-01-23 09:13:59', 5),
(260, 10, 'Traženje vrijednosti binarnim pretraživanjem', 'Kreirajte decimalno polje od 10 elemenata. U polje generirajte decimalne vrijednosti s preciznošću na jednu decimalu na način da svaki idući broj bude veći od prethodnog za nasumičnu vrijednost u rasponu od 2.0 do 3.9. Ispišite cijelo polje u jednom retku, brojevi odvojeni razmacima. Zatražite od korisnika unos tražene vrijednosti. Kreirajte potprogram u kojem ćete implementirati iterativno binarno pretraživanje.', 'Unesite traženu vrijednost:', 'Ako tražena vrijednost postoji: indeks elementa. Ako ne postoji: -1.', '', NULL, 3, '', 0, 0, '2025-01-23 09:15:19', 1),
(261, 10, 'Rekurzivno binarno pretraživanje', 'Kreirajte cjelobrojno polje od 10 elemenata. U polje generirajte cjelobrojne vrijednosti na način da svaki idući broj bude veći od prethodnog za nasumičnu vrijednost u rasponu od 3 do 5. Ispišite cijelo polje u jednom retku, brojevi odvojeni razmacima. Zatražite od korisnika unos tražene vrijednosti. Kreirajte potprogram u kojem ćete implementirati rekurzivno binarno pretraživanje.', 'Unesite traženu vrijednost:', 'Ako tražena vrijednost postoji: indeks elementa. Ako ne postoji: -1.', '', NULL, 3, '', 0, 0, '2025-01-23 09:15:19', 2),
(262, 10, 'Sortiranje polja metodom brzog sortiranja', 'Kreirajte cjelobrojno polje od 10 elemenata. U polje generirajte nasumične vrijednosti u rasponu od 10 do 99. Ispišite cijelo polje u jednom retku, brojevi odvojeni razmacima. Kreirajte potprogram koji polje sortira silazno metodom brzog sortiranja (quicksort).', 'Nije potreban unos.', 'Ispis sortiranog polja silazno.', '', NULL, 3, '', 0, 0, '2025-01-23 09:15:19', 3),
(263, 10, 'Sortiranje polja metodom spajanja', 'Kreirajte cjelobrojno polje od 10 elemenata. Omogućite korisniku unos vrijednosti u kreirano polje. Kreirajte potprogram koji polje sortira uzlazno metodom spajanja (mergesort).', 'Unesite vrijednosti polja:', 'Ispis sortiranog polja uzlazno.', '', NULL, 3, '', 0, 0, '2025-01-23 09:15:19', 4),
(264, 10, 'Najveća zajednička mjera', 'Zatražite od korisnika unos brojeva x i y. Vrijednost brojeva mora biti veća od 1. Ponavljajte unos brojeva dok korisnik ne napravi ispravan unos. Kreirajte rekurzivnu funkciju koja računa najveću zajedničku mjeru brojeva x i y.', 'Unesite brojeve x i y:', 'Najveća zajednička mjera brojeva x i y.', '', NULL, 3, '', 0, 0, '2025-01-23 09:15:19', 5),
(265, 11, 'Rad s tekstualnom datotekom - unos i ispis riječi', 'Kreirajte tekstualnu datoteku u koju korisnik treba unijeti 5 riječi (svaka riječ u novi red). Riječ može biti maksimalne dužine od 50 znakova. Nakon što korisnik unese 5 riječi u datoteku, ispišite sve unesene riječi iz datoteke na ekran.', 'Unesite 5 riječi (svaka riječ do 50 znakova):', 'Riječi unesene u datoteku i ispisane na ekran.', '', NULL, 3, '', 0, 0, '2025-01-23 09:17:09', 1),
(266, 11, 'Rad s tekstualnom datotekom - prebrojavanje slova', 'Kreirajte tekstualnu datoteku u koju generirate 10 malih slova engleske abecede (svaki znak u novi red). Ispišite sve znakove iz datoteke u jednom retku, znakovi odvojeni razmacima. Nakon toga prebrojite i ispišite koliko se u datoteci nalazi samoglasnika, a koliko suglasnika.', 'Unos nije potreban, generira se datoteka sa slovima.', 'Ispis slova u jednom retku, broj samoglasnika i suglasnika.', '', NULL, 3, '', 0, 0, '2025-01-23 09:17:09', 2),
(267, 11, 'Binarna datoteka - rad s korisničkim podacima', 'Kreirajte slog (strukturu) za unos imena, adrese i broja telefona korisnika. Kreirajte ponavljajući izbornik u kojem će opcija 1 biti unos novog korisnika u binarnu datoteku, opcija 2 ispis podataka o svim korisnicima iz binarne datoteke, a opcija 3 pretraživanje binarne datoteke na temelju telefonskog broja (korisnik unosi traženi telefonski broj, a ispisuje se prvi zapis iz datoteke koji ima traženi telefonski broj). Opcija 9 je izlaz iz programa.', 'Unesite opciju iz izbornika: 1 (unos korisnika), 2 (ispis svih korisnika), 3 (pretraživanje), 9 (izlaz).', 'Ispis podataka o korisnicima ili pretraživanje po telefonskom broju.', '', NULL, 3, '', 0, 0, '2025-01-23 09:17:09', 3),
(268, 11, 'Binarna datoteka - zapis podataka o pravokutnicima', 'Kreirajte slog (strukturu) za unos stranica (dužine stranica a i b), opsega (2*a+2*b) i površine (a*b) pravokutnika. U binarnu datoteku generirajte 10 pravokutnika (dužine stranica se trebaju generirati u rasponu od 10 do 30, a opseg i površina se računaju na temelju dužina stranica). Prvo ispišite sve zapise iz binarne datoteke, a nakon toga ispišite sve neparne zapise iz datoteke.', 'Nije potreban unos.', 'Ispis svih zapisa iz datoteke i neparnih zapisa.', '', NULL, 3, '', 0, 0, '2025-01-23 09:17:09', 4);
INSERT INTO `spcp_tasks` (`id`, `lesson_id`, `title`, `description`, `input`, `output`, `solution`, `explanation`, `visibility`, `public_id`, `solution_status`, `has_input`, `created_at`, `difficulty`) VALUES
(269, 11, 'Binarna datoteka - binarno pretraživanje', 'Kreirajte binarnu datoteku u kojoj će pojedini zapis biti cjelobrojna vrijednost. U datoteku generirajte 20 brojeva, počevši od broja 5, a svaki idući broj uvećan za nasumičnu vrijednost u rasponu od 5 do 10. Ispišite sadržaj cijele binarne datoteke, brojevi u jednom retku, odvojeni razmakom. Nakon toga implementirajte binarno pretraživanje datoteke (korisnik unosi traženu vrijednost, a ispisuje se postoji li tražena vrijednost i na kojoj poziciji u datoteci).', 'Unesite traženu vrijednost za pretraživanje:', 'Ispis pozicije tražene vrijednosti u datoteci (ako postoji).', '', NULL, 3, '', 0, 0, '2025-01-23 09:17:09', 5),
(270, 11, 'PD: Kreiranje tekstualne datoteke i analiza', 'Kreirajte tekstualnu datoteku u koju korisnik treba unijeti nekoliko linija teksta. Nakon što korisnik unese sadržaj u datoteku, program treba ispisati svaku liniju teksta zajedno s njezinim rednim brojem i duljinom te linije.', NULL, NULL, '#include <iostream>\n#include <fstream>\n#include <cstring>\n\nusing namespace std;\n\nint main() {\n	ofstream dat_izlazna(\"1 primjer - tekst.txt\");\n	if (!dat_izlazna) {\n		cerr << \"Neuspjelo otvaranje datoteke!\" << endl;\n		return 1;\n	}\n	cout << \"Unesite nekoliko linija teksta. Za kraj unosa unesite praznu liniju:\\n\";\n	string linija;\n	while (true) {\n		getline(cin, linija);\n		if (linija.empty()) break;\n		dat_izlazna << linija << endl;\n	}\n	dat_izlazna.close();\n	ifstream dat_ulazna(\"1 primjer - tekst.txt\");\n	if (!dat_ulazna) {\n		cerr << \"Neuspjelo otvaranje datoteke!\" << endl;\n		return 1;\n	}\n	char linija_c[10000];\n	short broj_linije = 1;\n	cout << \"\\n-------------------------------------------\\n\";\n	while (dat_ulazna.getline(linija_c, 10000)) {\n		cout << broj_linije++ << \" |\\t \" << linija_c << \" (\" << strlen(linija_c) << \")\\n\";\n	}\n	cout << \"-------------------------------------------\\n\";\n	dat_ulazna.close();\n	return 0;\n}', NULL, 1, '', 0, 0, '2025-01-23 12:29:54', 1),
(271, 11, 'PD: Otvaranje i analiza postojeće datoteke', 'Otvorite postojeću tekstualnu datoteku, ispišite njezin sadržaj s rednim brojevima i duljinom svake linije.', NULL, NULL, '#include <iostream>\n#include <cstring>\n#include <fstream>\n\nusing namespace std;\n\nint main() {\n	ifstream dat_ulazna(\"2 primjer - tekst.txt\");\n	if (!dat_ulazna) {\n		cerr << \"Neuspjelo otvaranje datoteke!\" << endl;\n		return 1;\n	}\n	char linija[10000];\n	short broj_linije = 1;\n	cout << \"\\n-------------------------------------------\\n\";\n	while (dat_ulazna.getline(linija, 10000)) {\n		cout << broj_linije++ << \" |\\t \" << linija << \" (\" << strlen(linija) << \")\\n\";\n	}\n	cout << \"-------------------------------------------\\n\";\n	dat_ulazna.close();\n	return 0;\n}', NULL, 1, '', 0, 0, '2025-01-23 12:29:54', 1),
(277, 13, 'Zadatak 1', 'Na početku programa omogućite korisniku unos prirodnih brojeva sve dok ne unese negativan broj. Program treba izračunati i ispisati zasebno: Zbroj svih unesenih parnih prirodnih brojeva. U novom retku umnožak svih unesenih prirodnih neparnih brojeva. Ako korisnik unese negativan broj na početku, program završava bez ispisa.', NULL, NULL, '#include <iostream>\r\nusing namespace std;\r\n\r\nint main() {\r\n    /* S obzirom na to da se unose prirodni brojevi (pozitivni cijeli brojevi),\r\n    koristimo `unsigned int` jer ono ne podržava negativne vrijednosti.*/\r\n    unsigned int x;\r\n    /* Varijabla `suma_parnih` započinje s vrijednošću 0 kao neutralan element \r\n    Varijabla `umnozak_neparnih` postavljena je s 1 zbog pravila u množenju */\r\n    unsigned int suma_parnih = 0, umnozak_neparnih = 1;\r\n\r\n    /*Logička varijabla `y` koristi se kako bismo pratili je li korisnik unio\r\n    barem jedan pozitivan broj. Ako nije, na kraju programa nema ispisa rezultata.*/\r\n    bool y = false;\r\n\r\n    /*Varijabla `pom` koristi se kao pomoćna za provjeru unosa negativnih brojeva.\r\n    Iako je `x` tipa `unsigned int`, negativni brojevi unose se kao `int` \r\n    i kasnije se provjeravaju kroz ovu varijablu.*/\r\n    int pom;\r\n\r\n    // Petlja za unos prirodnih brojeva (pozitivnih cijelih brojeva).\r\n    do {\r\n    	//unos prirodnog broja\r\n        cin >> x;\r\n\r\n        /* Da bismo provjerili je li unesen broj negativan (što `unsigned int` ne podržava),\r\n        unos kopiramo u pomoćnu varijablu `pom` tipa `int`. Ova varijabla omogućuje\r\n        pravilnu provjeru negativnih vrijednosti jer `unsigned int` pretvara negativne brojeve\r\n        u velike pozitivne vrijednosti.*/\r\n        pom = x;\r\n\r\n        // Ako je unesen broj veći od 0, obrađujemo ga.\r\n        if (pom > 0) {\r\n            y = true; // Postavljamo `y` na `true`, jer je unesen barem jedan pozitivan broj.\r\n\r\n            // Provjeravamo je li broj paran.\r\n            if (pom % 2 == 0) {\r\n                suma_parnih += pom; // Ako je broj paran, dodajemo ga u zbroj.\r\n            } else {\r\n                umnozak_neparnih *= pom; // Ako je broj neparan, množimo ga u umnožak.\r\n            }\r\n        }\r\n\r\n    } while (pom > 0); // Petlja se ponavlja dok se ne unese negativan broj.\r\n\r\n    // Ako je unesen barem jedan pozitivan broj (`y == true`), ispisujemo rezultate.\r\n    if (y) {\r\n        cout << endl << suma_parnih;       // Ispisuje se zbroj parnih brojeva.\r\n        cout << endl << umnozak_neparnih; // Ispisuje se umnožak neparnih brojeva.\r\n        cout << endl;\r\n    }\r\n\r\n    system(\"pause\");\r\n    return 0;\r\n}', 'Program koristi petlju za unos brojeva gdje se svaki broj provjerava je li paran (dodaje se zbroju) ili neparan (množi se u umnožak), sve dok korisnik ne unese negativan broj. Pomoćna varijabla tipa int omogućuje provjeru negativnog unosa, dok se rezultati ispisuju samo ako je unesen barem jedan pozitivan broj.', 1, '', 0, 0, '2025-01-23 12:35:34', 1),
(278, 13, 'Zadatak 2', 'Kreirajte slog (strukturu) koja sadrži polje od 10 elemenata i jednu cjelobrojnu varijablu \"K\". U polje unesite nasumične brojeve iz raspona od 5 do 15. Omogućite korisniku unos vrijednosti u varijablu \"K\". 1. Ispišite sve vrijednosti iz polja koje su djeljive s vrijednošću varijable \"K\". 2. Ispišite sve vrijednosti iz polja koje nisu djeljive s \"K\". Program završava ispisom svih elemenata polja u obrnutom redoslijedu.', NULL, NULL, '', NULL, 3, '', 0, 0, '2025-01-23 12:35:34', 2),
(279, 13, 'Zadatak 3', 'Kreirajte polje od 15 elemenata koje se sastoji od slučajno generiranih velikih slova engleske abecede. 1. Ispišite sadržaj polja u jednom retku, znakovi odvojeni razmakom. 2. Sortirajte polje abecedno, od A do Z. 3. Ponovno ispišite sortirano polje.', NULL, NULL, '', NULL, 3, '', 0, 0, '2025-01-23 12:35:34', 3),
(280, 13, 'Zadatak 4', 'Kreirajte dva potprograma istog imena (Izracun) za: 1. Računanje površine kvadra (a*b + 2*b*c + 2*a*c). 2. Računanje volumena valjka (PI*r*r*h). U glavnom programu omogućite korisniku unos dimenzija kvadra (a, b, c) i dimenzija valjka (r, h). Pozovite potprograme za izračune i ispišite rezultate.', NULL, NULL, '', NULL, 3, '', 0, 0, '2025-01-23 12:35:34', 4),
(281, 13, 'Zadatak 5', 'Kreirajte slog (strukturu) sa sljedećim atributima: ID proizvoda (broj), naziv proizvoda (tekst), količina (broj). Kreirajte vezanu listu koja se sastoji od elemenata tipa kreirane strukture. Implementirajte ponavljajući izbornik s opcijama: 1. Unos novog proizvoda na kraj liste. 2. Brisanje proizvoda prema ID-u. 3. Ispis svih elemenata liste. Opcija 9 završava program.', NULL, NULL, '', NULL, 3, '', 0, 0, '2025-01-23 12:35:34', 5),
(282, 13, 'Ogledna završna vježba 1.zadatak', 'Na početku programa omogućite korisniku unos jedne cjelobrojne vrijednosti. Ponavljajte unos sve dok korisnik ne unese broj nula. Nakonn što korisnik unese broj nula, ispišite posebno zbroj unesenih parnih brojeva i posebno zbroj unesenih neparnih brojeva. ogledna završna vježba', '', '', '#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n	int N;\r\n	int zbrojp = 0;\r\n	int zbrojnp = 0;\r\n	do{\r\n		cin >> N;\r\n		if (N % 2 == 0){\r\n			zbrojp += N;\r\n		}\r\n		else if (N%2 != 0){\r\n			zbrojnp += N;\r\n		}\r\n	}while(N!=0);\r\n	cout << \"Zbroj parnih brojeva = \" << zbrojp << endl;\r\n	cout << \"Zbroj neparnih brojeva = \" << zbrojnp << endl;\r\n	cout << endl;\r\n	system(\"pause\");\r\n	return 0;\r\n}\r\n\r\n', '', 1, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 0, 0, '2025-01-23 12:39:03', 1),
(283, 13, 'Ogledna završna vježba 2.zadatak', 'Kreirajte slog(strukturu) u kojoj će se nalaziti polje od 7 elemenata i jedna cjelobrojna varijabla \"X\". U polje generirajte nasumične brojeve u rapsonu od 1 do 10. Omogućite korisniku unos vrijednosti u varijablu \"X\". Iz tog polja psoebno ispišite sve vrijednosti koje su manje od vrijednosti u varijabli \"X\", te nakon toga ispišite sve vrijednosti iz polja koje su veće ili jednake vrijednosti u varijabli \"X\".  ogledna završna vježba', '', '', '', '', 1, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 0, 0, '2025-01-23 13:23:34', 2),
(284, 13, 'Ogledna završna vježba 3.zadatak', 'Kreirajte polje od 12 elemenata te u njega generirajte nasumična mala slova engleske abecede. Ispišite polje u jednom retku, znakovi odvojeni razmakom. Polje sortirajte mjehurićastim sortiranjem, od slova z do slova a. nakon sortitranja ispišite polje u jednom retku, znakovi odvojeni razmakom. ogledna završna vježba', '', '', '', '', 1, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 0, 0, '2025-01-23 13:25:48', 3),
(285, 13, 'Ogledna završna vježba 4.zadatak', 'Kreirajte dva potprograma istog imena (Izracun) za računanje volumena kocke (a*a*a9 i volumena kugle (4/3*r*r*r*PI). Izračunati rezultati trebaju biti povratne vrijednosti tih potprograma. U glavnom potprogramu (main) omogućite korisniku unos dužine stranice kocke (a) te radijus kugle (r). Pozovite izvođenje kreiranih potprograma: potprogramima proslijedite unose korisnika, a rezultate ispišite korisniku na ekran.', '', '', '', '', 1, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 0, 0, '2025-01-23 13:28:30', 4),
(286, 13, 'Ogledna završna vježba 5.zadatak', 'Kreirajte slog (strukturu) sa sljedećim atributima: šifra udžbenika (primarni ključ), naziv udžbenia i broj stranica. Kreirajte vezanu  listu koja će se sastojati od elemenata tipa kreirane strukture. Implementirajte ponavljajući izbornik u kojem će opcija 1 biti unos jednog novog elementa na kraj vezane liste, a opcija 2 ispis svih elemenata iz vezane liste (ispis svih atributa za svaki element). Opcija 9 treba biti izlaz iz programa.', '', '', '', '', 1, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 0, 0, '2025-01-23 13:32:14', 5),
(287, 13, 'Višekratnici brojeva', 'Na početku programa omogućite korisniku unos pozitivnih decimalnih brojeva sve dok ne unese broj veći od 100. Program treba izračunati i ispisati zbroj svih unesenih brojeva koji su višekratnici broja 5, ukupan broj svih unesenih brojeva koji su višekratnici broja 3. Ako korisnik odmah unese broj veći od 100, program završava bez ispisa. -osmislio AI', '', '', '', '', 1, 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 0, 0, '2025-01-23 18:48:57', 1),
(288, 13, 'Selekcija parnih i neparnih brojeva', 'Program omogućuje korisniku unos prirodnih brojeva sve dok ne unese negativan broj. Program zatim pronalazi i ispisuje najmanji uneseni parni broj, kao i najveći uneseni parni broj. Ako korisnik ne unese nijedan parni broj, program ispisuje poruku: \"Nema parnih brojeva.\" Ako korisnik unese negativan broj na početku, program završava bez ispisa.', '', '', '', '', 1, 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 0, 0, '2025-01-23 18:49:34', 1),
(289, 13, 'AI: Analiza podataka iz tekstualne datoteke ', '*** Napišite program koji analizira podatke o studentima i njihovim ocjenama iz tekstualne datoteke. Svaki redak u datoteci sadrži ime i prezime studenta, nakon čega slijedi popis predmeta i ocjena za te predmete u formatu: ImePrezime,Predmet1:Ocjena,Predmet2:Ocjena,...,PredmetN:Ocjena. Program treba učitati podatke iz datoteke, obraditi ih te omogućiti izračun prosjeka ocjena za svakog studenta. Nakon obrade, program treba pronaći studenta s najvišim prosjekom ocjena i predmet s najvišim prosjekom ocjena.\r\n\r\nProgram također treba poredati sve studente prema njihovim prosjecima ocjena, od najvećeg prema najmanjem, te ispisati taj poredak. Na kraju, potrebno je ispisati ime studenta s najvišim prosjekom ocjena i predmet s najvišim prosjekom ocjena. U obradi podataka koristite funkcije za pojednostavljenje implementacije, petlje za iteraciju kroz podatke, nizove znakova za manipulaciju tekstom, pokazivače za rad s podacima, te tekstualne datoteke za unos podataka. Program mora osigurati ispravan rad čak i ako u datoteci ima različit broj predmeta za svakog studenta. -kreirala umjetna inteligencija', '', '', '', '', 1, 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 0, 0, '2025-01-23 19:26:19', 6),
(290, 9, 'AI: palindrom', 'Izradite program koji će pomoću rekurzivne funkcije provjeravati je li unesena riječ palindrom. Program ne smije koristiti petlje za provjeru!  -kreirala umjetna inteligencija', '', '', '', '', 1, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 0, 0, '2025-01-24 16:55:37', 4),
(291, 9, 'Rekurzivna zamjena slova', 'Izradite program koji će pomoću rekurzivne funkcije za unesenu rečenicu ako je slovo na parnom mjestu zamjeniti iz velikog u malo i obrnuto, program ne smije koristiti petlje.\r\n', '', '', '', '', 1, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 0, 0, '2025-01-24 17:03:13', 5),
(292, 13, 'Ogledna završna vježba 3.zadatak - modificirano', 'Kreirajte polje od 15 elemenata te u njega generirajte nasumična velika slova engleske abecede. Ispišite polje u jednom retku, znakovi odvojeni razmakom. Polje sortirajte sortiranje umetanjem, od slova A do slova Z. Nakon sortitranja ispišite polje u jednom retku, znakovi odvojeni razmakom. modificirana ogledna završna vježba', '', '', '', '', 1, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 0, 0, '2025-01-24 17:53:20', 3),
(293, 13, 'Ogledna završna vježba 3.zadatak C - modificirano ', 'Kreirajte polje od 10 elemenata te u njega generirajte nasumične decimalne brojeve od 1.1 do 9.9. Ispišite polje u jednom retku, brojevi odvojeni razmakom. Polje sortirajte sortiranje izborom, od najvećeg prema najmanjem. Nakon sortitranja ispišite polje u jednom retku, brojevi odvojeni razmakom. modificirana ogledna završna vježba', '', '', '', '', 1, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 0, 0, '2025-01-24 17:55:04', 3),
(294, 13, 'Ogledna završna vježba 3.zadatak D - modificirano', 'Kreirajte polje od 10 elemenata te u njega generirajte nasumična mala slova engleske abecede. Ispišite polje u jednom retku, znakovi odvojeni zarezom. Polje sortirajte sortiranje ZAMJENOM, od slova z do slova a. Nakon sortitranja ispišite polje u jednom retku, znakovi odvojeni zarezom. modificirana ogledna završna vježba', '', '', '', '', 1, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 0, 0, '2025-01-24 17:57:32', 3),
(295, 13, 'Ogledna završna vježba 2.zadatak - modificirano', 'Kreirajte slog(strukturu) u kojoj će se nalaziti polje od 10 elemenata i jedna cjelobrojna varijabla \"A\". U polje generirajte nasumične decimalne brojeve u rasponu od 1 do 10. Omogućite korisniku unos vrijednosti u varijablu \"A\". Iz tog polja posebno ispišite sve vrijednosti koje su manje ili jednake vrijednosti u varijabli \"A\", te nakon toga ispišite sve vrijednosti iz polja koje su veće od vrijednosti u varijabli \"A\". modificirana ogledna završna vježba', '', '', '', '', 1, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 0, 0, '2025-01-24 17:59:45', 2),
(296, 13, 'Izračun opsega i površine pravokutnika', 'Kreirajte potprogram imena (Izracun) za računanje opsega i površine pravokutnika. U glavnom potprogramu (main) omogućite korisniku unos dužine stranica a i b. Izračun opsega i površine mora se odvijavti u potprogramu Izracun. U glavnom programu ispišite opseg i površinu korisniku na ekran. ', '', '', '', 'Potprogram Izracun kroz reference vraća više vrijednosti, omogućujući izračun opsega i površine pravokutnika bez potrebe za naprednijim strukturama podataka. Funkcija mijenja vrijednosti varijabli proslijeđenih kao reference, a rezultati se ispisuju u glavnom programu. Potprogram Izracun nema povratnih vrijednosti.', 1, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 0, 0, '2025-01-24 18:11:52', 4),
(297, 14, 'OGLEDNA ZAVRSNA VJEZBA - Zadatak 1', 'Kreirajte cjelobrojno polje od 5 elemenata te u njega generirajte nasumične brojeve u rasponu od 2 do 8. Nakon toga kreirajte znakovno polje iste veličine te u njega generirajte nasumične simbole + i -. Prođite kroz polje sa znakovima i na pozicijama na kojima se nalazi +, na tim pozicijama u polju s brojevima vrijednost povećajte za 1, a na pozicijama na kojima se nalazi simbol -, na tim pozicijama u polju s brojevima brojeve umanjite za 1.', NULL, NULL, '/*\r\nKreirajte cjelobrojno polje od 5 elemenata te u njega generirajte nasumične brojeve u rasponu od 2 do 8. \r\nNakon toga kreirajte znakovno polje iste veličine te u njega generirajte nasumične simbole + i -. \r\nProđite kroz polje sa znakovima i na pozicijama na kojima se nalazi +, na tim pozicijama u polju s brojevima vrijednost povećajte za 1\r\n, a na pozicijama na kojima se nalazi simbol -, na tim pozicijama u polju s brojevima brojeve umanjite za 1.\r\n*/\r\n\r\n#include <iostream>\r\n#include <cstdlib>\r\n#include <ctime>\r\nusing namespace std;\r\nint main(){\r\n	srand(time(0));\r\n	int a[5];\r\n	for (int i=0; i<5; i++){\r\n		a[i]=rand()%7+2;\r\n		cout<<a[i];\r\n	}\r\n	cout<<endl;\r\n	char b[5];\r\n	for(int i=0; i<5; i++){\r\n		if(rand()%2){\r\n			b[i]=\'+\';\r\n		}else{\r\n			b[i]=\'-\';\r\n		}\r\n		cout<<b[i];\r\n	}\r\n	cout<<endl;\r\n	for (int i=0; i<5; i++){\r\n		if(b[i]==\'+\'){\r\n			a[i]+=1;\r\n		}else if(b[i]==\'-\'){\r\n			a[i]-=1;\r\n		}\r\n		cout<<a[i];\r\n	}\r\n	cout<<endl;\r\n	\r\n}', NULL, 3, '', 0, 0, '2025-01-26 23:58:02', 1),
(298, 14, 'OGLEDNA ZAVRSNA VJEZBA - Zadatak 2', 'Kreirajte znakovno polje veličine 100 znakova. Omogućite korisniku unos rečenice u polje, maksimalno 100 znakova. Ispišite unesenu rečenicu, no prilikom ispisa izbacite sve znakove koji nisu mala slova engleske abecede, razmaci ili specijalni znakovi.', NULL, NULL, '#include <iostream>\r\n#include <cstring>\r\nusing namespace std;\r\n\r\nint main() {\r\n    char a[100];\r\n\r\n    cout << \"Unesite recenicu: \";\r\n    cin.getline(a, 100);\r\n\r\n    cout << \"Filtrirana recenica: \";\r\n    for (int i = 0; i < strlen(a); i++) {\r\n        // Ispisujemo znak samo ako nije veliko slovo\r\n        if (!(a[i] >= \'A\' && a[i] <= \'Z\')) {\r\n            cout << a[i];\r\n        }\r\n    }\r\n    cout << endl;\r\n\r\n    return 0;\r\n}\r\n', NULL, 3, '', 0, 0, '2025-01-26 23:58:02', 3),
(299, 14, 'OGLEDNA ZAVRSNA VJEZBA - Zadatak 3', 'Kreirajte cjelobrojno polje od 30 elemenata te u njega generirajte nasumične vrijednosti od 10 do 99. Prvo ispišite u prvom retku cijelo polje, brojevi odvojeni razmakom. Nakon toga ispišite sljedeće sume: zbroj prvog i drugog broja, drugog i trećeg broja itd. (Napomena: ispis suma morate realizirati korištenjem petlje).', NULL, NULL, '#include <iostream>\r\n#include <cstdlib>\r\n#include <ctime>\r\n#include <cstring>\r\nusing namespace std;\r\nint main(){\r\n	srand(time(0));\r\n	int a[30];\r\n	for (int i=0; i<30; i++){\r\n		a[i]=rand()%90+10;\r\n		cout<<a[i]<<\" \";\r\n	}\r\n	cout<<endl;\r\n	for (int i=0; i<30; i++){\r\n		if(a[i]<29){\r\n			cout<<a[i]+a[i+1]<<\" \";\r\n		}else{\r\n			cout<<a[i]+a[0]<<\" \";//za zbroj zadnjeg i prvog\r\n		}\r\n	}\r\n	cout<<endl;\r\n}', NULL, 3, '', 0, 0, '2025-01-26 23:58:02', 2),
(300, 14, 'OGLEDNA ZAVRSNA VJEZBA - Zadatak 4', 'Kreirajte polje od 20 elemenata te u njega upišite nasumične decimalne brojeve u rasponu od 1 do 9, na dvije decimale preciznosti (pomoć: generirajte brojeve u rasponu od 100 do 999 te generirani broj podijelite sa 100). Ispišite polje, u jednom retku, brojevi odvojeni razmakom. Polje sortirajte sortiranjem umetanjem, od najmanjeg do najvećeg broja. Nakon sortiranja polje ispišite u jednom retku, brojevi odvojeni razmakom.', NULL, NULL, '#include<iostream>\r\n#include<ctime>\r\n#include<cstdlib>\r\nusing namespace std;\r\nint main(){\r\n	srand(time(0));\r\n	double a[20];\r\n	for(int i=0; i<20; i++){\r\n		double pom=rand()%900+100;\r\n		a[i]=pom/100;\r\n		cout<<a[i]<<\" \";\r\n	}\r\n	cout<<endl;\r\n	for(int i=1; i<20; i++){\r\n		int j =i-1;\r\n		double pom=a[i];\r\n		while (j>=0 && a[j]>pom){\r\n			a[j+1]=a[j--];\r\n		}\r\n		a[j+1]=pom;\r\n	}\r\n	\r\n	for(int i=0; i<20; i++){\r\n		\r\n		cout<<a[i]<<\" \";\r\n	}\r\n	\r\nsystem(\"pause\");\r\nreturn 0;\r\n}\r\n', NULL, 3, '', 0, 0, '2025-01-26 23:58:02', 3),
(301, 14, 'OGLEDNA ZAVRSNA VJEZBA - Zadatak 5', 'Kreirajte polje od 10 elemenata te u polje na prvih 5 mjesta generirajte pozitivne brojeve u rasponu od 10 do 40, a u preostalih 5 mjesta negativne brojeve u rasponu od -10 do -40. Ispišite polje u jednom retku, brojevi odvojeni razmakom. Polje sortirajte tako da se na parnim indeksima nalaze pozitivni brojevi, sortirani od najmanjeg prema najvećem, a na neparnim indeksima negativni brojevi, sortirani od najmanjeg prema najvećem. Nakon sortiranja ispišite polje u jednom retku, brojevi odvojeni razmakom.', NULL, NULL, '', NULL, 3, '', 0, 0, '2025-01-26 23:58:02', 4),
(302, 14, 'OGLEDNA ZAVRSNA VJEZBA - Zadatak 6', 'Unesite niz prirodnih brojeva, sve dok se ne unese 0. Nakon toga u vezanu listu unijeti brojeve tako da oni budu sortirani silazno. Ispisati sortirane brojeve.', NULL, NULL, '', NULL, 3, '', 0, 0, '2025-01-26 23:58:02', 4),
(303, 14, 'OGLEDNA ZAVRSNA VJEZBA - Zadatak 7', 'Unesite prirodni broj N i N riječi. Napraviti funkciju koja provjerava je li riječ palindrom (čita li se sprijeda i straga jednako). Ispišite sve riječi koje su palindromi.', NULL, NULL, '', NULL, 3, '', 0, 0, '2025-01-26 23:58:02', 5),
(304, 14, 'OGLEDNA ZAVRSNA VJEZBA - Zadatak 8', 'Ispišite koliko se puta slovo X (unosi korisnik) javlja u tekstualnoj datoteci dat.txt. Potrebno je prebrojavati i ispisati koliko u datoteci ima velikih, koliko malih slova i koliko ima specijalnih znakova.', NULL, NULL, '', NULL, 3, '', 0, 0, '2025-01-26 23:58:02', 5),
(305, 14, 'OGLEDNA ZAVRSNA VJEZBA - Zadatak 9', 'Izradite program koji učitava podatke o studentima: ime i prezime, godinu studija, prosjek ocjena. Potrebno je podatke o studentima upisati u binarnu datoteku. Potrebno je ispisati imena i prezimena studenata koji imaju prosjek veći od zadanog i imena i prezimena studenata koji imaju prosjek manji od zadanog. Nakon toga potrebno je izvršiti pretraživanje po prosjeku i godini te ispisati sve one prosjeke koji su veći od zadanog, ali samo ako se radi o studentima zadane godine studija.', NULL, NULL, '', NULL, 3, '', 0, 0, '2025-01-26 23:58:02', 6),
(306, 14, 'Rendom zadatak generiraala umjetna intelgiencija', 'Omogućite korisniku unos ne više od 100 znakova za rečenicu a ispišite koliko se koje slovo pojavljuje te koje se slovo najviše i koliko puta javlja, ona slova koja nisu u tekstu ne smiju se ispisivati pretpostavlja se da korisnik unosi sva VELIKA slova ali ako unese malo potrebno ga je prihvatiti kao veliko, ostal i znakovi se ne uzima u obzir.', '', '', '/*\r\nNapravite program za sljedeći problem:\r\nUlaz: Tekst od najviše 100 slova.\r\nIzlaz: Slovo koje se u tekstu najviše i koliko se puta javlja.\r\n Slova koja se ne pojavljuju u tekstu ne smije se ispisivati. \r\n Velika i mala slova se broje zajedno. Ostali znakovi, kao što su brojevi i interpunkcijski znakovi, se ne broje.\r\n\r\n*/\r\n#include<iostream>\r\n#include <cstring>\r\nusing namespace std;\r\nint main(){\r\n	char  a[100];\r\n	int broj_pon[26];\r\n	cout<<\"Unesite tekst do 100 slova: \";\r\n	cin.getline(a,100);\r\n	\r\n	for (int j=0; j<26; j++){ broj_pon[j]=0;}\r\n	\r\n	int n=strlen(a);\r\n	\r\n	for (int i=0; i<n; i++){\r\n		if (a[i]>=\'a\' && a[i]<=\'z\') a[i]-=32;\r\n		if (a[i]>=\'A\'&& a[i]<=\'Z\') broj_pon[(a[i]-65)]+=1;\r\n	}\r\n	\r\n	char slovo=\'A\';\r\n	int max=0;\r\n	for (int j=0; j<26; j++){\r\n		if (broj_pon[j]!=0){\r\n			char n=\'A\'+j;\r\n			cout<<n<<\" - \"<<broj_pon[j]<<\" \";\r\n			if (broj_pon[j]>=max){\r\n				max=broj_pon[j];\r\n				slovo=n;\r\n			}\r\n		}\r\n	}\r\n	cout<<endl<<\"Najvise se ponavlja slovo: \"<<slovo<<\" i to \"<<max<<\" puta\"<<endl;\r\n	\r\n	\r\n	system(\"pause\");\r\n	return 0;\r\n}\r\n\r\n', '', 3, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 0, 0, '2025-01-27 18:15:43', 2),
(307, 14, 'Zadatak generirala umjetna inteligencija: udaljenosti', 'Omogućite korisniku unso prirodnog broja N, unos se ponavlja ako je pogrešan. Zatim korisnik unosi N unosa strukture koja se sastoji od koridenata i naziva točke, ono što program treba je odmah prilikom unosa sortira točke uzlazno po udaljenosti od nultočke.', '', '', '//NARAVNO DA POSTOJI BOLJE RJEŠENJE ali bolje išta nego ništa\r\n//ako rješite pošaljite na mail pa promjenim\r\n#include<iostream>\r\n#include<cmath>\r\n#include <cstring>\r\nusing namespace std;\r\n\r\ndouble udaljenost(double x, double y){\r\n	double z=sqrt((x*x)+(y*y));\r\n	return z;\r\n}\r\n\r\nstruct Prvi{\r\n	double x,y;\r\n	char a[20];\r\n	double u;\r\n};\r\n\r\n\r\n\r\n\r\nint main(){\r\n	int n=0;\r\n\r\n	do{\r\n		cout<<endl<<\"Unesite prirodan broj N: \";\r\n		cin>>n;\r\n	}while(n<=0);\r\n	\r\n	Prvi prvi[n];\r\n	double x,y;\r\n	for (int i=0; i<n; i++){\r\n		cout<<endl<<\"Unesite x:\";\r\n		cin>>x;\r\n		prvi[i].x=x;\r\n		cout<<endl<<\"Unesite y:\";\r\n		cin>>y;\r\n		prvi[i].y=y;\r\n		cin.ignore();\r\n		cout<<endl<<\"Unesite naziv:\";\r\n		cin.getline(prvi[i].a,20);\r\n		cout<<endl;		\r\n		\r\n		prvi[i].u=udaljenost(x,y);\r\n		\r\n		for (int j=0; j<=i; j++){\r\n			if (prvi[j].u>=prvi[i].u){\r\n				double e,f,d; char l[20];\r\n				e=prvi[j].x; f=prvi[j].y;\r\n				d=prvi[j].u; \r\n				strcpy(l,prvi[j].a);\r\n				\r\n				prvi[j].x=prvi[i].x;\r\n				prvi[j].y=prvi[i].y;\r\n				prvi[j].u=prvi[i].u;\r\n				strcpy(	prvi[j].a,prvi[i].a);\r\n				\r\n				prvi[i].x=e;\r\n				prvi[i].y=f;\r\n				prvi[i].u=d;\r\n				strcpy(	prvi[i].a,l);\r\n				\r\n				\r\n			}\r\n		}\r\n	}\r\n	for (int i=0; i<n; i++){\r\n		cout<<prvi[i].a<<\"-\";\r\n		cout<<prvi[i].u<<endl;\r\n	}\r\n	\r\n	system(\"pause\");\r\n	return 0;\r\n}', '//NARAVNO DA POSTOJI BOLJE RJEŠENJE ali bolje išta nego ništa (pitajte chatGPT)\r\n//ako rješite pošaljite na mail pa promjenim', 3, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 0, 0, '2025-01-27 18:56:38', 3);

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

CREATE TABLE `users` (
  `ID` int(11) NOT NULL,
  `public_id` varchar(255) NOT NULL,
  `first_name` varchar(255) NOT NULL,
  `last_name` varchar(255) NOT NULL,
  `email` varchar(255) NOT NULL,
  `password` varchar(255) NOT NULL,
  `pass_token` varchar(255) NOT NULL,
  `pass_expiry` datetime NOT NULL,
  `active` int(11) NOT NULL,
  `role` tinyint(1) NOT NULL DEFAULT 1,
  `foi` int(11) NOT NULL,
  `created_at` timestamp NULL DEFAULT current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

--
-- Dumping data for table `users`
--

INSERT INTO `users` (`ID`, `public_id`, `first_name`, `last_name`, `email`, `password`, `pass_token`, `pass_expiry`, `active`, `role`, `foi`, `created_at`) VALUES
(69, '9d8e28182fd29962d9c0a0fce526d5838c36c6e28b978a38362030653a8b8409', 'Hidden', 'Hidden', 'user69@hidden.com', '$2y$10$CmB5fN7YjNggBZF794iYQ.PKIiAG7x6rkllLU.B1aOX/4LvA7tqjy', '', '0000-00-00 00:00:00', 1, 3, 5, '2025-01-18 14:26:27'),
(93, 'c2ee59ef348de06054f5ef0ff963376f972ee519850251ae5ba9572cd9a262b1', 'Hidden', 'Hidden', 'user93@hidden.com', '$2y$10$0dXg/r4cCVDYSHZaInZLNe1e1q8/O3epfRrRzPQSyNVknEk2KpBH6', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-18 20:07:49'),
(97, '7b50b79b95e58664121cf686bb535cceaadba797e0671cec97848aae5c6c01fa', 'Hidden', 'Hidden', 'user97@hidden.com', '$2y$10$NjMMIQK.OEEpD6gbf.3ZceZg8onkta1vEe8xDKRnZKkwiC6MlG4lW', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-20 12:00:47'),
(98, '222b8cf91151f8d193e3d65aad734cb1bf92ebd38c2ad13f0d7611cb467428c1', 'Hidden', 'Hidden', 'user98@hidden.com', '$2y$10$sWGQbIKs48Xm.53F6PPpgeB/aZbvON03KnaTA6mTlL2cQo9gF/DPq', '', '0000-00-00 00:00:00', 1, 1, 2, '2025-01-22 12:53:21'),
(99, '96f7dcc5d9549abcaaeed4850d1fe40d6b0d5776a557a74d631e2f3b85e7e068', 'Hidden', 'Hidden', 'user99@hidden.com', '$2y$10$ox6ckmtPqRI7scMTlwXTnulOyKKzQkSoxFKralkHWf27no.Bx88Y2', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-23 14:06:01'),
(100, 'ba20002329175303317f28b6ca9ab86a0875ca03017fd4931fde29c9a211f1bf', 'Hidden', 'Hidden', 'user100@hidden.com', '$2y$10$3OWmswjoj12B0D4XbpmiEekE.Zd3F6JOCvzcp.CBDXybmgyWUPEQW', '', '0000-00-00 00:00:00', 0, 1, 5, '2025-01-23 14:14:50'),
(102, '828f780d414e88dd1a6bedf766ca33afe922adb2751dd7ff80e3e6015e5dfc53', 'Hidden', 'Hidden', 'user102@hidden.com', '$2y$10$cs/jGDPRkXTEwuF6TLiIj.Ha/oMYrBV.MaZDmz/6e9.pI5mVTvvRW', '', '0000-00-00 00:00:00', 1, 1, 2, '2025-01-23 14:15:35'),
(104, '1e6446e64c6e02ef5028de71eb79d965a8ec07a499f92dfd46d900f68894a42c', 'Hidden', 'Hidden', 'user104@hidden.com', '$2y$10$3ZZwdRtHp9iVYLAYWcBHbeJxoL5bDmWpX.Kj32/T7XiBJr3TVPsq6', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-23 14:16:26'),
(105, '478b2a51be82a36e19b8344c03ac701ade0b19d8bff9a5f7ed48a6d1daebbf5c', 'Hidden', 'Hidden', 'user105@hidden.com', '$2y$10$2AERryjWDwz3QNKppABBpOLnraPIHWTaLqmAFvaC2pSd3TXG6FlM2', '', '0000-00-00 00:00:00', 0, 1, 2, '2025-01-23 14:27:13'),
(106, '1d0586ee37e1bcd2ecada05ff695b0a5a83fecb204077c417fd8820ab0c78a69', 'Hidden', 'Hidden', 'user106@hidden.com', '$2y$10$gjXOYodOLrhWs32imQki0./oMkVuMb4HrncNJdmZgTqb6uIpFauea', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-23 14:27:50'),
(107, '16c2085c5a22bbfda66a99b47d16dea527e2cff14e28ea161d18e6222b88509d', 'Hidden', 'Hidden', 'user107@hidden.com', '$2y$10$kwO9vvawXR1cMw0oOP8xFOFMUZ37l2H4kVattc6WilY3ik6T54Uwm', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-23 14:39:11'),
(108, '01edf4c95a597b8c3bcedea003071556f4ec1040d51bf64a69bd940d678853af', 'Hidden', 'Hidden', 'user108@hidden.com', '$2y$10$CxqsAUDQeFKSjvITU9aZ0OXl0Q7Qw0qXSI45YP6a2sUoSaknF1TdW', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-23 14:39:47'),
(109, '49a155a6cb84f0c492cba4b86ba9b60d02a9fbf40acdb34759136cf0c9c65b1c', 'Hidden', 'Hidden', 'user109@hidden.com', '$2y$10$0hbp8bPBvAl76yubeZgn3OcyPNILQvyIa9GX3OXrIHciUMI0A3RFW', '', '0000-00-00 00:00:00', 0, 1, 2, '2025-01-23 15:05:33'),
(110, '7f5a9bbe7ced28113870c1c58588597b0ec1fd40794f49791b79bc527ed4b753', 'Hidden', 'Hidden', 'user110@hidden.com', '$2y$10$jZgVUElVUx3WEOtADnajQuOjrc4s8zcbc22GF6Rt/3cEaVYFXcfuG', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-23 15:10:28'),
(111, 'f4935d14cd392eb4556b9258c77cebc1bf038bb6fc8fb3a5b2573871e836ea06', 'Hidden', 'Hidden', 'user111@hidden.com', '$2y$10$6SWNB7Q4iJM1dU77VsIsAeYoejxJBG9FqbLndd8k5fKHjyhCsrNbK', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-23 15:10:49'),
(112, '8b6a0ecd32139fb20343cad223e328be663e4abea6a64519aa2b3c20d6928ac8', 'Hidden', 'Hidden', 'user112@hidden.com', '$2y$10$qzv0D3AJIMShBHQdqeXOne8ntuK6nKdv9dCWrbEWZDXCeZVU0ObmO', '', '0000-00-00 00:00:00', 0, 1, 2, '2025-01-23 15:53:23'),
(113, '7c7bf32bc77fa1f28df22d3841ed1ab5365924198cc0c244a321b4f8e293889d', 'Hidden', 'Hidden', 'user113@hidden.com', '$2y$10$c8/8sLA2clNkv3DEXi6z..3UlZsCpOnR0So/JqdNVK/DAq8VifmBS', '', '0000-00-00 00:00:00', 1, 1, 2, '2025-01-23 16:00:21'),
(114, '5ab2efa659df7fe84b31f0e01e871f5e6c48849717ee515f267362d4cb756e4e', 'Hidden', 'Hidden', 'user114@hidden.com', '$2y$10$qW1hkcHaK0SP.nYvRuxepe5zoJBZOTH5Z59nW521ec0t8Xy1RX5he', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-23 16:58:36'),
(115, '60a0b96b3fc627169b67b4c25d296bbcd8f7a1443a9c6711ce1c6f2738ff3ac8', 'Hidden', 'Hidden', 'user115@hidden.com', '$2y$10$JiBiVt0khYkQuzMAW1lPguZF.12hzX4POIwApiWdWlQGA8CVBvW3q', '', '0000-00-00 00:00:00', 0, 1, 5, '2025-01-23 16:58:45'),
(116, '0507efb1c3bdf9effc1b5c92df0b53fbd752856c2e7abb2193e87da551cdb191', 'Hidden', 'Hidden', 'user116@hidden.com', '$2y$10$3T5QhKi3CuHT2nTRt6WVo.KPIqiUWZQ8m8w.X2fUO3DXIgRuxTY8a', '', '0000-00-00 00:00:00', 1, 1, 2, '2025-01-23 17:03:02'),
(117, '792c22aa9f78873ddcce7bc91c320fb413c0a9778a30cea88920b2614b3e4b31', 'Hidden', 'Hidden', 'user117@hidden.com', '$2y$10$TgtQ/EwN.auPi2GXnpa6zu.OS/h/lLZX5UEaZUKCSMSWExc9ZTRvC', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-23 17:10:49'),
(118, 'fc2758e5b1a37664fc074de887110394b5d20769f1e8a847f57fca8f190ed8ef', 'Hidden', 'Hidden', 'user118@hidden.com', '$2y$10$7G2p1JOyl6kXVwH/dPx1Rec30.WE8uSxa1mVi1MeX3ivEvv2eKGai', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-23 17:11:58'),
(119, '20db627e15cdb661dba492f8d362d137ec430036f98a5cead20ff16a03e5c5af', 'Hidden', 'Hidden', 'user119@hidden.com', '$2y$10$PjrD9CotkLAUA7siMHR0kObW.FSdalWWho1wgicR2rMjTU2FSgN9e', '', '0000-00-00 00:00:00', 0, 1, 2, '2025-01-23 17:19:38'),
(120, 'e504b5a0db1cf8a5733c55f325867b190bd82a491173de3483bef022dab233a6', 'Hidden', 'Hidden', 'user120@hidden.com', '$2y$10$9LClssgzzKmCbVn/rZtc6OX3g4PMcn9t4eI/QEbVOD3rAhClYHZbO', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-23 17:20:19'),
(121, 'd2d468ff74d900dbcb55dfcc618c54418573c5a85306d8ae5a555ac62c0ff6cb', 'Hidden', 'Hidden', 'user121@hidden.com', '$2y$10$402jkQlmdf54bWp4/Ldk8Oz2L4syBYgC2ACGL76RTBMZFYrcoIBii', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-23 18:31:09'),
(122, 'dbaacb627139225570940a8d88d4372a02e07a39505b39918101d170b1eb4ba7', 'Hidden', 'Hidden', 'user122@hidden.com', '$2y$10$ewYABTf3XX0Sca.k4Z7dtOXRntg.8eBhPzcPm7VQBZ6/OPMMAPPBK', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-23 19:27:41'),
(123, 'e29603b349847c21a3db3625e781c737ea1514581d4efed629cb69040e4f029a', 'Hidden', 'Hidden', 'user123@hidden.com', '$2y$10$hn9gJttIq.o1/6wlzRUNbu9zdluqCzVlRKy5DKMGzyUzHQyLR3Hn2', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-23 20:04:34'),
(124, '7d2cf0d9d0d9582e71aa4318171f3cb193c583886406f5b6da01fe61c0f86014', 'Hidden', 'Hidden', 'user124@hidden.com', '$2y$10$Be5.TXg2Kn6937E570Y2Oe4qW91No16C42U2m8D8XzAMTpOmXVYsK', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-23 21:07:43'),
(125, '0d2f77799a07615fb0b451589276e1d3872b239cf16cdd4771e0f06bf15c7bbd', 'Hidden', 'Hidden', 'user125@hidden.com', '$2y$10$R4NYilB6/dG8KdSFrDqrbu9C1Gy5AYDhQ6Oo1UXypWne..PVS/j26', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-23 21:31:29'),
(126, '142dc434576d4b2a2720ba3a7a5966b06df17e0b0443f4e9c89c51b52a0e7f86', 'Hidden', 'Hidden', 'user126@hidden.com', '$2y$10$1ZbBzGTp5TzLWSHP8wBfZ.7TxCbEtNogGSLhrrcyZUKMSG5A9k8aa', '', '0000-00-00 00:00:00', 0, 1, 2, '2025-01-23 22:23:02'),
(127, '8b0d76cb839fdcb0656cb1a1f30bc0925a76666f4087e6ac73bffd7e07904da3', 'Hidden', 'Hidden', 'user127@hidden.com', '$2y$10$0fCePcuDqvaf58SfPSHKu.Tb4bMFjnIJ8bK5iboliPJIOn4Sul202', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-23 22:28:16'),
(128, '879dac72fac1fd4ff551c3733bb101ce5c9902e8001cc0fb286c35700879e3dd', 'Hidden', 'Hidden', 'user128@hidden.com', '$2y$10$WK99XNO/ueQQsJB2oclsj.oCrDw.uAnmRKuUQThH1VwlQQqQG1MwC', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-23 23:05:06'),
(129, '8bba7cafd0b58d3a1fa352d915b3a7de09b6849d39f025bab4c7db8150e9eab0', 'Hidden', 'Hidden', 'user129@hidden.com', '$2y$10$bFBiwcc.3mabrxE5CrLSP.gjqh0A2ViE13mlxw2JX79/bcWsTz3B.', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-23 23:57:36'),
(130, '7d2f67defe32a2e6d3ce4771e035892ecd547ca9ba728a658269815f1dcdc9c3', 'Hidden', 'Hidden', 'user130@hidden.com', '$2y$10$fJrhQ1.61jdcGtdHRIRHYOt.B6guRrbfiu8kNDnAnCp2Fbvky0jIO', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-24 11:29:14'),
(131, '9bbf55d761cff5732e61b6f6261244c418fafa39810ebf06e33849347f9f78b6', 'Hidden', 'Hidden', 'user131@hidden.com', '$2y$10$VuX467JC6eNOhoHp6XghqOD685axTkSu2CoXN848iZ2w83Jb9A016', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-24 12:13:43'),
(132, '4d68b640e11c344aea40978be477ec059755c7726e8cb81ef53536b75900fa54', 'Hidden', 'Hidden', 'user132@hidden.com', '$2y$10$4la4Gee6Vv572BhLnU6QLum11ddUIJpoDpoVD13Yj2fgyKO2H7zc2', '', '0000-00-00 00:00:00', 1, 1, 2, '2025-01-24 13:16:19'),
(133, 'ae0d918c1eab5a1b53fa184bc99d199efab2faf507514fd04592683eeaf66987', 'Hidden', 'Hidden', 'user133@hidden.com', '$2y$10$JdU5H47wI9Z3Q4Igt2WgQOS2H7zHFowrsgBg40Xe2iJUI3SDX9LNq', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-24 13:58:20'),
(134, 'f0ed9f66e43e0462cb5ca6cf237f89f090f6dd6d28a759aef6a523b047317cd7', 'Hidden', 'Hidden', 'user134@hidden.com', '$2y$10$8Bg3wrHVqHjd.8hAlVhg..nDH/ixNAn2xBrnEwPp6hmtlU/7ZktTS', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-24 14:02:43'),
(135, '23e5a6aa291431d59cfc0f89e2b9dfcb82bcbb370aadce3ddad50dcc53109d65', 'Hidden', 'Hidden', 'user135@hidden.com', '$2y$10$o2gzXoW.PIdnbllPXV2GdOgtft6BFv73z/ORnUzboEFe6kRsYtxwK', '', '0000-00-00 00:00:00', 1, 1, 2, '2025-01-24 16:31:11'),
(136, '8dca3f9697a2a5652ce4d1dbf5229aab5f519beffa45f79094d5c90536a55248', 'Hidden', 'Hidden', 'user136@hidden.com', '$2y$10$jRoco5eMYU8dOpqmXzUB0uY2zC3owYXE6JOj/6s2lct2GU.IqCkAW', '', '0000-00-00 00:00:00', 0, 1, 2, '2025-01-24 17:28:55'),
(137, '1e828aa692dabe3369f95c1b77afc09b7985db76ed67137aa7e8bad165496f96', 'Hidden', 'Hidden', 'user137@hidden.com', '$2y$10$15Q2LPkbCLTRW4Sqs2188O.8Mlyfqlu0rsaQxrHj0S1/4PlfzZWYq', '', '0000-00-00 00:00:00', 0, 1, 2, '2025-01-24 17:31:05'),
(141, '579ee699d9c5290b59cbdce2bc0ae4cc0a8d28b10725bd9f88be3c44025157a7', 'Hidden', 'Hidden', 'user141@hidden.com', '$2y$10$Qwb5qqcysJP2HchstnEhmuPl55850UFFSYUvAmvu56NWiquWZqLfi', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-24 17:35:39'),
(142, '4eac9a034c1ac3083d299a58bf5d48451463e11516ae1c4d111c9c0ebe4c8db9', 'Hidden', 'Hidden', 'user142@hidden.com', '$2y$10$Cyei4zdGDSeanzat8YjjZefP1uH3W/QrgC2sUYMscaSJSZwwlK6Oe', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-24 17:57:16'),
(143, 'd24897649bbdd21432322383d094466adadba74282b78a84bd474efb68980d13', 'Hidden', 'Hidden', 'user143@hidden.com', '$2y$10$PsH6eaf8A70yxlcnwHlidutKvQYM4nusCAoZFJbfmwF99mbo9xDGi', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-24 18:09:15'),
(146, '66e360f7aa94e7dd2db4d704779ca17b131af5cf8c98bdc1b1e9b802059b0546', 'Hidden', 'Hidden', 'user146@hidden.com', '$2y$10$KsXiGByzwB1k021YSp0rwOuTnJ/9WllCaU8TR/Xcwy2aYg6u9rhdu', '', '0000-00-00 00:00:00', 0, 1, 2, '2025-01-24 21:12:27'),
(147, 'e992d6ecb73144037efb858b15952c634b6492a61a52953555f3d66cbe5497f2', 'Hidden', 'Hidden', 'user147@hidden.com', '$2y$10$DsLVR1dVP.fS/mMGLtfbw.yrQnzwKQrRU6ThcC0EvGgIUcXk0AhqC', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-24 21:13:35'),
(148, '6724526905b215ea8da2643797c737d0ade88b5d1c81a91e978dc07816044b2e', 'Hidden', 'Hidden', 'user148@hidden.com', '$2y$10$FIZVuOBdx6QteH6mx/U6Y.fLbH3mBSkbxMpde/zJsV.wkeyfNNyyW', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-25 10:49:01'),
(149, '7a04f848947f0e9929b4a19e8ae0d4fa76da6b86d60094527d68395a6f7334d2', 'Hidden', 'Hidden', 'user149@hidden.com', '$2y$10$h7uBaJD.q.kBKeKOcj2rX.NV09WsKzLRJUZw/q5aVacr156X.zgIy', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-25 10:49:08'),
(150, 'a28726fd19ffb8688139948bde919614ae59d176476908ee451e3bf028552c8e', 'Hidden', 'Hidden', 'user150@hidden.com', '$2y$10$f4/zuQ72j/uhi.Layno5H.ZgTcuH1.HiZyHH7iv2yLm7eij29Lq1.', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-25 13:34:51'),
(151, '502a2788492a2bf671b487509f0d42b07f8d2fc0da41f744f5f39dcbff5a4bd2', 'Hidden', 'Hidden', 'user151@hidden.com', '$2y$10$OkxPwKcMqhIED.za9EADqegUGa/Okqp4de8W.vMHrZoeIrwRQP5.S', '', '0000-00-00 00:00:00', 0, 1, 2, '2025-01-25 13:42:52'),
(152, '9f19a87daaa3a8c71190c777dbf25bfebcc592ffaf6756af06f4a1ced195dde4', 'Hidden', 'Hidden', 'user152@hidden.com', '$2y$10$8O1GOihcHQHZcH/jV0GBX.c3rmwowtmC1rmNzG.DVaIc3VH4J27Z6', '', '0000-00-00 00:00:00', 0, 1, 5, '2025-01-25 13:43:59'),
(154, '44062a52289278d9a44b095e2b0a87ec5c07ae92e86b1f0fac1d897616883809', 'Hidden', 'Hidden', 'user154@hidden.com', '$2y$10$r21RZocLBKIINeOQOTsafuEvNwX4bt4J4/E6CAPmY942rSmWwRBqG', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-25 13:48:33'),
(156, '5e78de61e49b998bf77e5df3c3da7dcd9779c22736c574ac5080b689fbca30c4', 'Hidden', 'Hidden', 'user156@hidden.com', '$2y$10$NBaQGTzkfB7Bh8PQk1mlwuJBAZAkwWuoJmK3NUmqaMH1JhsFRnaCe', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-25 15:12:38'),
(157, '250d2d47fa90881224826e0b248ede0df932d54e0e3307d649e7db772a074145', 'Hidden', 'Hidden', 'user157@hidden.com', '$2y$10$AAAFjdGE7zzgwvAWKWkrneUAu4M2vmMYVqMLkhDNmG3N4ed.ZB4qe', '', '0000-00-00 00:00:00', 1, 1, 2, '2025-01-25 16:13:24'),
(158, 'b8d862b54585e17a99f45ca2d1506fb985e71293f1aee0d0c915f132ccfcb913', 'Hidden', 'Hidden', 'user158@hidden.com', '$2y$10$t2NPlkrafv14cbhrrPamDesj33IZCS7UYTR1TxLV4TVMmF3Lsrqdq', '', '0000-00-00 00:00:00', 1, 1, 2, '2025-01-25 17:15:19'),
(159, '0deb0b616a4f8d9a4f98764fd7a03494375477e0f746c53626273bd08be7eb7a', 'Hidden', 'Hidden', 'user159@hidden.com', '$2y$10$MUWSLpr87J8jzAGjgIOFC.zBH2zJxHiUQsXRfPghe9iYXY.sGhFx2', '', '0000-00-00 00:00:00', 0, 1, 5, '2025-01-25 17:17:25'),
(161, '220cee9e8580d7e73d67de7f2ef2b62803af7526eebfc4183a95f4e2ee9ee258', 'Hidden', 'Hidden', 'user161@hidden.com', '$2y$10$odvg8l9QU8sVdynQJ9zW4.hFcPiCYtt99VGuoRSe9viT6zMk5UGTm', '', '0000-00-00 00:00:00', 1, 1, 2, '2025-01-25 17:47:16'),
(162, '2dfbed779ee5ac47c58920e533b8ca3ed1e301ba5f984ed0f8e2bbb843bffaf3', 'Hidden', 'Hidden', 'user162@hidden.com', '$2y$10$UU/JTXTafVEE/iTzfy3SK.RajCxKlFICqzMCFhSwBV1cG6dVxYQ5K', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-25 19:08:12'),
(163, '70ace0d2aeefb2c71519d6d6e190bb88b4b5c96bfb8ef7301eb0c3f7ddea8982', 'Hidden', 'Hidden', 'user163@hidden.com', '$2y$10$umjxxH47K1mgNS5lRCVLG.qL/RoE2VIim35UBnP/gl/CwHpeJX85q', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-25 19:29:50'),
(164, '43b81c33c1ba0af0e35edcb185e501af50aadc2ecf1183cc01766c4c20e71cde', 'Hidden', 'Hidden', 'user164@hidden.com', '$2y$10$3MVPfsLQJKHdYisKVMQfOuULv9.mVkNFCbvr10HAU68SDzGvPkMJ.', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-25 19:35:04'),
(166, '311cea470d658c6d0e9d491527c69e2140430f64442e7a6ff0de234f7a0c3f81', 'Hidden', 'Hidden', 'user166@hidden.com', '$2y$10$UTiRxmt9yYn5x1eGLjgv1.M67QdmJ5BY2yxMLeu/kdjtD2.AkMJAu', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-25 20:54:19'),
(167, '4be7b24385e6411a49200e9ccd2f82a31d78dd942f1f97f958627e6b64057e2b', 'Hidden', 'Hidden', 'user167@hidden.com', '$2y$10$idFbjHSesXIh5gNjPfMp9ezXQXHd8YhVf8HEC7oW185MG/Qg.nP9a', '', '0000-00-00 00:00:00', 1, 1, 2, '2025-01-25 21:29:14'),
(168, 'bf80520a7d74d78bb76618760033c98242db15b36312d2fd797c58fb252a5925', 'Hidden', 'Hidden', 'user168@hidden.com', '$2y$10$uDVS/KoLT16RFyniTp6XFuSsdUhXEuPXYuPXs.9MM0m.VwREoLpIu', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-25 21:40:53'),
(169, '3bf0cc992832353925b63792d007f0c3ab41b603410559f1d675f506382345a5', 'Hidden', 'Hidden', 'user169@hidden.com', '$2y$10$N78mETK30bl6jayRSgviK.hEi0UeQm3kq6WE7FVFMQsv0BZDRIVPW', '', '0000-00-00 00:00:00', 1, 1, 2, '2025-01-25 23:19:08'),
(170, 'b13961ac3bbb93acf454b9189aaf0b5f007e7e5db2ca61bf2efe203afeec45e5', 'Hidden', 'Hidden', 'user170@hidden.com', '$2y$10$Z8OF4h08pXP2EqkLibfNX.zYZoNtoe0f1tPzMKtOspUN8hoijupQW', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-25 23:50:00'),
(171, '80f7226ea6f19901d1a1956a48db8f37a6d1560f0f1488d51ef84c210bf06f52', 'Hidden', 'Hidden', 'user171@hidden.com', '$2y$10$6jwDpUeba6H5ZklvhaeYQueywoERuzhdHi2C8dvZsn20lBJz/4oCC', '', '0000-00-00 00:00:00', 0, 1, 2, '2025-01-26 03:14:00'),
(172, '2933b14dc502c74d2de621be08e33413f92280605235bcdbcd30dd55d06df1ee', 'Hidden', 'Hidden', 'user172@hidden.com', '$2y$10$BEE/QdVjbexcqJ7nU74F/u8jQrSGdHpuzy.EmyFMgzIAU0ZMmgLMW', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-26 03:16:18'),
(173, '3dbae0168b735afded71afa093968099deb54efada156c76e6b6cd3106a8a399', 'Hidden', 'Hidden', 'user173@hidden.com', '$2y$10$UgzAf1o4bFMSaGU/7wtJ6usX4GEG1/BLKrJYolMArvyJCTgNqPDJC', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-26 09:41:16'),
(174, 'fbb7e302a69a9ccaa8cd0e1f5beae3c9ef9642043af4febaa770ff84d37e51c5', 'Hidden', 'Hidden', 'user174@hidden.com', '$2y$10$oAjdzwDa857UY7T/d/ahKe32q2IHk2eUU3gMWyPgpUJyNiiE3aBZW', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-26 10:22:25'),
(175, '47ec228357128c593cbfc256bfe2ef7d0788cb51e3354511120d846bc19f0247', 'Hidden', 'Hidden', 'user175@hidden.com', '$2y$10$IEfm5cFpXsAxSf1NzdVAA.wqw5CX2RLjZHDfflOuqF2UUDFxWDubm', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-26 11:39:54'),
(176, 'a1acb4d23e5cc057c1c09212d374c77a8c0920929708bc423a9584ad606c21ba', 'Hidden', 'Hidden', 'user176@hidden.com', '$2y$10$s4HY2PIhMU.JNanINdz6x.1bC6OeV2eAvrSRyoJ1tu5q0s4rMIGrG', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-26 13:23:00'),
(177, '5ddbfcadc42b6f54c7f3ceb0735a14bdafac5a7ff504816aec2225f144f4a6f3', 'Hidden', 'Hidden', 'user177@hidden.com', '$2y$10$mul5HQ5/zC7hUqEobJfLR.83GnE1V4UO8/TtYfKQ2AcSt6tqMiToa', '', '0000-00-00 00:00:00', 0, 1, 2, '2025-01-26 14:28:46'),
(178, '0f6206977837da1a13ea24f4ae39fbece282ec56e119b8f5f0d2c6f72308faf3', 'Hidden', 'Hidden', 'user178@hidden.com', '$2y$10$V8nvA0ufr8wLOGY4M0hqUu/3QN/SFc.rg2ikEJ/rhfAWBtQuCvmyy', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-26 14:30:19'),
(179, 'a6cb371fc331515a4faa19d8ac00add1222ffce9d91c96a4cab6a127ec1b3225', 'Hidden', 'Hidden', 'user179@hidden.com', '$2y$10$R9pzxek9tVkmlGDjynt2VebIj9Z319K1PreBiBXUWjImSJ34.mPzy', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-26 14:31:16'),
(180, 'b8ce431c3447fa244b0078d24359afc416f747de9b10552ae232868d52887740', 'Hidden', 'Hidden', 'user180@hidden.com', '$2y$10$dIFuob0oZgCtQeYQ3Xy0ne3nR/s3ip.O9ZB1fMcWIEMwAywVVuAgO', '', '0000-00-00 00:00:00', 0, 1, 5, '2025-01-26 14:35:35'),
(181, '389d4f9ddca4668158d7e58cb697fe327cc443b9209773dd1ed1c85b4c9ba96e', 'Hidden', 'Hidden', 'user181@hidden.com', '$2y$10$eKsuObUW6MHJgfBSXk2mlOuh/m7BGmosCiAOhQTvfyGG5vxiO8SAW', '', '0000-00-00 00:00:00', 1, 1, 2, '2025-01-26 14:37:25'),
(182, '0358f1d37f9e83dbec51a6736c49a5820f409adeafdf2bfb165509038916aaf7', 'Hidden', 'Hidden', 'user182@hidden.com', '$2y$10$StDXUGXIhAa9nw9w4IIgO.e.OlRvOm3IByKpFJhcUEvXFpZwFqz6y', '', '0000-00-00 00:00:00', 0, 1, 2, '2025-01-26 14:48:00'),
(183, '15b65b7b22280f6418d874d3cc6081be944f341b1ec9779c81e4139a9193eb1f', 'Hidden', 'Hidden', 'user183@hidden.com', '$2y$10$YLbaGszqjD3SOcV6QN5Que7RiCg6ex/7wJkKa62/KOzmAJgTKMOGm', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-26 14:51:17'),
(184, '9bbdacc76f47bfe47d9fd00182b6f802deaa7f2bccaa92e90f99e1db74da36f8', 'Hidden', 'Hidden', 'user184@hidden.com', '$2y$10$ZhFQJoGEoG0EwlnAlEcItuWXtNCOU9kXrWYAs31IxV74UUV35MLH2', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-26 17:11:40'),
(185, '89885d22ab6fd2d0d1b90a1e064cdefe9cd8af2890d70dba0774cc1d305df873', 'Hidden', 'Hidden', 'user185@hidden.com', '$2y$10$D02gHjccVhCo9nl45.8.v./e5i28IJac5y/elgMgJYux2ddqCsknK', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-26 19:16:07'),
(186, '43c44c419969c5f367a8f10ff7286fce65472057222e8717656c2c6690248cd9', 'Hidden', 'Hidden', 'user186@hidden.com', '$2y$10$5pBUXHX/mV9mqA5tANx0W.WFiNDmCMkFl9TtXQtOIublCLY93WK3i', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-26 19:16:34'),
(187, 'ce0ba750c77a0d076f8cd464d59020112c54353af5a6db653e90304aeb8c54c9', 'Hidden', 'Hidden', 'user187@hidden.com', '$2y$10$hTpdn/Lk7UoqhyipSli1Eure9exwD5QmK6O73tqVQ8X7TKnZAmveK', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-26 19:31:10'),
(188, 'fe689620c02c5bae528cfd5deca26079535addb88f83100fa50defc1850b81f6', 'Hidden', 'Hidden', 'user188@hidden.com', '$2y$10$0QiGrum7GmjUbLuOOeQkz.XEPs49ypyBA1FucNIXRn5Z7ddXtDKA.', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-26 19:53:32'),
(189, 'b4feee1a107734154da02532a8d81dbd0a92322c796f03fdf41735b6a7ad8b8b', 'Hidden', 'Hidden', 'user189@hidden.com', '$2y$10$Z6v/S6.NnlDMSmCzvdkMyu7DbPwjlm0HUeRbi2PPtfZ0dOH/POudq', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-27 10:29:46'),
(190, '32c13ae4a963b27933639bd984cb83c693d4ba91e37c24c480369487d3c399c0', 'Hidden', 'Hidden', 'user190@hidden.com', '$2y$10$LwbKQDicSu4YhWJkCr9EX.8KaRewXMAK.KNeP2tLclkWb14u5I7Yu', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-27 10:50:09'),
(191, '3c4b5d1b0cbf03c5e077b9f30f46b31e762f8a1545372908b2381fbcf1ee2d9c', 'Hidden', 'Hidden', 'user191@hidden.com', '$2y$10$BmT3K4vg0Os1ueFHRoU20OiMqbsrHXKr7bWg92PLJRC8nrN7ka.1a', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-27 11:45:12'),
(192, '6bac57a07e5773be8879dbe1a3530520be9a6a604c48d69fcabae431441c3a6f', 'Hidden', 'Hidden', 'user192@hidden.com', '$2y$10$LMWnkas.qAehXNFb0JDtxu3xHTjl3Q8laR2320SIyDHpZxpHXpAqO', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-27 13:09:29'),
(193, '8b16b46ba76bc4ad95ca97d447df70a6fa2317f400e3f021ba38c0427b7cbab2', 'Hidden', 'Hidden', 'user193@hidden.com', '$2y$10$yQZAcTTO6RTBlgJcAtBEKeiMSXAeEWFgdcTK2/h06sKT6Ql9q8FoG', '', '0000-00-00 00:00:00', 1, 1, 2, '2025-01-27 15:44:24'),
(194, '4f1c9c6fe43a585467eda5d3b39471ac0d4ca6c7614e343578173b6594787bc4', 'Hidden', 'Hidden', 'user194@hidden.com', '$2y$10$x9zgOancLlaqp11VSRvhuehM/eumTAvHa9EFT1TZ3MwVRRWd1jbNW', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-27 18:05:18'),
(195, 'e7477eeceff07d71d98452d8ab93a3e59b31a518095907766226664ab76f4649', 'Hidden', 'Hidden', 'user195@hidden.com', '$2y$10$mTcj3pyIc0/BeVejznYfFODETk3WlqHugCdhkR92zSvi/ZLLsOPK6', '', '0000-00-00 00:00:00', 0, 1, 5, '2025-01-27 18:49:03'),
(196, 'b44f0cbac520d02094fd07d0aced10f58aee8e23843767bc0fae9e1031772368', 'Hidden', 'Hidden', 'user196@hidden.com', '$2y$10$iSxpZbgfNms0i1bSmdPGR.x4RBmXaiyLtSUIEK6nkPREpmsXaiwhS', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-27 18:49:43'),
(197, 'b5333ce6e9d5782aa4ea90d8349860ea030721dc48fa14515fa9e66363a9d740', 'Hidden', 'Hidden', 'user197@hidden.com', '$2y$10$3X6aDoa1qHyDOWL1eA1/yeekl2Kf968pn50puBmO7HpIbFmf4xP9y', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-27 20:44:47'),
(198, '261bf6c044241a5e43650ef4e00188619fd632d76985982b97e51932f1724963', 'Hidden', 'Hidden', 'user198@hidden.com', '$2y$10$Hm7s1ribFFesedcJO2z8xOgCuY9icHEAxuR5mbDt5qqp7bAIDo9Dm', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-27 21:05:34'),
(199, '7e8a63fdf5daea74414ba4bedcc7a90df9210680e5844e8867e03204f7205c92', 'Hidden', 'Hidden', 'user199@hidden.com', '$2y$10$sr2yVhFls.Mkd/.wVFWPzO5TRsqilcQMQPiMYJmV569qCAbX6aJVu', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-27 22:15:52'),
(200, '57c9a13b1a13424a5aa068668018724c88bf8df84d21b0c8619e8edc29de2204', 'Hidden', 'Hidden', 'user200@hidden.com', '$2y$10$Q0H3bILtIsbCcDIVkCSA5u2097uJsTRYbS2I5GxDZLftrCx5EsMMC', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-27 22:38:54'),
(201, '9de8a79e20b405ddd21216364e8f91852a78f22dcf44eb3e05128486533d3844', 'Hidden', 'Hidden', 'user201@hidden.com', '$2y$10$mc27S.j.KsSIomOBWxEgWuomJh5pxJw09HqUch3nV3nttV.se9LC6', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-28 21:34:45'),
(202, '3010e2331f600f07d0431d1d7b553b5f8ba9e4778473af0ad89ab2afdce82d9a', 'Hidden', 'Hidden', 'user202@hidden.com', '$2y$10$/vwYqbOcb5ukNIa6EzRZB.qr6.qx1HNuTWynvwroOq3szPfVqB1.G', '', '0000-00-00 00:00:00', 1, 1, 2, '2025-01-29 02:34:01'),
(203, '6a999a25e09385e357c05c098bc27aa47cbd270348a3f0d1d470833fecd7fa7b', 'Hidden', 'Hidden', 'user203@hidden.com', '$2y$10$k.QffRD6Fe4Y778P7TiI/ewwzyYeke1TdbZK4o4XoM3Y92oBKPlWi', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-29 10:12:33'),
(204, '68ba7a929d93a2c4c0494dd6af4bfe6916c12de59c9525b50c609ed39c50315a', 'Hidden', 'Hidden', 'user204@hidden.com', '$2y$10$Nws7SdZGyWBhaVtTEidnvOnugE4g.IcjDwMQN.NBlkuQ/2dNo63L2', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-01-29 14:32:50'),
(205, '9d62f9b1f5fb4c28bc0799b6293c589e1ab2e05f193fb4bd357512c65b475801', 'Hidden', 'Hidden', 'user205@hidden.com', '$2y$10$JI1yhZsNplCWlAC./ihZUOTKxJeMPG05M31RQ6dwNkN1/kGqlEPKq', '', '0000-00-00 00:00:00', 0, 1, 2, '2025-01-31 18:10:49'),
(206, '8b71e915a90b65bcf42a97cdcea1f8574b0f87d1056e872cb59e274ce31d5df7', 'Hidden', 'Hidden', 'user206@hidden.com', '$2y$10$rMLIuzAUtQAL1m6Kk2EX4Ouch1hKsk.hqSVp2R30x.7e3LOgxGoIy', '', '0000-00-00 00:00:00', 0, 1, 2, '2025-02-03 19:34:36'),
(207, '30da58bb917700aab6dfd9eb5e71336d6c63bc1a6cafa61a519dc56268c8510c', 'Hidden', 'Hidden', 'user207@hidden.com', '$2y$10$A2dw/VOGEvtePmcVxr.C7OwuTwGssuaeTTUjcLumPych4kRgZtpLa', 'naknadno', '0000-00-00 00:00:00', 1, 1, 5, '2025-02-03 19:36:05'),
(211, '2175abc257eaa86e777e5b0a6ec826dd5514161e0a12e88f125027e624b228bb', 'Hidden', 'Hidden', 'user211@hidden.com', '$2y$10$cVeyT104icN1Dl86WbHEWuhD0yOWKMgi1HXR6rT9v8djP3neaKmdG', 'naknadno', '0000-00-00 00:00:00', 1, 1, 2, '2025-02-06 15:04:22'),
(212, 'd4cb2bfaab99d1644fea08e3f4281b8f3baeac5b8f8995d0393f4f75d37a6e65', 'Hidden', 'Hidden', 'user212@hidden.com', '$2y$10$oo2T98ou7qvro3lP6PKz0Oou0tiaKno7LgTdWSp4QZJgwrQ2QQ3F2', 'naknadno', '0000-00-00 00:00:00', 1, 1, 2, '2025-02-06 21:24:28'),
(216, '1ebd24600e7ae9fb0e7fe20d2796d08f62054a8e0a95a2b238b54f7e0dda667b', 'Hidden', 'Hidden', 'user216@hidden.com', '$2y$10$.1k6dQwNSCIiWgTsfnsTH.86faujJ2SaOvG/DYQf55958lunl/eGi', 'naknadno', '0000-00-00 00:00:00', 1, 1, 5, '2025-02-10 12:54:55'),
(219, 'e7d2cfa2ae54d2e34cb3d5b8c9072350ae21542bf8d83bac85e655b499c2c7ff', 'Hidden', 'Hidden', 'user219@hidden.com', '$2y$10$bprS1NEMen50z2.q9XzZ9u.1dBinpTHpDffVgQ9hqoRXnaAdWfgbm', 'naknadno', '0000-00-00 00:00:00', 1, 1, 5, '2025-02-10 16:27:41'),
(228, 'f0c3a194f5e9abdc7cd9d70845bb16905e495f3c3127106155331083a9db8742', 'Hidden', 'Hidden', 'user228@hidden.com', '$2y$10$H7iD9cNk44QzODP89Qw4X.4S5Eabh/iMq3lZE4VxcluEQDgmLzsm.', 'naknadno', '0000-00-00 00:00:00', 1, 1, 2, '2025-02-10 17:39:11'),
(229, 'b23702a871baa92ddbd7c6f5d8295168c18d6c983795739c04c5894f80fb6a34', 'Hidden', 'Hidden', 'user229@hidden.com', '$2y$10$4mGw66W7ad7kaziF96N8rOoY0.LVv4PnMalCD0h0SP2LDBliLPIwy', 'naknadno', '0000-00-00 00:00:00', 1, 1, 2, '2025-02-10 23:57:09'),
(232, '33c30c4daa58ab3c6b94e514ed742949266e9ed7fa28a340a6a6e78956bcc7b0', 'Hidden', 'Hidden', 'user232@hidden.com', '$2y$10$Corgu1BbmchD2d/OIBpbPeD9x.94XwwDd.yhu1YVBg6rWAKOJdi8m', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-02-11 10:15:26'),
(233, '4056682e4fb37066b68f737bade51c10e367269d3c4200606cac4fedb5623101', 'Hidden', 'Hidden', 'user233@hidden.com', '$2y$10$Zg8fhmLTInmK5RDn.2urvO28OT/xsIwXdrT.XTHg.qbgHUkgMTHlO', '', '0000-00-00 00:00:00', 1, 1, 2, '2025-02-11 12:49:30'),
(235, 'e685eda25decf3357c53c966f7679f79444bbfcb06925e5cb83167951db53e9a', 'Hidden', 'Hidden', 'user235@hidden.com', '$2y$10$d5z7WVbsqoDpkvnehInsu.BHPJU6Y2gg5CFdEDZZsIezQMqwO0jCy', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-02-11 16:22:14'),
(236, 'e417e513031cce08d9152074dc5f98fc08bd668849df38f5a13aea80215f9a5b', 'Hidden', 'Hidden', 'user236@hidden.com', '$2y$10$mOSrTMKa9/zMiJ73FOtMC.X51wcBJhGpePBzDOIj1j/nU34mF2R9i', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-02-12 10:19:25'),
(237, 'bc368e50d17ad6991d94fcb8eb785e8a0bf1b0f6a3807e4692d6bbb4044a6f56', 'Hidden', 'Hidden', 'user237@hidden.com', '$2y$10$qhOObn0KWVPU2mz81MSRpOfE1yHc.7VrjuwU/y1xLdLAuL.mXjYQW', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-02-13 11:49:06'),
(238, '144c0f724cc02cd3d9ad75185a6f4b2f0e12fa60ac8f514a7874a0d40158cac5', 'Hidden', 'Hidden', 'user238@hidden.com', '$2y$10$wgnw5h34wnfmk3Lz1SPJw.ipR7eDJl0v1/vkqHedUCR0866uYGLUu', '', '0000-00-00 00:00:00', 1, 1, 5, '2025-02-13 15:27:23');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `generirani_zadaci`
--
ALTER TABLE `generirani_zadaci`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `login`
--
ALTER TABLE `login`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `mysql_errors`
--
ALTER TABLE `mysql_errors`
  ADD PRIMARY KEY (`ID`);

--
-- Indexes for table `spcp_lessons`
--
ALTER TABLE `spcp_lessons`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `spcp_sol_tasks`
--
ALTER TABLE `spcp_sol_tasks`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `spcp_tasks`
--
ALTER TABLE `spcp_tasks`
  ADD PRIMARY KEY (`id`),
  ADD KEY `lesson_id` (`lesson_id`);

--
-- Indexes for table `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`ID`),
  ADD UNIQUE KEY `email` (`email`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `generirani_zadaci`
--
ALTER TABLE `generirani_zadaci`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=501;

--
-- AUTO_INCREMENT for table `login`
--
ALTER TABLE `login`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=273;

--
-- AUTO_INCREMENT for table `mysql_errors`
--
ALTER TABLE `mysql_errors`
  MODIFY `ID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=93;

--
-- AUTO_INCREMENT for table `spcp_lessons`
--
ALTER TABLE `spcp_lessons`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=16;

--
-- AUTO_INCREMENT for table `spcp_sol_tasks`
--
ALTER TABLE `spcp_sol_tasks`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=18;

--
-- AUTO_INCREMENT for table `spcp_tasks`
--
ALTER TABLE `spcp_tasks`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=308;

--
-- AUTO_INCREMENT for table `users`
--
ALTER TABLE `users`
  MODIFY `ID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=240;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
